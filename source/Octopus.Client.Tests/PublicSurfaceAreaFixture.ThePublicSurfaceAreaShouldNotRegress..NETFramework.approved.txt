Octopus.Client
{
  class DefaultLinkResolver
    Octopus.Client.ILinkResolver
  {
    .ctor(Uri, String)
    Boolean IsUsingSecureConnection { get; }
    Uri Resolve(String)
    String ToString()
  }
  interface IHttpOctopusClient
    Octopus.Client.IOctopusClient
    IDisposable
  {
    event Action<WebResponse> AfterReceivingHttpResponse
    event Action<WebRequest> BeforeSendingHttpRequest
  }
  interface ILinkResolver
  {
    Boolean IsUsingSecureConnection { get; }
    Uri Resolve(String)
  }
  interface IOctopusAsyncClient
    IDisposable
  {
    event Action<HttpResponseMessage> AfterReceivedHttpResponse
    event Func<HttpResponseMessage, CancellationToken, Task> AfterReceivedHttpResponseAsync
    event Action<HttpRequestMessage> BeforeSendingHttpRequest
    event Func<HttpRequestMessage, CancellationToken, Task> BeforeSendingHttpRequestAsync
    event Action<OctopusResponse> ReceivedOctopusResponse
    event Func<OctopusResponse, CancellationToken, Task> ReceivedOctopusResponseAsync
    event Action<OctopusRequest> SendingOctopusRequest
    event Func<OctopusRequest, CancellationToken, Task> SendingOctopusRequestAsync
    Boolean IsUsingSecureConnection { get; }
    Octopus.Client.IOctopusAsyncRepository Repository { get; }
    Octopus.Client.Model.RootResource RootDocument { get; }
    Task<TResource> Create(String, Octopus.Client.TResource, Object)
    Task Delete(String, Object, Object)
    Octopus.Client.IOctopusSpaceAsyncRepository ForSpace(Octopus.Client.Model.SpaceResource)
    Octopus.Client.IOctopusSystemAsyncRepository ForSystem()
    Task<TResource> Get(String, Object)
    Task<Stream> GetContent(String, Object)
    Task<ResourceCollection<TResource>> List(String, Object)
    Task<IReadOnlyList<TResource>> ListAll(String, Object)
    Task Paginate(String, Func<ResourceCollection<TResource>, Boolean>)
    Task Paginate(String, Object, Func<ResourceCollection<TResource>, Boolean>)
    Task Post(String, Octopus.Client.TResource, Object)
    Task<TResponse> Post(String, Octopus.Client.TResource, Object)
    Task Post(String)
    Task Put(String, Octopus.Client.TResource)
    Task Put(String)
    Task Put(String, Octopus.Client.TResource, Object)
    Task PutContent(String, Stream)
    Uri QualifyUri(String, Object)
    Task SignIn(Octopus.Client.Model.LoginCommand)
    Task SignOut()
    Task<TResource> Update(String, Octopus.Client.TResource, Object)
  }
  interface IOctopusAsyncRepository
    Octopus.Client.IOctopusSpaceAsyncRepository
    Octopus.Client.IOctopusCommonAsyncRepository
    Octopus.Client.IOctopusSystemAsyncRepository
  {
  }
  interface IOctopusClient
    IDisposable
  {
    event Action<OctopusResponse> ReceivedOctopusResponse
    event Action<OctopusRequest> SendingOctopusRequest
    Boolean IsUsingSecureConnection { get; }
    Octopus.Client.IOctopusRepository Repository { get; }
    Octopus.Client.Model.RootResource RootDocument { get; }
    Octopus.Client.TResource Create(String, Octopus.Client.TResource, Object)
    void Delete(String, Object, Object)
    Octopus.Client.IOctopusSpaceRepository ForSpace(Octopus.Client.Model.SpaceResource)
    Octopus.Client.IOctopusSystemRepository ForSystem()
    Octopus.Client.TResource Get(String, Object)
    Stream GetContent(String, Object)
    Octopus.Client.Model.ResourceCollection<TResource> List(String, Object)
    IReadOnlyList<TResource> ListAll(String, Object)
    void Paginate(String, Func<ResourceCollection<TResource>, Boolean>)
    void Paginate(String, Object, Func<ResourceCollection<TResource>, Boolean>)
    void Post(String, Octopus.Client.TResource, Object)
    Octopus.Client.TResponse Post(String, Octopus.Client.TResource, Object)
    void Post(String)
    void Put(String, Octopus.Client.TResource)
    void Put(String)
    void Put(String, Octopus.Client.TResource, Object)
    void PutContent(String, Stream)
    Uri QualifyUri(String, Object)
    void SignIn(Octopus.Client.Model.LoginCommand)
    void SignOut()
    Octopus.Client.TResource Update(String, Octopus.Client.TResource, Object)
  }
  interface IOctopusClientFactory
  {
    Task<IOctopusAsyncClient> CreateAsyncClient(Octopus.Client.OctopusServerEndpoint, Octopus.Client.OctopusClientOptions)
    Octopus.Client.IOctopusClient CreateClient(Octopus.Client.OctopusServerEndpoint)
  }
  interface IOctopusCommonAsyncRepository
  {
    Octopus.Client.IOctopusAsyncClient Client { get; }
    Octopus.Client.Repositories.Async.ICommunityActionTemplateRepository CommunityActionTemplates { get; }
    Octopus.Client.Repositories.Async.IEventRepository Events { get; }
    Octopus.Client.RepositoryScope Scope { get; }
    Octopus.Client.Repositories.Async.IScopedUserRoleRepository ScopedUserRoles { get; }
    Octopus.Client.Repositories.Async.ITaskRepository Tasks { get; }
    Octopus.Client.Repositories.Async.ITeamsRepository Teams { get; }
    Octopus.Client.Repositories.Async.IUserInvitesRepository UserInvites { get; }
    Octopus.Client.Repositories.Async.IUserPermissionsRepository UserPermissions { get; }
    Octopus.Client.Repositories.Async.IUserTeamsRepository UserTeams { get; }
    Task<Boolean> HasLink(String)
    Task<Boolean> HasLinkParameter(String, String)
    Task<String> Link(String)
  }
  interface IOctopusCommonRepository
  {
    Octopus.Client.IOctopusClient Client { get; }
    Octopus.Client.Repositories.IEventRepository Events { get; }
    Octopus.Client.RepositoryScope Scope { get; }
    Octopus.Client.Repositories.IScopedUserRoleRepository ScopedUserRoles { get; }
    Octopus.Client.Repositories.ITaskRepository Tasks { get; }
    Octopus.Client.Repositories.ITeamsRepository Teams { get; }
    Octopus.Client.Repositories.IUserInvitesRepository UserInvites { get; }
    Octopus.Client.Repositories.IUserPermissionsRepository UserPermissions { get; }
    Octopus.Client.Repositories.IUserTeamsRepository UserTeams { get; }
    Boolean HasLink(String)
    Boolean HasLinkParameter(String, String)
    String Link(String)
  }
  interface IOctopusRepository
    Octopus.Client.IOctopusSpaceRepository
    Octopus.Client.IOctopusCommonRepository
    Octopus.Client.IOctopusSystemRepository
  {
  }
  interface IOctopusSpaceAsyncRepository
    Octopus.Client.IOctopusCommonAsyncRepository
  {
    Octopus.Client.Repositories.Async.IAccountRepository Accounts { get; }
    Octopus.Client.Repositories.Async.IActionTemplateRepository ActionTemplates { get; }
    Octopus.Client.Repositories.Async.IArtifactRepository Artifacts { get; }
    Octopus.Client.Repositories.Async.IOctopusSpaceAsyncBetaRepository Beta { get; }
    Octopus.Client.Repositories.Async.IBuildInformationRepository BuildInformationRepository { get; }
    Octopus.Client.Repositories.Async.IBuiltInPackageRepositoryRepository BuiltInPackageRepository { get; }
    Octopus.Client.Repositories.Async.ICertificateRepository Certificates { get; }
    Octopus.Client.Repositories.Async.IChannelRepository Channels { get; }
    Octopus.Client.Repositories.Async.IDashboardConfigurationRepository DashboardConfigurations { get; }
    Octopus.Client.Repositories.Async.IDashboardRepository Dashboards { get; }
    Octopus.Client.Repositories.Async.IDefectsRepository Defects { get; }
    Octopus.Client.Repositories.Async.IDeploymentProcessRepository DeploymentProcesses { get; }
    Octopus.Client.Repositories.Async.IDeploymentRepository Deployments { get; }
    Octopus.Client.Repositories.Async.IDeploymentSettingsRepository DeploymentSettings { get; }
    Octopus.Client.Repositories.Async.IEnvironmentRepository Environments { get; }
    Octopus.Client.Repositories.Async.IFeedRepository Feeds { get; }
    Octopus.Client.Repositories.Async.IInterruptionRepository Interruptions { get; }
    Octopus.Client.Repositories.Async.ILibraryVariableSetRepository LibraryVariableSets { get; }
    Octopus.Client.Repositories.Async.ILifecyclesRepository Lifecycles { get; }
    Octopus.Client.Repositories.Async.IMachinePolicyRepository MachinePolicies { get; }
    Octopus.Client.Repositories.Async.IMachineRoleRepository MachineRoles { get; }
    Octopus.Client.Repositories.Async.IMachineRepository Machines { get; }
    Octopus.Client.Repositories.Async.IPackageMetadataRepository PackageMetadataRepository { get; }
    Octopus.Client.Repositories.Async.IProjectGroupRepository ProjectGroups { get; }
    Octopus.Client.Repositories.Async.IProjectRepository Projects { get; }
    Octopus.Client.Repositories.Async.IProjectTriggerRepository ProjectTriggers { get; }
    Octopus.Client.Repositories.Async.IProxyRepository Proxies { get; }
    Octopus.Client.Repositories.Async.IReleaseRepository Releases { get; }
    Octopus.Client.Repositories.Async.IRetentionPolicyRepository RetentionPolicies { get; }
    Octopus.Client.Repositories.Async.IRunbookProcessRepository RunbookProcesses { get; }
    Octopus.Client.Repositories.Async.IRunbookRunRepository RunbookRuns { get; }
    Octopus.Client.Repositories.Async.IRunbookRepository Runbooks { get; }
    Octopus.Client.Repositories.Async.IRunbookSnapshotRepository RunbookSnapshots { get; }
    Octopus.Client.Repositories.Async.ISubscriptionRepository Subscriptions { get; }
    Octopus.Client.Repositories.Async.ITagSetRepository TagSets { get; }
    Octopus.Client.Repositories.Async.ITenantRepository Tenants { get; }
    Octopus.Client.Repositories.Async.ITenantVariablesRepository TenantVariables { get; }
    Octopus.Client.Repositories.Async.IVariableSetRepository VariableSets { get; }
    Octopus.Client.Repositories.Async.IWorkerPoolRepository WorkerPools { get; }
    Octopus.Client.Repositories.Async.IWorkerRepository Workers { get; }
    Task<SpaceRootResource> LoadSpaceRootDocument()
  }
  interface IOctopusSpaceRepository
    Octopus.Client.IOctopusCommonRepository
  {
    Octopus.Client.Repositories.IAccountRepository Accounts { get; }
    Octopus.Client.Repositories.IActionTemplateRepository ActionTemplates { get; }
    Octopus.Client.Repositories.IArtifactRepository Artifacts { get; }
    Octopus.Client.Repositories.IOctopusSpaceBetaRepository Beta { get; }
    Octopus.Client.Repositories.IBuildInformationRepository BuildInformationRepository { get; }
    Octopus.Client.Repositories.IBuiltInPackageRepositoryRepository BuiltInPackageRepository { get; }
    Octopus.Client.Repositories.ICertificateConfigurationRepository CertificateConfiguration { get; }
    Octopus.Client.Repositories.ICertificateRepository Certificates { get; }
    Octopus.Client.Repositories.IChannelRepository Channels { get; }
    Octopus.Client.Repositories.IDashboardConfigurationRepository DashboardConfigurations { get; }
    Octopus.Client.Repositories.IDashboardRepository Dashboards { get; }
    Octopus.Client.Repositories.IDefectsRepository Defects { get; }
    Octopus.Client.Repositories.IDeploymentProcessRepository DeploymentProcesses { get; }
    Octopus.Client.Repositories.IDeploymentRepository Deployments { get; }
    Octopus.Client.Repositories.IDeploymentSettingsRepository DeploymentSettings { get; }
    Octopus.Client.Repositories.IEnvironmentRepository Environments { get; }
    Octopus.Client.Repositories.IFeedRepository Feeds { get; }
    Octopus.Client.Repositories.IInterruptionRepository Interruptions { get; }
    Octopus.Client.Repositories.ILibraryVariableSetRepository LibraryVariableSets { get; }
    Octopus.Client.Repositories.ILifecyclesRepository Lifecycles { get; }
    Octopus.Client.Repositories.IMachinePolicyRepository MachinePolicies { get; }
    Octopus.Client.Repositories.IMachineRoleRepository MachineRoles { get; }
    Octopus.Client.Repositories.IMachineRepository Machines { get; }
    Octopus.Client.Repositories.IPackageMetadataRepository PackageMetadataRepository { get; }
    Octopus.Client.Repositories.IProjectGroupRepository ProjectGroups { get; }
    Octopus.Client.Repositories.IProjectRepository Projects { get; }
    Octopus.Client.Repositories.IProjectTriggerRepository ProjectTriggers { get; }
    Octopus.Client.Repositories.IProxyRepository Proxies { get; }
    Octopus.Client.Repositories.IReleaseRepository Releases { get; }
    Octopus.Client.Repositories.IRetentionPolicyRepository RetentionPolicies { get; }
    Octopus.Client.Repositories.IRunbookProcessRepository RunbookProcesses { get; }
    Octopus.Client.Repositories.IRunbookRunRepository RunbookRuns { get; }
    Octopus.Client.Repositories.IRunbookRepository Runbooks { get; }
    Octopus.Client.Repositories.IRunbookSnapshotRepository RunbookSnapshots { get; }
    Octopus.Client.Repositories.ISubscriptionRepository Subscriptions { get; }
    Octopus.Client.Repositories.ITagSetRepository TagSets { get; }
    Octopus.Client.Repositories.ITenantRepository Tenants { get; }
    Octopus.Client.Repositories.ITenantVariablesRepository TenantVariables { get; }
    Octopus.Client.Repositories.IVariableSetRepository VariableSets { get; }
    Octopus.Client.Repositories.IWorkerPoolRepository WorkerPools { get; }
    Octopus.Client.Repositories.IWorkerRepository Workers { get; }
    Octopus.Client.Model.SpaceRootResource LoadSpaceRootDocument()
  }
  interface IOctopusSystemAsyncRepository
    Octopus.Client.IOctopusCommonAsyncRepository
  {
    Octopus.Client.Repositories.Async.IBackupRepository Backups { get; }
    Octopus.Client.Repositories.Async.ICertificateConfigurationRepository CertificateConfiguration { get; }
    Octopus.Client.Repositories.Async.IConfigurationRepository Configuration { get; }
    Octopus.Client.Repositories.Async.IFeaturesConfigurationRepository FeaturesConfiguration { get; }
    Octopus.Client.Repositories.Async.ILicensesRepository Licenses { get; }
    Octopus.Client.Repositories.Async.IMigrationRepository Migrations { get; }
    Octopus.Client.Repositories.Async.IOctopusServerNodeRepository OctopusServerNodes { get; }
    Octopus.Client.Repositories.Async.IPerformanceConfigurationRepository PerformanceConfiguration { get; }
    Octopus.Client.Repositories.Async.ISchedulerRepository Schedulers { get; }
    Octopus.Client.Repositories.Async.IServerStatusRepository ServerStatus { get; }
    Octopus.Client.Repositories.Async.ISpaceRepository Spaces { get; }
    Octopus.Client.Repositories.Async.IUpgradeConfigurationRepository UpgradeConfiguration { get; }
    Octopus.Client.Repositories.Async.IUserRolesRepository UserRoles { get; }
    Octopus.Client.Repositories.Async.IUserRepository Users { get; }
    Task<RootResource> LoadRootDocument()
  }
  interface IOctopusSystemRepository
    Octopus.Client.IOctopusCommonRepository
  {
    Octopus.Client.Repositories.IBackupRepository Backups { get; }
    Octopus.Client.Repositories.ICommunityActionTemplateRepository CommunityActionTemplates { get; }
    Octopus.Client.Repositories.IConfigurationRepository Configuration { get; }
    Octopus.Client.Repositories.IFeaturesConfigurationRepository FeaturesConfiguration { get; }
    Octopus.Client.Repositories.ILicensesRepository Licenses { get; }
    Octopus.Client.Repositories.IMigrationRepository Migrations { get; }
    Octopus.Client.Repositories.IOctopusServerNodeRepository OctopusServerNodes { get; }
    Octopus.Client.Repositories.IPerformanceConfigurationRepository PerformanceConfiguration { get; }
    Octopus.Client.Repositories.ISchedulerRepository Schedulers { get; }
    Octopus.Client.Repositories.IServerStatusRepository ServerStatus { get; }
    Octopus.Client.Repositories.ISpaceRepository Spaces { get; }
    Octopus.Client.Repositories.IUpgradeConfigurationRepository UpgradeConfiguration { get; }
    Octopus.Client.Repositories.IUserRolesRepository UserRoles { get; }
    Octopus.Client.Repositories.IUserRepository Users { get; }
    Octopus.Client.Model.RootResource LoadRootDocument()
  }
  class OctopusAsyncClient
    Octopus.Client.IOctopusAsyncClient
    IDisposable
  {
    event Action<HttpResponseMessage> AfterReceivedHttpResponse
    event Func<HttpResponseMessage, CancellationToken, Task> AfterReceivedHttpResponseAsync
    event Action<HttpRequestMessage> BeforeSendingHttpRequest
    event Func<HttpRequestMessage, CancellationToken, Task> BeforeSendingHttpRequestAsync
    event Action<OctopusResponse> ReceivedOctopusResponse
    event Func<OctopusResponse, CancellationToken, Task> ReceivedOctopusResponseAsync
    event Action<OctopusRequest> SendingOctopusRequest
    event Func<OctopusRequest, CancellationToken, Task> SendingOctopusRequestAsync
    Boolean IsUsingSecureConnection { get; }
    Octopus.Client.IOctopusAsyncRepository Repository { get; }
    Octopus.Client.Model.RootResource RootDocument { get; }
    static Task<IOctopusAsyncClient> Create(Octopus.Client.OctopusServerEndpoint, Octopus.Client.OctopusClientOptions)
    Task<TResource> Create(String, Octopus.Client.TResource, Object)
    Task Delete(String, Object, Object)
    void Dispose()
    Octopus.Client.IOctopusSpaceAsyncRepository ForSpace(Octopus.Client.Model.SpaceResource)
    Octopus.Client.IOctopusSystemAsyncRepository ForSystem()
    Task<TResource> Get(String, Object)
    Task<Stream> GetContent(String, Object)
    Task<ResourceCollection<TResource>> List(String, Object)
    Task<IReadOnlyList<TResource>> ListAll(String, Object)
    Task Paginate(String, Object, Func<ResourceCollection<TResource>, Boolean>)
    Task Paginate(String, Func<ResourceCollection<TResource>, Boolean>)
    Task Post(String, Octopus.Client.TResource, Object)
    Task<TResponse> Post(String, Octopus.Client.TResource, Object)
    Task Post(String)
    Task Put(String, Octopus.Client.TResource)
    Task Put(String)
    Task Put(String, Octopus.Client.TResource, Object)
    Task PutContent(String, Stream)
    Uri QualifyUri(String, Object)
    Task SignIn(Octopus.Client.Model.LoginCommand)
    Task SignOut()
    Task<TResource> Update(String, Octopus.Client.TResource, Object)
  }
  class OctopusAsyncRepository
    Octopus.Client.IOctopusAsyncRepository
    Octopus.Client.IOctopusSpaceAsyncRepository
    Octopus.Client.IOctopusCommonAsyncRepository
    Octopus.Client.IOctopusSystemAsyncRepository
  {
    .ctor(Octopus.Client.IOctopusAsyncClient, Octopus.Client.RepositoryScope)
    Octopus.Client.Repositories.Async.IAccountRepository Accounts { get; }
    Octopus.Client.Repositories.Async.IActionTemplateRepository ActionTemplates { get; }
    Octopus.Client.Repositories.Async.IArtifactRepository Artifacts { get; }
    Octopus.Client.Repositories.Async.IBackupRepository Backups { get; }
    Octopus.Client.Repositories.Async.IOctopusSpaceAsyncBetaRepository Beta { get; }
    Octopus.Client.Repositories.Async.IBuildInformationRepository BuildInformationRepository { get; }
    Octopus.Client.Repositories.Async.IBuiltInPackageRepositoryRepository BuiltInPackageRepository { get; }
    Octopus.Client.Repositories.Async.ICertificateConfigurationRepository CertificateConfiguration { get; }
    Octopus.Client.Repositories.Async.ICertificateRepository Certificates { get; }
    Octopus.Client.Repositories.Async.IChannelRepository Channels { get; }
    Octopus.Client.IOctopusAsyncClient Client { get; }
    Octopus.Client.Repositories.Async.ICommunityActionTemplateRepository CommunityActionTemplates { get; }
    Octopus.Client.Repositories.Async.IConfigurationRepository Configuration { get; }
    Octopus.Client.Repositories.Async.IDashboardConfigurationRepository DashboardConfigurations { get; }
    Octopus.Client.Repositories.Async.IDashboardRepository Dashboards { get; }
    Octopus.Client.Repositories.Async.IDefectsRepository Defects { get; }
    Octopus.Client.Repositories.Async.IDeploymentProcessRepository DeploymentProcesses { get; }
    Octopus.Client.Repositories.Async.IDeploymentRepository Deployments { get; }
    Octopus.Client.Repositories.Async.IDeploymentSettingsRepository DeploymentSettings { get; }
    Octopus.Client.Repositories.Async.IEnvironmentRepository Environments { get; }
    Octopus.Client.Repositories.Async.IEventRepository Events { get; }
    Octopus.Client.Repositories.Async.IFeaturesConfigurationRepository FeaturesConfiguration { get; }
    Octopus.Client.Repositories.Async.IFeedRepository Feeds { get; }
    Octopus.Client.Repositories.Async.IInterruptionRepository Interruptions { get; }
    Octopus.Client.Repositories.Async.ILibraryVariableSetRepository LibraryVariableSets { get; }
    Octopus.Client.Repositories.Async.ILicensesRepository Licenses { get; }
    Octopus.Client.Repositories.Async.ILifecyclesRepository Lifecycles { get; }
    Octopus.Client.Repositories.Async.IMachinePolicyRepository MachinePolicies { get; }
    Octopus.Client.Repositories.Async.IMachineRoleRepository MachineRoles { get; }
    Octopus.Client.Repositories.Async.IMachineRepository Machines { get; }
    Octopus.Client.Repositories.Async.IMigrationRepository Migrations { get; }
    Octopus.Client.Repositories.Async.IOctopusServerNodeRepository OctopusServerNodes { get; }
    Octopus.Client.Repositories.Async.IPackageMetadataRepository PackageMetadataRepository { get; }
    Octopus.Client.Repositories.Async.IPerformanceConfigurationRepository PerformanceConfiguration { get; }
    Octopus.Client.Repositories.Async.IProjectGroupRepository ProjectGroups { get; }
    Octopus.Client.Repositories.Async.IProjectRepository Projects { get; }
    Octopus.Client.Repositories.Async.IProjectTriggerRepository ProjectTriggers { get; }
    Octopus.Client.Repositories.Async.IProxyRepository Proxies { get; }
    Octopus.Client.Repositories.Async.IReleaseRepository Releases { get; }
    Octopus.Client.Repositories.Async.IRetentionPolicyRepository RetentionPolicies { get; }
    Octopus.Client.Repositories.Async.IRunbookProcessRepository RunbookProcesses { get; }
    Octopus.Client.Repositories.Async.IRunbookRunRepository RunbookRuns { get; }
    Octopus.Client.Repositories.Async.IRunbookRepository Runbooks { get; }
    Octopus.Client.Repositories.Async.IRunbookSnapshotRepository RunbookSnapshots { get; }
    Octopus.Client.Repositories.Async.ISchedulerRepository Schedulers { get; }
    Octopus.Client.RepositoryScope Scope { get; }
    Octopus.Client.Repositories.Async.IScopedUserRoleRepository ScopedUserRoles { get; }
    Octopus.Client.Repositories.Async.IServerStatusRepository ServerStatus { get; }
    Octopus.Client.Repositories.Async.ISpaceRepository Spaces { get; }
    Octopus.Client.Repositories.Async.ISubscriptionRepository Subscriptions { get; }
    Octopus.Client.Repositories.Async.ITagSetRepository TagSets { get; }
    Octopus.Client.Repositories.Async.ITaskRepository Tasks { get; }
    Octopus.Client.Repositories.Async.ITeamsRepository Teams { get; }
    Octopus.Client.Repositories.Async.ITenantRepository Tenants { get; }
    Octopus.Client.Repositories.Async.ITenantVariablesRepository TenantVariables { get; }
    Octopus.Client.Repositories.Async.IUpgradeConfigurationRepository UpgradeConfiguration { get; }
    Octopus.Client.Repositories.Async.IUserInvitesRepository UserInvites { get; }
    Octopus.Client.Repositories.Async.IUserPermissionsRepository UserPermissions { get; }
    Octopus.Client.Repositories.Async.IUserRolesRepository UserRoles { get; }
    Octopus.Client.Repositories.Async.IUserRepository Users { get; }
    Octopus.Client.Repositories.Async.IUserTeamsRepository UserTeams { get; }
    Octopus.Client.Repositories.Async.IVariableSetRepository VariableSets { get; }
    Octopus.Client.Repositories.Async.IWorkerPoolRepository WorkerPools { get; }
    Octopus.Client.Repositories.Async.IWorkerRepository Workers { get; }
    Task<Boolean> HasLink(String)
    Task<Boolean> HasLinkParameter(String, String)
    Task<String> Link(String)
    Task<RootResource> LoadRootDocument()
    Task<SpaceRootResource> LoadSpaceRootDocument()
  }
  class OctopusClient
    Octopus.Client.IHttpOctopusClient
    Octopus.Client.IOctopusClient
    IDisposable
  {
    event Action<WebResponse> AfterReceivingHttpResponse
    event Action<WebRequest> BeforeSendingHttpRequest
    event Action<OctopusResponse> ReceivedOctopusResponse
    event Action<OctopusRequest> SendingOctopusRequest
    .ctor(Octopus.Client.OctopusServerEndpoint)
    Boolean IsUsingSecureConnection { get; }
    Octopus.Client.IOctopusRepository Repository { get; }
    Octopus.Client.Model.RootResource RootDocument { get; }
    Octopus.Client.TResource Create(String, Octopus.Client.TResource, Object)
    void Delete(String, Object, Object)
    void Dispose()
    Octopus.Client.IOctopusSpaceRepository ForSpace(Octopus.Client.Model.SpaceResource)
    Octopus.Client.IOctopusSystemRepository ForSystem()
    Octopus.Client.TResource Get(String, Object)
    Stream GetContent(String, Object)
    void Initialize()
    Octopus.Client.Model.ResourceCollection<TResource> List(String, Object)
    IReadOnlyList<TResource> ListAll(String, Object)
    void Paginate(String, Object, Func<ResourceCollection<TResource>, Boolean>)
    void Paginate(String, Func<ResourceCollection<TResource>, Boolean>)
    void Post(String, Octopus.Client.TResource, Object)
    Octopus.Client.TResponse Post(String, Octopus.Client.TResource, Object)
    void Post(String)
    void Put(String, Octopus.Client.TResource)
    void Put(String)
    void Put(String, Octopus.Client.TResource, Object)
    void PutContent(String, Stream)
    Uri QualifyUri(String, Object)
    void SignIn(Octopus.Client.Model.LoginCommand)
    void SignOut()
    Octopus.Client.TResource Update(String, Octopus.Client.TResource, Object)
  }
  class OctopusClientFactory
    Octopus.Client.IOctopusClientFactory
  {
    .ctor()
    Task<IOctopusAsyncClient> CreateAsyncClient(Octopus.Client.OctopusServerEndpoint, Octopus.Client.OctopusClientOptions)
    Octopus.Client.IOctopusClient CreateClient(Octopus.Client.OctopusServerEndpoint)
  }
  class OctopusClientOptions
  {
    .ctor()
    String Proxy { get; set; }
    String ProxyPassword { get; set; }
    String ProxyUsername { get; set; }
    TimeSpan Timeout { get; set; }
  }
  class OctopusRepository
    Octopus.Client.IOctopusRepository
    Octopus.Client.IOctopusSpaceRepository
    Octopus.Client.IOctopusCommonRepository
    Octopus.Client.IOctopusSystemRepository
  {
    .ctor(Octopus.Client.OctopusServerEndpoint)
    .ctor(Octopus.Client.OctopusServerEndpoint, Octopus.Client.RepositoryScope)
    .ctor(Octopus.Client.IOctopusClient, Octopus.Client.RepositoryScope)
    Octopus.Client.Repositories.IAccountRepository Accounts { get; }
    Octopus.Client.Repositories.IActionTemplateRepository ActionTemplates { get; }
    Octopus.Client.Repositories.IArtifactRepository Artifacts { get; }
    Octopus.Client.Repositories.IBackupRepository Backups { get; }
    Octopus.Client.Repositories.IOctopusSpaceBetaRepository Beta { get; }
    Octopus.Client.Repositories.IBuildInformationRepository BuildInformationRepository { get; }
    Octopus.Client.Repositories.IBuiltInPackageRepositoryRepository BuiltInPackageRepository { get; }
    Octopus.Client.Repositories.ICertificateConfigurationRepository CertificateConfiguration { get; }
    Octopus.Client.Repositories.ICertificateRepository Certificates { get; }
    Octopus.Client.Repositories.IChannelRepository Channels { get; }
    Octopus.Client.IOctopusClient Client { get; }
    Octopus.Client.Repositories.ICommunityActionTemplateRepository CommunityActionTemplates { get; }
    Octopus.Client.Repositories.IConfigurationRepository Configuration { get; }
    Octopus.Client.Repositories.IDashboardConfigurationRepository DashboardConfigurations { get; }
    Octopus.Client.Repositories.IDashboardRepository Dashboards { get; }
    Octopus.Client.Repositories.IDefectsRepository Defects { get; }
    Octopus.Client.Repositories.IDeploymentProcessRepository DeploymentProcesses { get; }
    Octopus.Client.Repositories.IDeploymentRepository Deployments { get; }
    Octopus.Client.Repositories.IDeploymentSettingsRepository DeploymentSettings { get; }
    Octopus.Client.Repositories.IEnvironmentRepository Environments { get; }
    Octopus.Client.Repositories.IEventRepository Events { get; }
    Octopus.Client.Repositories.IFeaturesConfigurationRepository FeaturesConfiguration { get; }
    Octopus.Client.Repositories.IFeedRepository Feeds { get; }
    Octopus.Client.Repositories.IInterruptionRepository Interruptions { get; }
    Octopus.Client.Repositories.ILibraryVariableSetRepository LibraryVariableSets { get; }
    Octopus.Client.Repositories.ILicensesRepository Licenses { get; }
    Octopus.Client.Repositories.ILifecyclesRepository Lifecycles { get; }
    Octopus.Client.Repositories.IMachinePolicyRepository MachinePolicies { get; }
    Octopus.Client.Repositories.IMachineRoleRepository MachineRoles { get; }
    Octopus.Client.Repositories.IMachineRepository Machines { get; }
    Octopus.Client.Repositories.IMigrationRepository Migrations { get; }
    Octopus.Client.Repositories.IOctopusServerNodeRepository OctopusServerNodes { get; }
    Octopus.Client.Repositories.IPackageMetadataRepository PackageMetadataRepository { get; }
    Octopus.Client.Repositories.IPerformanceConfigurationRepository PerformanceConfiguration { get; }
    Octopus.Client.Repositories.IProjectGroupRepository ProjectGroups { get; }
    Octopus.Client.Repositories.IProjectRepository Projects { get; }
    Octopus.Client.Repositories.IProjectTriggerRepository ProjectTriggers { get; }
    Octopus.Client.Repositories.IProxyRepository Proxies { get; }
    Octopus.Client.Repositories.IReleaseRepository Releases { get; }
    Octopus.Client.Repositories.IRetentionPolicyRepository RetentionPolicies { get; }
    Octopus.Client.Repositories.IRunbookProcessRepository RunbookProcesses { get; }
    Octopus.Client.Repositories.IRunbookRunRepository RunbookRuns { get; }
    Octopus.Client.Repositories.IRunbookRepository Runbooks { get; }
    Octopus.Client.Repositories.IRunbookSnapshotRepository RunbookSnapshots { get; }
    Octopus.Client.Repositories.ISchedulerRepository Schedulers { get; }
    Octopus.Client.RepositoryScope Scope { get; }
    Octopus.Client.Repositories.IScopedUserRoleRepository ScopedUserRoles { get; }
    Octopus.Client.Repositories.IServerStatusRepository ServerStatus { get; }
    Octopus.Client.Repositories.ISpaceRepository Spaces { get; }
    Octopus.Client.Repositories.ISubscriptionRepository Subscriptions { get; }
    Octopus.Client.Repositories.ITagSetRepository TagSets { get; }
    Octopus.Client.Repositories.ITaskRepository Tasks { get; }
    Octopus.Client.Repositories.ITeamsRepository Teams { get; }
    Octopus.Client.Repositories.ITenantRepository Tenants { get; }
    Octopus.Client.Repositories.ITenantVariablesRepository TenantVariables { get; }
    Octopus.Client.Repositories.IUpgradeConfigurationRepository UpgradeConfiguration { get; }
    Octopus.Client.Repositories.IUserInvitesRepository UserInvites { get; }
    Octopus.Client.Repositories.IUserPermissionsRepository UserPermissions { get; }
    Octopus.Client.Repositories.IUserRolesRepository UserRoles { get; }
    Octopus.Client.Repositories.IUserRepository Users { get; }
    Octopus.Client.Repositories.IUserTeamsRepository UserTeams { get; }
    Octopus.Client.Repositories.IVariableSetRepository VariableSets { get; }
    Octopus.Client.Repositories.IWorkerPoolRepository WorkerPools { get; }
    Octopus.Client.Repositories.IWorkerRepository Workers { get; }
    Boolean HasLink(String)
    Boolean HasLinkParameter(String, String)
    String Link(String)
    Octopus.Client.Model.RootResource LoadRootDocument()
    Octopus.Client.Model.SpaceRootResource LoadSpaceRootDocument()
  }
  abstract class OctopusRepositoryExtensions
  {
    static Octopus.Client.IOctopusAsyncRepository CreateRepository(Octopus.Client.IOctopusAsyncClient, Octopus.Client.RepositoryScope)
    static Octopus.Client.IOctopusSpaceAsyncRepository ForSpace(Octopus.Client.IOctopusAsyncRepository, Octopus.Client.Model.SpaceResource)
    static Octopus.Client.IOctopusSpaceRepository ForSpace(Octopus.Client.IOctopusRepository, Octopus.Client.Model.SpaceResource)
    static Octopus.Client.IOctopusSystemAsyncRepository ForSystem(Octopus.Client.IOctopusAsyncRepository)
    static Octopus.Client.IOctopusSystemRepository ForSystem(Octopus.Client.IOctopusRepository)
  }
  class OctopusRequest
  {
    .ctor(String, Uri, Object)
    String Method { get; }
    Object RequestResource { get; }
    Uri Uri { get; }
  }
  class OctopusResponse
  {
    .ctor(Octopus.Client.OctopusRequest, HttpStatusCode, String, Object)
    String Location { get; }
    Octopus.Client.OctopusRequest Request { get; }
    Object ResponseResource { get; }
    HttpStatusCode StatusCode { get; }
  }
  class OctopusResponse`1
    Octopus.Client.OctopusResponse
  {
    .ctor(Octopus.Client.OctopusRequest, HttpStatusCode, String, Octopus.Client.TResponseResource)
    Octopus.Client.TResponseResource ResponseResource { get; }
  }
  class OctopusServerEndpoint
  {
    .ctor(String)
    .ctor(String, String)
    .ctor(String, String, ICredentials)
    .ctor(Octopus.Client.ILinkResolver, String, ICredentials)
    String ApiKey { get; }
    ICredentials Credentials { get; }
    Boolean IsUsingSecureConnection { get; }
    Octopus.Client.ILinkResolver OctopusServer { get; }
    IWebProxy Proxy { get; set; }
    Octopus.Client.OctopusServerEndpoint AsUser(String)
  }
  class RepositoryScope
  {
    Octopus.Client.T Apply(Func<SpaceResource, T>, Func<T>, Func<T>)
    void Apply(Action<SpaceResource>, Action, Action)
    static Octopus.Client.RepositoryScope ForSpace(Octopus.Client.Model.SpaceResource)
    static Octopus.Client.RepositoryScope ForSystem()
    static Octopus.Client.RepositoryScope Unspecified()
  }
  class SingleSpaceOperationInMultiSpaceContextException
    ISerializable
    _Exception
    Exception
  {
    .ctor()
  }
  class SpaceContext
  {
    Boolean IncludeSystem { get; }
    static Octopus.Client.SpaceContext AllSpaces()
    static Octopus.Client.SpaceContext AllSpacesAndSystem()
    Octopus.Client.T ApplySpaceSelection(Func<IReadOnlyCollection<SpaceResource>, T>, Func<T>)
    void ApplySpaceSelection(Action<IReadOnlyCollection<SpaceResource>>, Action)
    static Octopus.Client.SpaceContext SpecificSpace(Octopus.Client.Model.SpaceResource)
    static Octopus.Client.SpaceContext SpecificSpaceAndSystem(Octopus.Client.Model.SpaceResource)
    static Octopus.Client.SpaceContext SpecificSpaces(IEnumerable<SpaceResource>)
    static Octopus.Client.SpaceContext SpecificSpaces(Octopus.Client.Model.SpaceResource[])
    static Octopus.Client.SpaceContext SpecificSpacesAndSystem(IEnumerable<SpaceResource>)
    static Octopus.Client.SpaceContext SpecificSpacesAndSystem(Octopus.Client.Model.SpaceResource[])
    static Octopus.Client.SpaceContext SystemOnly()
  }
  class SpaceContextSwitchException
    ISerializable
    _Exception
    Exception
  {
    .ctor()
  }
  class SpaceScopedOperationInSystemContextException
    ISerializable
    _Exception
    Exception
  {
    .ctor()
  }
  SpaceSelection
  {
      AllSpaces = 0
      SpecificSpaces = 1
  }
  class UrlTemplate
  {
    .ctor(String)
    IEnumerable<String> GetParameterNames()
    String Resolve()
    static String Resolve(String, Object)
    static String Resolve(String, IDictionary<String, Object>)
    void SetParameter(String, Object)
    void SetParameter(String, String)
    void SetParameter(String, IEnumerable<String>)
    void SetParameter(String, IDictionary<String, String>)
  }
}
Octopus.Client.AutomationEnvironments
{
  class AutomationEnvironmentProvider
    Octopus.Client.AutomationEnvironments.IAutomationEnvironmentProvider
  {
    .ctor()
    Octopus.Client.Model.AutomationEnvironment DetermineAutomationEnvironment()
    String DetermineAutomationEnvironmentWithVersion()
  }
}
Octopus.Client.Editors
{
  class AccountEditor`2
    Octopus.Client.Editors.IResourceEditor<TAccountResource, TAccountEditor>
    Octopus.Client.Editors.IResourceBuilder
  {
    .ctor(Octopus.Client.Repositories.IAccountRepository)
    Octopus.Client.Editors.TAccountResource Instance { get; }
    Octopus.Client.Editors.TAccountEditor CreateOrModify(String)
    Octopus.Client.Editors.TAccountEditor Customize(Action<TAccountResource>)
    Octopus.Client.Editors.TAccountEditor FindByName(String)
    Octopus.Client.Editors.TAccountEditor Save()
    Octopus.Client.Model.Accounts.Usages.AccountUsageResource Usages()
  }
  class AmazonWebServicesAccountEditor
    Octopus.Client.Editors.IResourceEditor<AmazonWebServicesAccountResource, AmazonWebServicesAccountEditor>
    Octopus.Client.Editors.IResourceBuilder
    Octopus.Client.Editors.AccountEditor<AmazonWebServicesAccountResource, AmazonWebServicesAccountEditor>
  {
    .ctor(Octopus.Client.Repositories.IAccountRepository)
  }
  class AzureServicePrincipalAccountEditor
    Octopus.Client.Editors.IResourceEditor<AzureServicePrincipalAccountResource, AzureServicePrincipalAccountEditor>
    Octopus.Client.Editors.IResourceBuilder
    Octopus.Client.Editors.AccountEditor<AzureServicePrincipalAccountResource, AzureServicePrincipalAccountEditor>
  {
    .ctor(Octopus.Client.Repositories.IAccountRepository)
    List<ResourceGroup> ResourceGroups()
    List<AzureStorageAccount> StorageAccounts()
    List<WebSite> WebSites()
    List<WebSlot> WebSiteSlots(Octopus.Client.Model.Accounts.WebSite)
  }
  class AzureSubscriptionAccountEditor
    Octopus.Client.Editors.IResourceEditor<AzureSubscriptionAccountResource, AzureSubscriptionAccountEditor>
    Octopus.Client.Editors.IResourceBuilder
    Octopus.Client.Editors.AccountEditor<AzureSubscriptionAccountResource, AzureSubscriptionAccountEditor>
  {
    .ctor(Octopus.Client.Repositories.IAccountRepository)
    List<AzureStorageAccount> StorageAccounts(Octopus.Client.Model.Accounts.AzureSubscriptionAccountResource)
    List<WebSite> WebSites(Octopus.Client.Model.Accounts.AzureSubscriptionAccountResource)
    List<WebSite> WebSites()
    List<WebSlot> WebSiteSlots(Octopus.Client.Model.Accounts.AzureSubscriptionAccountResource, Octopus.Client.Model.Accounts.WebSite)
    List<WebSlot> WebSiteSlots(Octopus.Client.Model.Accounts.WebSite)
  }
  class CertificateEditor
    Octopus.Client.Editors.IResourceEditor<CertificateResource, CertificateEditor>
    Octopus.Client.Editors.IResourceBuilder
  {
    .ctor(Octopus.Client.Repositories.ICertificateRepository)
    Octopus.Client.Model.CertificateResource Instance { get; }
    Octopus.Client.Editors.CertificateEditor Create(String, String)
    Octopus.Client.Editors.CertificateEditor Customize(Action<CertificateResource>)
    Octopus.Client.Editors.CertificateEditor FindByName(String)
    Octopus.Client.Editors.CertificateEditor Save()
    Octopus.Client.Model.CertificateUsageResource Usages()
  }
  class ChannelEditor
    Octopus.Client.Editors.IResourceEditor<ChannelResource, ChannelEditor>
    Octopus.Client.Editors.IResourceBuilder
  {
    .ctor(Octopus.Client.Repositories.IChannelRepository)
    Octopus.Client.Model.ChannelResource Instance { get; }
    Octopus.Client.Editors.ChannelEditor AddCommonRuleForAllActions(String, String, Octopus.Client.Model.DeploymentProcessResource)
    Octopus.Client.Editors.ChannelEditor AddOrUpdateTenantTags(Octopus.Client.Model.TagResource[])
    Octopus.Client.Editors.ChannelEditor AddRule(Octopus.Client.Model.ChannelVersionRuleResource)
    Octopus.Client.Editors.ChannelEditor AddRule(String, String, Octopus.Client.Model.DeploymentActionResource[])
    Octopus.Client.Editors.ChannelEditor ClearRules()
    Octopus.Client.Editors.ChannelEditor ClearTenantTags()
    Octopus.Client.Editors.ChannelEditor CreateOrModify(Octopus.Client.Model.ProjectResource, String)
    Octopus.Client.Editors.ChannelEditor CreateOrModify(Octopus.Client.Model.ProjectResource, String, String)
    Octopus.Client.Editors.ChannelEditor Customize(Action<ChannelResource>)
    Octopus.Client.Editors.ChannelEditor Save()
    Octopus.Client.Editors.ChannelEditor SetAsDefaultChannel()
    Octopus.Client.Editors.ChannelEditor UsingLifecycle(Octopus.Client.Model.LifecycleResource)
  }
  class DeploymentProcessEditor
    Octopus.Client.Editors.IResourceEditor<DeploymentProcessResource, DeploymentProcessEditor>
    Octopus.Client.Editors.IResourceBuilder
  {
    .ctor(Octopus.Client.Repositories.IDeploymentProcessRepository)
    Octopus.Client.Model.DeploymentProcessResource Instance { get; }
    Octopus.Client.Model.DeploymentStepResource AddOrUpdateStep(String)
    Octopus.Client.Editors.DeploymentProcessEditor ClearSteps()
    Octopus.Client.Editors.DeploymentProcessEditor Customize(Action<DeploymentProcessResource>)
    Octopus.Client.Model.DeploymentStepResource FindStep(String)
    Octopus.Client.Editors.DeploymentProcessEditor Load(String)
    Octopus.Client.Editors.DeploymentProcessEditor RemoveStep(String)
    Octopus.Client.Editors.DeploymentProcessEditor Save()
  }
  class EnvironmentEditor
    Octopus.Client.Editors.IResourceEditor<EnvironmentResource, EnvironmentEditor>
    Octopus.Client.Editors.IResourceBuilder
  {
    .ctor(Octopus.Client.Repositories.IEnvironmentRepository)
    Octopus.Client.Model.EnvironmentResource Instance { get; }
    Octopus.Client.Editors.EnvironmentEditor CreateOrModify(String)
    Octopus.Client.Editors.EnvironmentEditor CreateOrModify(String, String, Boolean)
    Octopus.Client.Editors.EnvironmentEditor CreateOrModify(String, String)
    Octopus.Client.Editors.EnvironmentEditor Customize(Action<EnvironmentResource>)
    Octopus.Client.Editors.EnvironmentEditor Save()
  }
  interface IResourceBuilder
  {
  }
  interface IResourceEditor`2
    Octopus.Client.Editors.IResourceBuilder
  {
    Octopus.Client.Editors.TResource Instance { get; }
    Octopus.Client.Editors.TResourceBuilder Customize(Action<TResource>)
    Octopus.Client.Editors.TResourceBuilder Save()
  }
  class LibraryVariableSetEditor
    Octopus.Client.Editors.IResourceEditor<LibraryVariableSetResource, LibraryVariableSetEditor>
    Octopus.Client.Editors.IResourceBuilder
  {
    .ctor(Octopus.Client.Repositories.ILibraryVariableSetRepository, Octopus.Client.Repositories.IVariableSetRepository)
    Octopus.Client.Model.LibraryVariableSetResource Instance { get; }
    Octopus.Client.Editors.VariableSetEditor Variables { get; }
    Octopus.Client.Model.IVariableTemplateContainerEditor<LibraryVariableSetResource> VariableTemplates { get; }
    Octopus.Client.Editors.LibraryVariableSetEditor CreateOrModify(String)
    Octopus.Client.Editors.LibraryVariableSetEditor CreateOrModify(String, String)
    Octopus.Client.Editors.LibraryVariableSetEditor Customize(Action<LibraryVariableSetResource>)
    Octopus.Client.Editors.LibraryVariableSetEditor Load(String)
    Octopus.Client.Editors.LibraryVariableSetEditor Save()
    Octopus.Client.Model.LibraryVariableSetUsageResource Usages()
  }
  class LifecycleEditor
    Octopus.Client.Editors.IResourceEditor<LifecycleResource, LifecycleEditor>
    Octopus.Client.Editors.IResourceBuilder
  {
    .ctor(Octopus.Client.Repositories.ILifecyclesRepository)
    Octopus.Client.Model.LifecycleResource Instance { get; }
    Octopus.Client.Model.PhaseResource AddOrUpdatePhase(String)
    Octopus.Client.Editors.LifecycleEditor AsSimplePromotionLifecycle(IEnumerable<EnvironmentResource>)
    Octopus.Client.Editors.LifecycleEditor Clear()
    Octopus.Client.Editors.LifecycleEditor CreateOrModify(String)
    Octopus.Client.Editors.LifecycleEditor CreateOrModify(String, String)
    Octopus.Client.Editors.LifecycleEditor Customize(Action<LifecycleResource>)
    Octopus.Client.Editors.LifecycleEditor Save()
  }
  class MachineEditor
    Octopus.Client.Editors.IResourceEditor<MachineResource, MachineEditor>
    Octopus.Client.Editors.IResourceBuilder
  {
    .ctor(Octopus.Client.Repositories.IMachineRepository)
    Octopus.Client.Model.MachineResource Instance { get; }
    Octopus.Client.Editors.MachineEditor CreateOrModify(String, Octopus.Client.Model.Endpoints.EndpointResource, Octopus.Client.Model.EnvironmentResource[], String[])
    Octopus.Client.Editors.MachineEditor CreateOrModify(String, Octopus.Client.Model.Endpoints.EndpointResource, Octopus.Client.Model.EnvironmentResource[], String[], Octopus.Client.Model.TenantResource[], Octopus.Client.Model.TagResource[], Nullable<TenantedDeploymentMode>)
    Octopus.Client.Editors.MachineEditor Customize(Action<MachineResource>)
    Octopus.Client.Editors.MachineEditor Save()
  }
  class ProjectChannelsEditor
  {
    .ctor(Octopus.Client.Repositories.IChannelRepository, Octopus.Client.Model.ProjectResource)
    Octopus.Client.Editors.ChannelEditor CreateOrModify(String)
    Octopus.Client.Editors.ChannelEditor CreateOrModify(String, String)
    Octopus.Client.Editors.ProjectChannelsEditor Delete(String)
    Octopus.Client.Editors.ProjectChannelsEditor SaveAll()
  }
  class ProjectEditor
    Octopus.Client.Editors.IResourceEditor<ProjectResource, ProjectEditor>
    Octopus.Client.Editors.IResourceBuilder
  {
    .ctor(Octopus.Client.Repositories.IProjectRepository, Octopus.Client.Repositories.IChannelRepository, Octopus.Client.Repositories.IDeploymentProcessRepository, Octopus.Client.Repositories.IProjectTriggerRepository, Octopus.Client.Repositories.IVariableSetRepository)
    Octopus.Client.Editors.ProjectChannelsEditor Channels { get; }
    Octopus.Client.Editors.DeploymentProcessEditor DeploymentProcess { get; }
    Octopus.Client.Model.ProjectResource Instance { get; }
    Octopus.Client.Editors.ProjectTriggersEditor Triggers { get; }
    Octopus.Client.Editors.VariableSetEditor Variables { get; }
    Octopus.Client.Model.IVariableTemplateContainerEditor<ProjectResource> VariableTemplates { get; }
    Octopus.Client.Editors.ProjectEditor CreateOrModify(String, Octopus.Client.Model.ProjectGroupResource, Octopus.Client.Model.LifecycleResource)
    Octopus.Client.Editors.ProjectEditor CreateOrModify(String, Octopus.Client.Model.ProjectGroupResource, Octopus.Client.Model.LifecycleResource, String, String)
    Octopus.Client.Editors.ProjectEditor Customize(Action<ProjectResource>)
    Octopus.Client.Editors.ProjectEditor IncludingLibraryVariableSets(Octopus.Client.Model.LibraryVariableSetResource[])
    Octopus.Client.Editors.ProjectEditor Save()
    Octopus.Client.Editors.ProjectEditor SetLogo(String)
  }
  class ProjectGroupEditor
    Octopus.Client.Editors.IResourceEditor<ProjectGroupResource, ProjectGroupEditor>
    Octopus.Client.Editors.IResourceBuilder
  {
    .ctor(Octopus.Client.Repositories.IProjectGroupRepository)
    Octopus.Client.Model.ProjectGroupResource Instance { get; }
    Octopus.Client.Editors.ProjectGroupEditor CreateOrModify(String)
    Octopus.Client.Editors.ProjectGroupEditor CreateOrModify(String, String)
    Octopus.Client.Editors.ProjectGroupEditor Customize(Action<ProjectGroupResource>)
    Octopus.Client.Editors.ProjectGroupEditor Save()
  }
  class ProjectTriggerEditor
    Octopus.Client.Editors.IResourceEditor<ProjectTriggerResource, ProjectTriggerEditor>
    Octopus.Client.Editors.IResourceBuilder
  {
    .ctor(Octopus.Client.Repositories.IProjectTriggerRepository)
    Octopus.Client.Model.ProjectTriggerResource Instance { get; }
    Octopus.Client.Editors.ProjectTriggerEditor CreateOrModify(Octopus.Client.Model.ProjectResource, String, Octopus.Client.Model.Triggers.TriggerFilterResource, Octopus.Client.Model.Triggers.TriggerActionResource)
    Octopus.Client.Editors.ProjectTriggerEditor Customize(Action<ProjectTriggerResource>)
    Octopus.Client.Editors.ProjectTriggerEditor Save()
  }
  class ProjectTriggersEditor
  {
    .ctor(Octopus.Client.Repositories.IProjectTriggerRepository, Octopus.Client.Model.ProjectResource)
    Octopus.Client.Editors.ProjectTriggerEditor CreateOrModify(String, Octopus.Client.Model.Triggers.TriggerFilterResource, Octopus.Client.Model.Triggers.TriggerActionResource)
    Octopus.Client.Editors.ProjectTriggersEditor Delete(String)
    Octopus.Client.Editors.ProjectTriggersEditor SaveAll()
  }
  class RunbookEditor
    Octopus.Client.Editors.IResourceEditor<RunbookResource, RunbookEditor>
    Octopus.Client.Editors.IResourceBuilder
  {
    .ctor(Octopus.Client.Repositories.IRunbookRepository, Octopus.Client.Repositories.IRunbookProcessRepository)
    Octopus.Client.Model.RunbookResource Instance { get; }
    Octopus.Client.Editors.RunbookProcessEditor RunbookProcess { get; }
    Octopus.Client.Editors.RunbookEditor CreateOrModify(Octopus.Client.Model.ProjectResource, String, String)
    Octopus.Client.Editors.RunbookEditor Customize(Action<RunbookResource>)
    Octopus.Client.Editors.RunbookEditor Load(String)
    Octopus.Client.Editors.RunbookEditor Save()
  }
  class RunbookProcessEditor
    Octopus.Client.Editors.IResourceEditor<RunbookProcessResource, RunbookProcessEditor>
    Octopus.Client.Editors.IResourceBuilder
  {
    .ctor(Octopus.Client.Repositories.IRunbookProcessRepository)
    Octopus.Client.Model.RunbookProcessResource Instance { get; }
    Octopus.Client.Model.DeploymentStepResource AddOrUpdateStep(String)
    Octopus.Client.Editors.RunbookProcessEditor ClearSteps()
    Octopus.Client.Editors.RunbookProcessEditor Customize(Action<RunbookProcessResource>)
    Octopus.Client.Model.DeploymentStepResource FindStep(String)
    Octopus.Client.Editors.RunbookProcessEditor Load(String)
    Octopus.Client.Editors.RunbookProcessEditor RemoveStep(String)
    Octopus.Client.Editors.RunbookProcessEditor Save()
  }
  class SshKeyPairAccountEditor
    Octopus.Client.Editors.IResourceEditor<SshKeyPairAccountResource, SshKeyPairAccountEditor>
    Octopus.Client.Editors.IResourceBuilder
    Octopus.Client.Editors.AccountEditor<SshKeyPairAccountResource, SshKeyPairAccountEditor>
  {
    .ctor(Octopus.Client.Repositories.IAccountRepository)
  }
  class SubscriptionEditor
    Octopus.Client.Editors.IResourceEditor<SubscriptionResource, SubscriptionEditor>
    Octopus.Client.Editors.IResourceBuilder
  {
    .ctor(Octopus.Client.Repositories.ISubscriptionRepository)
    Octopus.Client.Model.SubscriptionResource Instance { get; }
    Octopus.Client.Editors.SubscriptionEditor CreateOrModify(String, Octopus.Client.Model.EventNotificationSubscription, Boolean)
    Octopus.Client.Editors.SubscriptionEditor Customize(Action<SubscriptionResource>)
    Octopus.Client.Editors.SubscriptionEditor Save()
  }
  class TagSetEditor
    Octopus.Client.Editors.IResourceEditor<TagSetResource, TagSetEditor>
    Octopus.Client.Editors.IResourceBuilder
  {
    .ctor(Octopus.Client.Repositories.ITagSetRepository)
    Octopus.Client.Model.TagSetResource Instance { get; }
    Octopus.Client.Editors.TagSetEditor AddOrUpdateTag(String, String, String)
    Octopus.Client.Editors.TagSetEditor ClearTags()
    Octopus.Client.Editors.TagSetEditor CreateOrModify(String)
    Octopus.Client.Editors.TagSetEditor CreateOrModify(String, String)
    Octopus.Client.Editors.TagSetEditor Customize(Action<TagSetResource>)
    Octopus.Client.Editors.TagSetEditor RemoveTag(String)
    Octopus.Client.Editors.TagSetEditor Save()
  }
  class TenantEditor
    Octopus.Client.Editors.IResourceEditor<TenantResource, TenantEditor>
    Octopus.Client.Editors.IResourceBuilder
  {
    .ctor(Octopus.Client.Repositories.ITenantRepository)
    Octopus.Client.Model.TenantResource Instance { get; }
    Octopus.Client.Editors.TenantVariablesEditor Variables { get; }
    Octopus.Client.Editors.TenantEditor ClearProjects()
    Octopus.Client.Editors.TenantEditor ClearTags()
    Octopus.Client.Editors.TenantEditor ConnectToProjectAndEnvironments(Octopus.Client.Model.ProjectResource, Octopus.Client.Model.EnvironmentResource[])
    Octopus.Client.Editors.TenantEditor CreateOrModify(String)
    Octopus.Client.Editors.TenantEditor CreateOrModify(String, String, String)
    Octopus.Client.Editors.TenantEditor Customize(Action<TenantResource>)
    Octopus.Client.Editors.TenantEditor Save()
    Octopus.Client.Editors.TenantEditor SetLogo(String)
    Octopus.Client.Editors.TenantEditor WithTag(Octopus.Client.Model.TagResource)
  }
  class TenantVariablesEditor
    Octopus.Client.Editors.IResourceEditor<TenantVariableResource, TenantVariablesEditor>
    Octopus.Client.Editors.IResourceBuilder
  {
    .ctor(Octopus.Client.Repositories.ITenantRepository, Octopus.Client.Model.TenantResource)
    Octopus.Client.Model.TenantVariableResource Instance { get; }
    Octopus.Client.Editors.TenantVariablesEditor Customize(Action<TenantVariableResource>)
    Octopus.Client.Editors.TenantVariablesEditor Load()
    Octopus.Client.Editors.TenantVariablesEditor Save()
  }
  class UsernamePasswordAccountEditor
    Octopus.Client.Editors.IResourceEditor<UsernamePasswordAccountResource, UsernamePasswordAccountEditor>
    Octopus.Client.Editors.IResourceBuilder
    Octopus.Client.Editors.AccountEditor<UsernamePasswordAccountResource, UsernamePasswordAccountEditor>
  {
    .ctor(Octopus.Client.Repositories.IAccountRepository)
  }
  class VariableSetEditor
    Octopus.Client.Editors.IResourceEditor<VariableSetResource, VariableSetEditor>
    Octopus.Client.Editors.IResourceBuilder
  {
    .ctor(Octopus.Client.Repositories.IVariableSetRepository)
    Octopus.Client.Model.VariableSetResource Instance { get; }
    Octopus.Client.Editors.VariableSetEditor AddOrUpdateVariableValue(String, String, Octopus.Client.Model.ScopeSpecification, Boolean)
    Octopus.Client.Editors.VariableSetEditor AddOrUpdateVariableValue(String, String, Octopus.Client.Model.ScopeSpecification, Boolean, String)
    Octopus.Client.Editors.VariableSetEditor AddOrUpdateVariableValue(String, String, Octopus.Client.Model.ScopeSpecification)
    Octopus.Client.Editors.VariableSetEditor AddOrUpdateVariableValue(String, String)
    Octopus.Client.Editors.VariableSetEditor AddOrUpdateVariableValue(String, String, String)
    Octopus.Client.Editors.VariableSetEditor Customize(Action<VariableSetResource>)
    Octopus.Client.Editors.VariableSetEditor Load(String)
    Octopus.Client.Editors.VariableSetEditor Save()
  }
  class VariableTemplateContainerEditor`1
  {
    .ctor(Octopus.Client.Model.IVariableTemplateContainerEditor<TContainer>)
    Octopus.Client.Editors.VariableTemplateContainerEditor<TContainer> AddOrUpdateMultiLineTextTemplate(String, String)
    Octopus.Client.Editors.VariableTemplateContainerEditor<TContainer> AddOrUpdateMultiLineTextTemplate(String, String, String, String)
    Octopus.Client.Editors.VariableTemplateContainerEditor<TContainer> AddOrUpdateSelectTemplate(String, String, IDictionary<String, String>)
    Octopus.Client.Editors.VariableTemplateContainerEditor<TContainer> AddOrUpdateSelectTemplate(String, String, IDictionary<String, String>, String, String)
    Octopus.Client.Editors.VariableTemplateContainerEditor<TContainer> AddOrUpdateSensitiveTemplate(String, String)
    Octopus.Client.Editors.VariableTemplateContainerEditor<TContainer> AddOrUpdateSensitiveTemplate(String, String, String, String)
    Octopus.Client.Editors.VariableTemplateContainerEditor<TContainer> AddOrUpdateSingleLineTextTemplate(String, String)
    Octopus.Client.Editors.VariableTemplateContainerEditor<TContainer> AddOrUpdateSingleLineTextTemplate(String, String, String, String)
    Octopus.Client.Editors.VariableTemplateContainerEditor<TContainer> AddOrUpdateVariableTemplate(String, String, IDictionary<String, String>)
    Octopus.Client.Editors.VariableTemplateContainerEditor<TContainer> AddOrUpdateVariableTemplate(String, String, IDictionary<String, String>, String, String)
  }
  class WorkerEditor
    Octopus.Client.Editors.IResourceEditor<WorkerResource, WorkerEditor>
    Octopus.Client.Editors.IResourceBuilder
  {
    .ctor(Octopus.Client.Repositories.IWorkerRepository)
    Octopus.Client.Model.WorkerResource Instance { get; }
    Octopus.Client.Editors.WorkerEditor CreateOrModify(String, Octopus.Client.Model.Endpoints.EndpointResource, Octopus.Client.Model.WorkerPoolResource[])
    Octopus.Client.Editors.WorkerEditor Customize(Action<WorkerResource>)
    Octopus.Client.Editors.WorkerEditor Save()
  }
  class WorkerPoolEditor
    Octopus.Client.Editors.IResourceEditor<WorkerPoolResource, WorkerPoolEditor>
    Octopus.Client.Editors.IResourceBuilder
  {
    .ctor(Octopus.Client.Repositories.IWorkerPoolRepository)
    Octopus.Client.Model.WorkerPoolResource Instance { get; }
    Octopus.Client.Editors.WorkerPoolEditor CreateOrModify(String)
    Octopus.Client.Editors.WorkerPoolEditor CreateOrModify(String, String)
    Octopus.Client.Editors.WorkerPoolEditor Customize(Action<WorkerPoolResource>)
    Octopus.Client.Editors.WorkerPoolEditor Save()
  }
}
Octopus.Client.Editors.Async
{
  class AccountEditor`2
    Octopus.Client.Editors.Async.IResourceEditor<TAccountResource, TAccountEditor>
    Octopus.Client.Editors.Async.IResourceBuilder
  {
    .ctor(Octopus.Client.Repositories.Async.IAccountRepository)
    Octopus.Client.Editors.Async.TAccountResource Instance { get; }
    Task<TAccountEditor> CreateOrModify(String)
    Octopus.Client.Editors.Async.TAccountEditor Customize(Action<TAccountResource>)
    Task<TAccountEditor> FindByName(String)
    Task<TAccountEditor> Save()
    Task<AccountUsageResource> Usages()
  }
  class AmazonWebServicesAccountEditor
    Octopus.Client.Editors.Async.IResourceEditor<AmazonWebServicesAccountResource, AmazonWebServicesAccountEditor>
    Octopus.Client.Editors.Async.IResourceBuilder
    Octopus.Client.Editors.Async.AccountEditor<AmazonWebServicesAccountResource, AmazonWebServicesAccountEditor>
  {
    .ctor(Octopus.Client.Repositories.Async.IAccountRepository)
  }
  class AzureServicePrincipalAccountEditor
    Octopus.Client.Editors.Async.IResourceEditor<AzureServicePrincipalAccountResource, AzureServicePrincipalAccountEditor>
    Octopus.Client.Editors.Async.IResourceBuilder
    Octopus.Client.Editors.Async.AccountEditor<AzureServicePrincipalAccountResource, AzureServicePrincipalAccountEditor>
  {
    .ctor(Octopus.Client.Repositories.Async.IAccountRepository)
    Task<List<ResourceGroup>> ResourceGroups()
    Task<List<AzureStorageAccount>> StorageAccounts()
    Task<List<WebSite>> WebSites()
    Task<List<WebSlot>> WebSlots(Octopus.Client.Model.Accounts.WebSite)
  }
  class AzureSubscriptionAccountEditor
    Octopus.Client.Editors.Async.IResourceEditor<AzureSubscriptionAccountResource, AzureSubscriptionAccountEditor>
    Octopus.Client.Editors.Async.IResourceBuilder
    Octopus.Client.Editors.Async.AccountEditor<AzureSubscriptionAccountResource, AzureSubscriptionAccountEditor>
  {
    .ctor(Octopus.Client.Repositories.Async.IAccountRepository)
    Task<List<AzureStorageAccount>> StorageAccounts(Octopus.Client.Model.Accounts.AzureSubscriptionAccountResource)
    Task<List<WebSite>> WebSites(Octopus.Client.Model.Accounts.AzureSubscriptionAccountResource)
    Task<List<WebSite>> WebSites()
    Task<List<WebSlot>> WebSlots(Octopus.Client.Model.Accounts.AzureSubscriptionAccountResource, Octopus.Client.Model.Accounts.WebSite)
    Task<List<WebSlot>> WebSlots(Octopus.Client.Model.Accounts.WebSite)
  }
  class CertificateEditor
    Octopus.Client.Editors.Async.IResourceEditor<CertificateResource, CertificateEditor>
    Octopus.Client.Editors.Async.IResourceBuilder
  {
    .ctor(Octopus.Client.Repositories.Async.ICertificateRepository)
    Octopus.Client.Model.CertificateResource Instance { get; }
    Task<CertificateEditor> Create(String, String)
    Octopus.Client.Editors.Async.CertificateEditor Customize(Action<CertificateResource>)
    Task<CertificateEditor> FindByName(String)
    Task<CertificateEditor> Save()
    Task<CertificateUsageResource> Usages()
  }
  class ChannelEditor
    Octopus.Client.Editors.Async.IResourceEditor<ChannelResource, ChannelEditor>
    Octopus.Client.Editors.Async.IResourceBuilder
  {
    .ctor(Octopus.Client.Repositories.Async.IChannelRepository)
    Octopus.Client.Model.ChannelResource Instance { get; }
    Octopus.Client.Editors.Async.ChannelEditor AddCommonRuleForAllActions(String, String, Octopus.Client.Model.DeploymentProcessResource)
    Octopus.Client.Editors.Async.ChannelEditor AddOrUpdateTenantTags(Octopus.Client.Model.TagResource[])
    Octopus.Client.Editors.Async.ChannelEditor AddRule(Octopus.Client.Model.ChannelVersionRuleResource)
    Octopus.Client.Editors.Async.ChannelEditor AddRule(String, String, Octopus.Client.Model.DeploymentActionResource[])
    Octopus.Client.Editors.Async.ChannelEditor ClearRules()
    Octopus.Client.Editors.Async.ChannelEditor ClearTenantTags()
    Task<ChannelEditor> CreateOrModify(Octopus.Client.Model.ProjectResource, String)
    Task<ChannelEditor> CreateOrModify(Octopus.Client.Model.ProjectResource, String, String)
    Octopus.Client.Editors.Async.ChannelEditor Customize(Action<ChannelResource>)
    Task<ChannelEditor> Save()
    Octopus.Client.Editors.Async.ChannelEditor SetAsDefaultChannel()
    Octopus.Client.Editors.Async.ChannelEditor UsingLifecycle(Octopus.Client.Model.LifecycleResource)
  }
  class DeploymentProcessEditor
    Octopus.Client.Editors.Async.IResourceEditor<DeploymentProcessResource, DeploymentProcessEditor>
    Octopus.Client.Editors.Async.IResourceBuilder
  {
    .ctor(Octopus.Client.Repositories.Async.IDeploymentProcessRepository)
    Octopus.Client.Model.DeploymentProcessResource Instance { get; }
    Octopus.Client.Model.DeploymentStepResource AddOrUpdateStep(String)
    Octopus.Client.Editors.Async.DeploymentProcessEditor ClearSteps()
    Octopus.Client.Editors.Async.DeploymentProcessEditor Customize(Action<DeploymentProcessResource>)
    Octopus.Client.Model.DeploymentStepResource FindStep(String)
    Task<DeploymentProcessEditor> Load(String)
    Octopus.Client.Editors.Async.DeploymentProcessEditor RemoveStep(String)
    Task<DeploymentProcessEditor> Save()
  }
  class EnvironmentEditor
    Octopus.Client.Editors.Async.IResourceEditor<EnvironmentResource, EnvironmentEditor>
    Octopus.Client.Editors.Async.IResourceBuilder
  {
    .ctor(Octopus.Client.Repositories.Async.IEnvironmentRepository)
    Octopus.Client.Model.EnvironmentResource Instance { get; }
    Task<EnvironmentEditor> CreateOrModify(String)
    Task<EnvironmentEditor> CreateOrModify(String, String, Boolean)
    Task<EnvironmentEditor> CreateOrModify(String, String)
    Octopus.Client.Editors.Async.EnvironmentEditor Customize(Action<EnvironmentResource>)
    Task<EnvironmentEditor> Save()
  }
  interface IResourceBuilder
  {
  }
  interface IResourceEditor`2
    Octopus.Client.Editors.Async.IResourceBuilder
  {
    Octopus.Client.Editors.Async.TResource Instance { get; }
    Octopus.Client.Editors.Async.TResourceBuilder Customize(Action<TResource>)
    Task<TResourceBuilder> Save()
  }
  class LibraryVariableSetEditor
    Octopus.Client.Editors.Async.IResourceEditor<LibraryVariableSetResource, LibraryVariableSetEditor>
    Octopus.Client.Editors.Async.IResourceBuilder
  {
    .ctor(Octopus.Client.Repositories.Async.ILibraryVariableSetRepository, Octopus.Client.Repositories.Async.IVariableSetRepository)
    Octopus.Client.Model.LibraryVariableSetResource Instance { get; }
    Task<VariableSetEditor> Variables { get; }
    Octopus.Client.Model.IVariableTemplateContainerEditor<LibraryVariableSetResource> VariableTemplates { get; }
    Task<LibraryVariableSetEditor> CreateOrModify(String)
    Task<LibraryVariableSetEditor> CreateOrModify(String, String)
    Octopus.Client.Editors.Async.LibraryVariableSetEditor Customize(Action<LibraryVariableSetResource>)
    Task<LibraryVariableSetEditor> Save()
  }
  class LifecycleEditor
    Octopus.Client.Editors.Async.IResourceEditor<LifecycleResource, LifecycleEditor>
    Octopus.Client.Editors.Async.IResourceBuilder
  {
    .ctor(Octopus.Client.Repositories.Async.ILifecyclesRepository)
    Octopus.Client.Model.LifecycleResource Instance { get; }
    Octopus.Client.Model.PhaseResource AddOrUpdatePhase(String)
    Octopus.Client.Editors.Async.LifecycleEditor AsSimplePromotionLifecycle(IEnumerable<EnvironmentResource>)
    Octopus.Client.Editors.Async.LifecycleEditor Clear()
    Task<LifecycleEditor> CreateOrModify(String)
    Task<LifecycleEditor> CreateOrModify(String, String)
    Octopus.Client.Editors.Async.LifecycleEditor Customize(Action<LifecycleResource>)
    Task<LifecycleEditor> Save()
  }
  class MachineEditor
    Octopus.Client.Editors.Async.IResourceEditor<MachineResource, MachineEditor>
    Octopus.Client.Editors.Async.IResourceBuilder
  {
    .ctor(Octopus.Client.Repositories.Async.IMachineRepository)
    Octopus.Client.Model.MachineResource Instance { get; }
    Task<MachineEditor> CreateOrModify(String, Octopus.Client.Model.Endpoints.EndpointResource, Octopus.Client.Model.EnvironmentResource[], String[])
    Task<MachineEditor> CreateOrModify(String, Octopus.Client.Model.Endpoints.EndpointResource, Octopus.Client.Model.EnvironmentResource[], String[], Octopus.Client.Model.TenantResource[], Octopus.Client.Model.TagResource[], Nullable<TenantedDeploymentMode>)
    Octopus.Client.Editors.Async.MachineEditor Customize(Action<MachineResource>)
    Task<MachineEditor> Save()
  }
  class ProjectChannelsEditor
  {
    .ctor(Octopus.Client.Repositories.Async.IChannelRepository, Octopus.Client.Model.ProjectResource)
    Task<ChannelEditor> CreateOrModify(String)
    Task<ChannelEditor> CreateOrModify(String, String)
    Task<ProjectChannelsEditor> Delete(String)
    Task<ProjectChannelsEditor> SaveAll()
  }
  class ProjectEditor
    Octopus.Client.Editors.Async.IResourceEditor<ProjectResource, ProjectEditor>
    Octopus.Client.Editors.Async.IResourceBuilder
  {
    .ctor(Octopus.Client.Repositories.Async.IProjectRepository, Octopus.Client.Repositories.Async.IChannelRepository, Octopus.Client.Repositories.Async.IDeploymentProcessRepository, Octopus.Client.Repositories.Async.IProjectTriggerRepository, Octopus.Client.Repositories.Async.IVariableSetRepository)
    Octopus.Client.Editors.Async.ProjectChannelsEditor Channels { get; }
    Task<DeploymentProcessEditor> DeploymentProcess { get; }
    Octopus.Client.Model.ProjectResource Instance { get; }
    Octopus.Client.Editors.Async.ProjectTriggersEditor Triggers { get; }
    Task<VariableSetEditor> Variables { get; }
    Octopus.Client.Model.IVariableTemplateContainerEditor<ProjectResource> VariableTemplates { get; }
    Task<ProjectEditor> CreateOrModify(String, Octopus.Client.Model.ProjectGroupResource, Octopus.Client.Model.LifecycleResource)
    Task<ProjectEditor> CreateOrModify(String, Octopus.Client.Model.ProjectGroupResource, Octopus.Client.Model.LifecycleResource, String, String)
    Octopus.Client.Editors.Async.ProjectEditor Customize(Action<ProjectResource>)
    Octopus.Client.Editors.Async.ProjectEditor IncludingLibraryVariableSets(Octopus.Client.Model.LibraryVariableSetResource[])
    Task<ProjectEditor> Save()
    Task<ProjectEditor> SetLogo(String)
  }
  class ProjectGroupEditor
    Octopus.Client.Editors.Async.IResourceEditor<ProjectGroupResource, ProjectGroupEditor>
    Octopus.Client.Editors.Async.IResourceBuilder
  {
    .ctor(Octopus.Client.Repositories.Async.IProjectGroupRepository)
    Octopus.Client.Model.ProjectGroupResource Instance { get; }
    Task<ProjectGroupEditor> CreateOrModify(String)
    Task<ProjectGroupEditor> CreateOrModify(String, String)
    Octopus.Client.Editors.Async.ProjectGroupEditor Customize(Action<ProjectGroupResource>)
    Task<ProjectGroupEditor> Save()
  }
  class ProjectTriggerEditor
    Octopus.Client.Editors.Async.IResourceEditor<ProjectTriggerResource, ProjectTriggerEditor>
    Octopus.Client.Editors.Async.IResourceBuilder
  {
    .ctor(Octopus.Client.Repositories.Async.IProjectTriggerRepository)
    Octopus.Client.Model.ProjectTriggerResource Instance { get; }
    Task<ProjectTriggerEditor> CreateOrModify(Octopus.Client.Model.ProjectResource, String, Octopus.Client.Model.Triggers.TriggerFilterResource, Octopus.Client.Model.Triggers.TriggerActionResource)
    Octopus.Client.Editors.Async.ProjectTriggerEditor Customize(Action<ProjectTriggerResource>)
    Task<ProjectTriggerEditor> Save()
  }
  class ProjectTriggersEditor
  {
    .ctor(Octopus.Client.Repositories.Async.IProjectTriggerRepository, Octopus.Client.Model.ProjectResource)
    Task<ProjectTriggerEditor> CreateOrModify(String, Octopus.Client.Model.Triggers.TriggerFilterResource, Octopus.Client.Model.Triggers.TriggerActionResource)
    Task<ProjectTriggersEditor> Delete(String)
    Task<ProjectTriggersEditor> SaveAll()
  }
  class RunbookEditor
    Octopus.Client.Editors.Async.IResourceEditor<RunbookResource, RunbookEditor>
    Octopus.Client.Editors.Async.IResourceBuilder
  {
    .ctor(Octopus.Client.Repositories.Async.IRunbookRepository, Octopus.Client.Repositories.Async.IRunbookProcessRepository)
    Octopus.Client.Model.RunbookResource Instance { get; }
    Task<RunbookProcessEditor> RunbookProcess { get; }
    Task<RunbookEditor> CreateOrModify(Octopus.Client.Model.ProjectResource, String, String)
    Octopus.Client.Editors.Async.RunbookEditor Customize(Action<RunbookResource>)
    Task<RunbookEditor> Load(String)
    Task<RunbookEditor> Save()
  }
  class RunbookProcessEditor
    Octopus.Client.Editors.Async.IResourceEditor<RunbookProcessResource, RunbookProcessEditor>
    Octopus.Client.Editors.Async.IResourceBuilder
  {
    .ctor(Octopus.Client.Repositories.Async.IRunbookProcessRepository)
    Octopus.Client.Model.RunbookProcessResource Instance { get; }
    Octopus.Client.Model.DeploymentStepResource AddOrUpdateStep(String)
    Octopus.Client.Editors.Async.RunbookProcessEditor ClearSteps()
    Octopus.Client.Editors.Async.RunbookProcessEditor Customize(Action<RunbookProcessResource>)
    Octopus.Client.Model.DeploymentStepResource FindStep(String)
    Task<RunbookProcessEditor> Load(String)
    Octopus.Client.Editors.Async.RunbookProcessEditor RemoveStep(String)
    Task<RunbookProcessEditor> Save()
  }
  class SshKeyPairAccountEditor
    Octopus.Client.Editors.Async.IResourceEditor<SshKeyPairAccountResource, SshKeyPairAccountEditor>
    Octopus.Client.Editors.Async.IResourceBuilder
    Octopus.Client.Editors.Async.AccountEditor<SshKeyPairAccountResource, SshKeyPairAccountEditor>
  {
    .ctor(Octopus.Client.Repositories.Async.IAccountRepository)
  }
  class SubscriptionEditor
    Octopus.Client.Editors.Async.IResourceEditor<SubscriptionResource, SubscriptionEditor>
    Octopus.Client.Editors.Async.IResourceBuilder
  {
    .ctor(Octopus.Client.Repositories.Async.ISubscriptionRepository)
    Octopus.Client.Model.SubscriptionResource Instance { get; }
    Task<SubscriptionEditor> CreateOrModify(String, Octopus.Client.Model.EventNotificationSubscription, Boolean)
    Octopus.Client.Editors.Async.SubscriptionEditor Customize(Action<SubscriptionResource>)
    Task<SubscriptionEditor> Save()
  }
  class TagSetEditor
    Octopus.Client.Editors.Async.IResourceEditor<TagSetResource, TagSetEditor>
    Octopus.Client.Editors.Async.IResourceBuilder
  {
    .ctor(Octopus.Client.Repositories.Async.ITagSetRepository)
    Octopus.Client.Model.TagSetResource Instance { get; }
    Octopus.Client.Editors.Async.TagSetEditor AddOrUpdateTag(String, String, String)
    Octopus.Client.Editors.Async.TagSetEditor ClearTags()
    Task<TagSetEditor> CreateOrModify(String)
    Task<TagSetEditor> CreateOrModify(String, String)
    Octopus.Client.Editors.Async.TagSetEditor Customize(Action<TagSetResource>)
    Octopus.Client.Editors.Async.TagSetEditor RemoveTag(String)
    Task<TagSetEditor> Save()
  }
  class TenantEditor
    Octopus.Client.Editors.Async.IResourceEditor<TenantResource, TenantEditor>
    Octopus.Client.Editors.Async.IResourceBuilder
  {
    .ctor(Octopus.Client.Repositories.Async.ITenantRepository)
    Octopus.Client.Model.TenantResource Instance { get; }
    Task<TenantVariablesEditor> Variables { get; }
    Octopus.Client.Editors.Async.TenantEditor ClearProjects()
    Octopus.Client.Editors.Async.TenantEditor ClearTags()
    Octopus.Client.Editors.Async.TenantEditor ConnectToProjectAndEnvironments(Octopus.Client.Model.ProjectResource, Octopus.Client.Model.EnvironmentResource[])
    Task<TenantEditor> CreateOrModify(String)
    Task<TenantEditor> CreateOrModify(String, String, String)
    Octopus.Client.Editors.Async.TenantEditor Customize(Action<TenantResource>)
    Task<TenantEditor> Save()
    Task<TenantEditor> SetLogo(String)
    Octopus.Client.Editors.Async.TenantEditor WithTag(Octopus.Client.Model.TagResource)
  }
  class TenantVariablesEditor
    Octopus.Client.Editors.Async.IResourceEditor<TenantVariableResource, TenantVariablesEditor>
    Octopus.Client.Editors.Async.IResourceBuilder
  {
    .ctor(Octopus.Client.Repositories.Async.ITenantRepository, Octopus.Client.Model.TenantResource)
    Octopus.Client.Model.TenantVariableResource Instance { get; }
    Octopus.Client.Editors.Async.TenantVariablesEditor Customize(Action<TenantVariableResource>)
    Task<TenantVariablesEditor> Load()
    Task<TenantVariablesEditor> Save()
  }
  class UsernamePasswordAccountEditor
    Octopus.Client.Editors.Async.IResourceEditor<UsernamePasswordAccountResource, UsernamePasswordAccountEditor>
    Octopus.Client.Editors.Async.IResourceBuilder
    Octopus.Client.Editors.Async.AccountEditor<UsernamePasswordAccountResource, UsernamePasswordAccountEditor>
  {
    .ctor(Octopus.Client.Repositories.Async.IAccountRepository)
  }
  class VariableSetEditor
    Octopus.Client.Editors.Async.IResourceEditor<VariableSetResource, VariableSetEditor>
    Octopus.Client.Editors.Async.IResourceBuilder
  {
    .ctor(Octopus.Client.Repositories.Async.IVariableSetRepository)
    Octopus.Client.Model.VariableSetResource Instance { get; }
    Octopus.Client.Editors.Async.VariableSetEditor AddOrUpdateVariableValue(String, String, Octopus.Client.Model.ScopeSpecification, Boolean)
    Octopus.Client.Editors.Async.VariableSetEditor AddOrUpdateVariableValue(String, String, Octopus.Client.Model.ScopeSpecification, Boolean, String)
    Octopus.Client.Editors.Async.VariableSetEditor AddOrUpdateVariableValue(String, String, Octopus.Client.Model.ScopeSpecification)
    Octopus.Client.Editors.Async.VariableSetEditor AddOrUpdateVariableValue(String, String)
    Octopus.Client.Editors.Async.VariableSetEditor AddOrUpdateVariableValue(String, String, String)
    Octopus.Client.Editors.Async.VariableSetEditor Customize(Action<VariableSetResource>)
    Task<VariableSetEditor> Load(String)
    Task<VariableSetEditor> Save()
  }
  class VariableTemplateContainerEditor`1
  {
    .ctor(Octopus.Client.Model.IVariableTemplateContainerEditor<TContainer>)
    Octopus.Client.Editors.Async.VariableTemplateContainerEditor<TContainer> AddOrUpdateMultiLineTextTemplate(String, String)
    Octopus.Client.Editors.Async.VariableTemplateContainerEditor<TContainer> AddOrUpdateMultiLineTextTemplate(String, String, String, String)
    Octopus.Client.Editors.Async.VariableTemplateContainerEditor<TContainer> AddOrUpdateSelectTemplate(String, String, IDictionary<String, String>)
    Octopus.Client.Editors.Async.VariableTemplateContainerEditor<TContainer> AddOrUpdateSelectTemplate(String, String, IDictionary<String, String>, String, String)
    Octopus.Client.Editors.Async.VariableTemplateContainerEditor<TContainer> AddOrUpdateSensitiveTemplate(String, String)
    Octopus.Client.Editors.Async.VariableTemplateContainerEditor<TContainer> AddOrUpdateSensitiveTemplate(String, String, String, String)
    Octopus.Client.Editors.Async.VariableTemplateContainerEditor<TContainer> AddOrUpdateSingleLineTextTemplate(String, String)
    Octopus.Client.Editors.Async.VariableTemplateContainerEditor<TContainer> AddOrUpdateSingleLineTextTemplate(String, String, String, String)
    Octopus.Client.Editors.Async.VariableTemplateContainerEditor<TContainer> AddOrUpdateVariableTemplate(String, String, IDictionary<String, String>)
    Octopus.Client.Editors.Async.VariableTemplateContainerEditor<TContainer> AddOrUpdateVariableTemplate(String, String, IDictionary<String, String>, String, String)
  }
  class WorkerEditor
    Octopus.Client.Editors.Async.IResourceEditor<WorkerResource, WorkerEditor>
    Octopus.Client.Editors.Async.IResourceBuilder
  {
    .ctor(Octopus.Client.Repositories.Async.IWorkerRepository)
    Octopus.Client.Model.WorkerResource Instance { get; }
    Task<WorkerEditor> CreateOrModify(String, Octopus.Client.Model.Endpoints.EndpointResource, Octopus.Client.Model.WorkerPoolResource[])
    Octopus.Client.Editors.Async.WorkerEditor Customize(Action<WorkerResource>)
    Task<WorkerEditor> Save()
  }
  class WorkerPoolEditor
    Octopus.Client.Editors.Async.IResourceEditor<WorkerPoolResource, WorkerPoolEditor>
    Octopus.Client.Editors.Async.IResourceBuilder
  {
    .ctor(Octopus.Client.Repositories.Async.IWorkerPoolRepository)
    Octopus.Client.Model.WorkerPoolResource Instance { get; }
    Task<WorkerPoolEditor> CreateOrModify(String)
    Task<WorkerPoolEditor> CreateOrModify(String, String)
    Octopus.Client.Editors.Async.WorkerPoolEditor Customize(Action<WorkerPoolResource>)
    Task<WorkerPoolEditor> Save()
  }
}
Octopus.Client.Exceptions
{
  class DefaultSpaceNotFoundException
    ISerializable
    _Exception
    Exception
  {
    .ctor(Octopus.Client.Extensibility.IHaveSpaceResource)
  }
  class OctopusDeserializationException
    ISerializable
    _Exception
    Octopus.Client.Exceptions.OctopusException
  {
    .ctor(Int32, String)
    .ctor(Int32, String, Exception)
  }
  class OctopusErrorsContract
  {
    .ctor()
    Object Details { get; set; }
    String ErrorMessage { get; set; }
    String[] Errors { get; set; }
    String FullException { get; set; }
    String HelpText { get; set; }
  }
  abstract class OctopusException
    ISerializable
    _Exception
    Exception
  {
    String HelpText { get; }
    Int32 HttpStatusCode { get; }
  }
  abstract class OctopusExceptionFactory
  {
    static Octopus.Client.Exceptions.OctopusException CreateException(WebException, HttpWebResponse)
    static Task<OctopusException> CreateException(HttpResponseMessage)
    static Octopus.Client.Exceptions.OctopusException CreateException(Int32, String)
    class OctopusErrorsContract
    {
      .ctor()
      Object Details { get; set; }
      String ErrorMessage { get; set; }
      String[] Errors { get; set; }
      String FullException { get; set; }
      String HelpText { get; set; }
    }
  }
  class OctopusMethodNotAllowedFoundException
    ISerializable
    _Exception
    Octopus.Client.Exceptions.OctopusException
  {
    .ctor(String)
  }
  class OctopusResourceNotFoundException
    ISerializable
    _Exception
    Octopus.Client.Exceptions.OctopusException
  {
    .ctor(String)
  }
  class OctopusSecurityException
    ISerializable
    _Exception
    Octopus.Client.Exceptions.OctopusException
  {
    .ctor(Int32, String)
  }
  class OctopusServerException
    ISerializable
    _Exception
    Octopus.Client.Exceptions.OctopusException
  {
    .ctor(Int32, String)
  }
  class OctopusValidationException
    ISerializable
    _Exception
    Octopus.Client.Exceptions.OctopusException
  {
    .ctor(String, ICollection<String>)
    .ctor(Int32, String, ICollection<String>)
    .ctor(Int32, String, ICollection<String>, Object)
    Object Details { get; }
    String ErrorMessage { get; }
    ReadOnlyCollection<String> Errors { get; }
    Octopus.Client.Exceptions.TDetails DetailsAs()
  }
  class OperationNotSupportedByOctopusServerException
    ISerializable
    _Exception
    Octopus.Client.Exceptions.OctopusException
  {
    .ctor(String, String)
    String RequiredOctopusVersion { get; }
  }
  class ResourceSpaceDoesNotMatchRepositorySpaceException
    ISerializable
    _Exception
    Exception
  {
    .ctor(Octopus.Client.Extensibility.IHaveSpaceResource, Octopus.Client.Model.SpaceResource)
  }
  class UnsupportedApiVersionException
    ISerializable
    _Exception
    Octopus.Client.Exceptions.OctopusException
  {
    .ctor(String)
  }
}
Octopus.Client.Extensibility
{
  class Href
    IEquatable<Href>
  {
    .ctor(String)
    String AsString()
    Boolean Equals(Octopus.Client.Extensibility.Href)
    Boolean Equals(Object)
    Int32 GetHashCode()
    String ToString()
  }
  interface IHaveSpaceResource
  {
    String SpaceId { get; set; }
  }
  interface INamedResource
  {
    String Name { get; }
  }
  interface IResource
  {
    String Id { get; }
    Octopus.Client.Extensibility.LinkCollection Links { get; set; }
  }
  class LinkCollection
    IDictionary<String, Href>
    ICollection<KeyValuePair<String, Href>>
    IEnumerable<KeyValuePair<String, Href>>
    IEnumerable
    IDictionary
    ICollection
    IReadOnlyDictionary<String, Href>
    IReadOnlyCollection<KeyValuePair<String, Href>>
    ISerializable
    IDeserializationCallback
    Dictionary<String, Href>
  {
    .ctor()
    Octopus.Client.Extensibility.LinkCollection Add(String, Octopus.Client.Extensibility.Href)
    static Octopus.Client.Extensibility.LinkCollection Self(Octopus.Client.Extensibility.Href)
  }
}
Octopus.Client.Extensibility.Attributes
{
  abstract class ApiPropertyAttribute
    _Attribute
    Attribute
  {
  }
  class WriteableAttribute
    _Attribute
    Octopus.Client.Extensibility.Attributes.ApiPropertyAttribute
  {
    .ctor()
  }
  class WriteableOnCreateAttribute
    _Attribute
    Octopus.Client.Extensibility.Attributes.ApiPropertyAttribute
  {
    .ctor()
  }
}
Octopus.Client.Extensibility.Extensions.Infrastructure.Configuration
{
  abstract class ExtensionConfigurationResource
    Octopus.Client.Extensibility.IResource
  {
    String Id { get; set; }
    Boolean IsEnabled { get; set; }
    Octopus.Client.Extensibility.LinkCollection Links { get; set; }
  }
}
Octopus.Client.Extensions
{
  abstract class StringExtensions
  {
    static String CommaSeperate(IEnumerable<Object>)
    static String NewLineSeperate(IEnumerable<Object>)
  }
  abstract class TaskStateExtensions
  {
    static Boolean IsCompleted(Octopus.Client.Model.TaskState)
  }
  abstract class TypeExtensions
  {
    static Octopus.Client.Model.Accounts.AccountType DetermineAccountType(Type)
    static Object GetDefault(Type)
  }
  abstract class UriExtensions
  {
    static String HexEscape(Char)
  }
}
Octopus.Client.Logging
{
  interface ILogProvider
  {
    Octopus.Client.Logging.Logger GetLogger(String)
    IDisposable OpenMappedContext(String, String)
    IDisposable OpenNestedContext(String)
  }
  class Logger
    ICloneable
    ISerializable
    MulticastDelegate
  {
    .ctor(Object, IntPtr)
    IAsyncResult BeginInvoke(Octopus.Client.Logging.LogLevel, Func<String>, Exception, Object[], AsyncCallback, Object)
    Boolean EndInvoke(IAsyncResult)
    Boolean Invoke(Octopus.Client.Logging.LogLevel, Func<String>, Exception, Object[])
  }
  LogLevel
  {
      Trace = 0
      Debug = 1
      Info = 2
      Warn = 3
      Error = 4
      Fatal = 5
  }
  abstract class LogProvider
  {
    static System.String DisableLoggingEnvironmentVariable
    static Boolean IsDisabled { get; set; }
    static void SetCurrentLogProvider(Octopus.Client.Logging.ILogProvider)
  }
}
Octopus.Client.Model
{
  class ActionsUpdateProcessResource
    Octopus.Client.Extensibility.IResource
  {
    .ctor()
    String[] ActionIds { get; set; }
    String Id { get; set; }
    Octopus.Client.Extensibility.LinkCollection Links { get; set; }
    String ProcessId { get; set; }
    Octopus.Client.Model.ProcessType ProcessType { get; set; }
  }
  class ActionsUpdateResource
    Octopus.Client.Extensibility.IResource
  {
    .ctor()
    IDictionary<String, String[]> ActionIdsByProcessId { get; set; }
    Octopus.Client.Model.ActionsUpdateProcessResource[] ActionsToUpdate { get; set; }
    IDictionary<String, PropertyValueResource> DefaultPropertyValues { get; set; }
    String Id { get; set; }
    Octopus.Client.Extensibility.LinkCollection Links { get; set; }
    IDictionary<String, PropertyValueResource> Overrides { get; set; }
    Int32 Version { get; set; }
  }
  class ActionTemplateCategoryResource
    Octopus.Client.Extensibility.IResource
  {
    .ctor()
    Int32 DisplayOrder { get; set; }
    String Id { get; set; }
    Octopus.Client.Extensibility.LinkCollection Links { get; set; }
    String Name { get; set; }
  }
  class ActionTemplateParameterResource
  {
    .ctor()
    Octopus.Client.Model.PropertyValueResource DefaultValue { get; set; }
    IDictionary<String, String> DisplaySettings { get; set; }
    String HelpText { get; set; }
    String Id { get; set; }
    String Label { get; set; }
    String Name { get; set; }
    String GetControlType()
    Boolean IsAmazonWebServicesAccount()
    Boolean IsAzureAccount()
    Boolean IsCertificate()
    Boolean IsControlType(String)
    Boolean IsSensitive()
  }
  class ActionTemplateResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Extensibility.INamedResource
    Octopus.Client.Extensibility.IHaveSpaceResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    String ActionType { get; set; }
    String CommunityActionTemplateId { get; set; }
    String Description { get; set; }
    String Name { get; set; }
    Octopus.Client.Model.PackageReferenceCollection Packages { get; }
    IList<ActionTemplateParameterResource> Parameters { get; }
    IDictionary<String, PropertyValueResource> Properties { get; }
    String SpaceId { get; set; }
    Int32 Version { get; set; }
  }
  class ActionTemplateSearchResource
    Octopus.Client.Extensibility.IResource
  {
    .ctor()
    String Author { get; set; }
    List<String> Categories { get; set; }
    String Category { get; set; }
    String CommunityActionTemplateId { get; set; }
    String Description { get; set; }
    Boolean HasUpdate { get; set; }
    String Id { get; set; }
    Boolean IsBuiltIn { get; set; }
    Boolean IsInstalled { get; set; }
    String Keywords { get; set; }
    Octopus.Client.Extensibility.LinkCollection Links { get; set; }
    String Name { get; set; }
    String Type { get; set; }
    String Website { get; set; }
  }
  class ActionTemplateUsageResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    String ActionId { get; set; }
    String ActionName { get; set; }
    String ActionTemplateId { get; set; }
    String DeploymentProcessId { get; set; }
    String ProcessId { get; set; }
    Octopus.Client.Model.ProcessType ProcessType { get; set; }
    String ProjectId { get; set; }
    String ProjectName { get; set; }
    String ProjectSlug { get; set; }
    String RunbookId { get; set; }
    String RunbookName { get; set; }
    String StepId { get; set; }
    String StepName { get; set; }
    String Version { get; set; }
  }
  ActionUpdateOutcome
  {
      Success = 0
      ManualMergeRequired = 1
      DefaultParamterValueMissing = 2
      RemovedPackageInUse = 3
  }
  ActionUpdatePackageUsedBy
  {
      ProjectVersionStrategy = 0
      ProjectReleaseCreationStrategy = 1
      ChannelRule = 2
  }
  class ActionUpdateRemovedPackageUsage
  {
    .ctor(String, Octopus.Client.Model.ActionUpdatePackageUsedBy, String, String)
    String PackageReference { get; }
    Octopus.Client.Model.ActionUpdatePackageUsedBy UsedBy { get; }
    String UsedById { get; }
    String UsedByName { get; }
  }
  class ActionUpdateResultResource
    Octopus.Client.Extensibility.IResource
  {
    .ctor()
    String Id { get; set; }
    Octopus.Client.Extensibility.LinkCollection Links { get; set; }
    IDictionary<String, String[]> ManualMergeRequiredReasonsByPropertyName { get; set; }
    String[] NamesOfNewParametersMissingDefaultValue { get; set; }
    Octopus.Client.Model.ActionUpdateOutcome Outcome { get; set; }
    ICollection<ActionUpdateRemovedPackageUsage> RemovedPackageUsages { get; set; }
  }
  class ActivityElement
  {
    .ctor()
    Octopus.Client.Model.ActivityElement[] Children { get; set; }
    Nullable<DateTimeOffset> Ended { get; set; }
    String Id { get; set; }
    Octopus.Client.Model.ActivityLogElement[] LogElements { get; set; }
    String Name { get; set; }
    String ProgressMessage { get; set; }
    Int32 ProgressPercentage { get; set; }
    Boolean ShowAtSummaryLevel { get; set; }
    Nullable<DateTimeOffset> Started { get; set; }
    Octopus.Client.Model.ActivityStatus Status { get; set; }
  }
  class ActivityLogElement
  {
    .ctor()
    String Category { get; set; }
    String Detail { get; set; }
    String MessageText { get; set; }
    Nullable<DateTimeOffset> OccurredAt { get; set; }
  }
  ActivityStatus
  {
      Pending = 0
      Running = 1
      Success = 2
      Failed = 3
      Skipped = 4
      SuccessWithWarning = 5
      Canceled = 6
  }
  abstract class AdHocScript
  {
    static System.String Name
    abstract class Arguments
    {
      static System.String ActionTemplateId
      static System.String EnvironmentIds
      static System.String MachineIds
      static System.String Properties
      static System.String ScriptBody
      static System.String Syntax
      static System.String TargetRoles
      static System.String TargetType
    }
    TargetType
    {
        Machines = 0
        Environments = 1
        Workers = 2
        WorkerPools = 3
        OctopusServer = 4
    }
  }
  class AllowCsvAttribute
    _Attribute
    Attribute
  {
    .ctor()
  }
  class AnonymousVersionControlCredentialsResource
    Octopus.Client.Model.VersionControlCredentialsResource
  {
    .ctor()
    Octopus.Client.Model.VersionControlCredentialsType Type { get; }
  }
  class ApiConstants
  {
    static System.String AntiforgeryTokenCookiePrefix
    static System.String AntiforgeryTokenHttpHeaderName
    static System.String ApiKeyHttpHeaderName
    static System.String AuthenticationCookiePrefix
    static System.Int32 DefaultClientRequestTimeout
    static System.String OctopusUserAgentProductName
    static System.String SupportedApiSchemaVersionMax
    static System.String SupportedApiSchemaVersionMin
    .ctor()
  }
  class ApiKeyCreatedResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.ApiKeyResourceBase
  {
    .ctor()
    String ApiKey { get; set; }
  }
  class ApiKeyResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.ApiKeyResourceBase
  {
    .ctor()
    Octopus.Client.Model.SensitiveValue ApiKey { get; set; }
  }
  abstract class ApiKeyResourceBase
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    DateTimeOffset Created { get; set; }
    Nullable<DateTimeOffset> Expires { get; set; }
    String Purpose { get; set; }
    String UserId { get; set; }
  }
  abstract class Arguments
  {
    static System.String MachineIds
  }
  abstract class Arguments
  {
    static System.String DocumentId
  }
  abstract class Arguments
  {
    static System.String EnvironmentId
    static System.String MachineIds
    static System.String MachineTimeout
    static System.String RestrictedTo
    static System.String Timeout
    static System.String WorkerpoolId
  }
  abstract class Arguments
  {
    static System.String ActionTemplateId
    static System.String EnvironmentIds
    static System.String MachineIds
    static System.String Properties
    static System.String ScriptBody
    static System.String Syntax
    static System.String TargetRoles
    static System.String TargetType
  }
  abstract class Arguments
  {
    static System.String EnvironmentId
    static System.String MachineIds
    static System.String RestrictedTo
    static System.String WorkerpoolId
  }
  abstract class Arguments
  {
    static System.String MachineIds
  }
  abstract class Arguments
  {
    static System.String DeploymentId
  }
  abstract class Arguments
  {
    static System.String EmailAddress
  }
  abstract class Arguments
  {
    static System.String AccountId
  }
  class ArtifactResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Extensibility.IHaveSpaceResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    DateTimeOffset Created { get; set; }
    String Filename { get; set; }
    String LogCorrelationId { get; set; }
    String ServerTaskId { get; set; }
    String Source { get; set; }
    String SpaceId { get; set; }
  }
  class AuthenticationConfigResource
    Octopus.Client.Extensibility.IResource
  {
    .ctor()
    Boolean AutoLoginEnabled { get; set; }
    String CookieDomain { get; set; }
    String Id { get; set; }
    Boolean IsSelfServiceIdentityEditingEnabled { get; set; }
    Octopus.Client.Extensibility.LinkCollection Links { get; set; }
    String[] TrustedRedirectUrls { get; set; }
  }
  abstract class AutoDeploy
  {
    static System.String Name
    abstract class Arguments
    {
      static System.String MachineIds
    }
  }
  class AutoDeployReleaseOverrideResource
  {
    .ctor(String, String)
    .ctor(String, String, String)
    String EnvironmentId { get; }
    static IEqualityComparer<AutoDeployReleaseOverrideResource> EnvironmentIdTenantIdComparer { get; }
    String ReleaseId { get; }
    String TenantId { get; }
  }
  AutomationEnvironment
  {
      NoneOrUnknown = 0
      Octopus = 1
      Bamboo = 2
      TeamCity = 3
      AzureDevOps = 4
      AppVeyor = 5
      BitBucket = 6
      Jenkins = 7
      CircleCI = 8
      GitLabCI = 9
      Travis = 10
      GoCD = 11
      BitRise = 12
      Buddy = 13
      BuildKite = 14
      CirrusCI = 15
      AWSCodeBuild = 16
      Codeship = 17
      Drone = 18
      Dsari = 19
      Hudson = 20
      MagnumCI = 21
      SailCI = 22
      Semaphore = 23
      Shippable = 24
      SolanoCI = 25
      StriderCD = 26
  }
  class AwsElasticContainerRegistryFeedResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Extensibility.INamedResource
    Octopus.Client.Extensibility.IHaveSpaceResource
    Octopus.Client.Model.FeedResource
  {
    .ctor()
    String AccessKey { get; set; }
    Octopus.Client.Model.FeedType FeedType { get; }
    String Region { get; set; }
    Octopus.Client.Model.SensitiveValue SecretKey { get; set; }
  }
  class AzureRootResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
  }
  abstract class Backup
  {
    static System.String Name
  }
  class BackupConfigurationResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    Boolean BackupAutomatically { get; set; }
    Nullable<TimeSpan> BackupEvery { get; set; }
    String BackupToDirectory { get; set; }
    Boolean IsMasterKeyBackedUp { get; set; }
    Nullable<DateTimeOffset> NextDue { get; set; }
    Octopus.Client.Model.RetentionPeriod Retention { get; set; }
    Nullable<TimeSpan> StartingFrom { get; set; }
  }
  class BuiltInFeedResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Extensibility.INamedResource
    Octopus.Client.Extensibility.IHaveSpaceResource
    Octopus.Client.Model.FeedResource
  {
    .ctor()
    Nullable<Int32> DeleteUnreleasedPackagesAfterDays { get; set; }
    Octopus.Client.Model.FeedType FeedType { get; }
    Boolean IsBuiltInRepoSyncEnabled { get; set; }
  }
  class BuiltInFeedStatsResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    Int32 TotalPackages { get; set; }
  }
  abstract class BuiltInTasks
  {
    static String[] TasksThatCanBeQueuedByUsers()
    abstract class AdHocScript
    {
      static System.String Name
      abstract class Arguments
      {
        static System.String ActionTemplateId
        static System.String EnvironmentIds
        static System.String MachineIds
        static System.String Properties
        static System.String ScriptBody
        static System.String Syntax
        static System.String TargetRoles
        static System.String TargetType
      }
      TargetType
      {
          Machines = 0
          Environments = 1
          Workers = 2
          WorkerPools = 3
          OctopusServer = 4
      }
    }
    abstract class AutoDeploy
    {
      static System.String Name
      abstract class Arguments
      {
        static System.String MachineIds
      }
    }
    abstract class Backup
    {
      static System.String Name
    }
    abstract class Delete
    {
      static System.String Name
      abstract class Arguments
      {
        static System.String DocumentId
      }
    }
    abstract class Deploy
    {
      static System.String Name
      abstract class Arguments
      {
        static System.String DeploymentId
      }
    }
    abstract class Health
    {
      static System.String Name
      static String[] CanBeRestrictedTo()
      abstract class Arguments
      {
        static System.String EnvironmentId
        static System.String MachineIds
        static System.String MachineTimeout
        static System.String RestrictedTo
        static System.String Timeout
        static System.String WorkerpoolId
      }
    }
    abstract class Migration
    {
      static System.String Name
    }
    abstract class MigrationImport
    {
      static System.String Name
    }
    abstract class MigrationPartialExport
    {
      static System.String Name
    }
    abstract class Retention
    {
      static System.String Name
    }
    abstract class SyncCommunityActionTemplates
    {
      static System.String Name
    }
    abstract class SystemIntegrityCheck
    {
      static System.String Name
    }
    abstract class TaskRestrictedTo
    {
      static System.String DeploymentTargets
      static System.String Policies
      static System.String Unrestricted
      static System.String Workers
    }
    abstract class TestAzureAccount
    {
      static System.String Name
      abstract class Arguments
      {
        static System.String AccountId
      }
    }
    abstract class TestEmail
    {
      static System.String Name
      abstract class Arguments
      {
        static System.String EmailAddress
      }
    }
    abstract class UpdateCalamari
    {
      static System.String Name
      abstract class Arguments
      {
        static System.String MachineIds
      }
    }
    abstract class Upgrade
    {
      static System.String Name
      static String[] CanBeRestrictedTo()
      abstract class Arguments
      {
        static System.String EnvironmentId
        static System.String MachineIds
        static System.String RestrictedTo
        static System.String WorkerpoolId
      }
    }
  }
  CalamariUpdateBehavior
  {
      UpdateOnDeployment = 0
      UpdateOnNewMachine = 1
      UpdateAlways = 2
  }
  class CertificateConfigurationResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Extensibility.INamedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    String Name { get; set; }
    String SignatureAlgorithm { get; set; }
    String Thumbprint { get; set; }
  }
  CertificateExportPemOptions
  {
      PrimaryOnly = 0
      PrimaryAndChain = 1
      ChainOnly = 2
  }
  CertificateFormat
  {
      Pkcs12 = 0
      Der = 1
      Pem = 2
      Unknown = 3
  }
  class CertificateResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Extensibility.INamedResource
    Octopus.Client.Extensibility.IHaveSpaceResource
    Octopus.Client.Model.Resource
  {
    .ctor(String, String)
    .ctor(String, String, String)
    Nullable<DateTimeOffset> Archived { get; }
    IList<X509Certificate> CertificateChain { get; set; }
    Octopus.Client.Model.SensitiveValue CertificateData { get; set; }
    Octopus.Client.Model.CertificateFormat CertificateDataFormat { get; }
    Octopus.Client.Model.ReferenceCollection EnvironmentIds { get; set; }
    Boolean HasPrivateKey { get; }
    Boolean IsExpired { get; }
    String IssuerCommonName { get; }
    String IssuerDistinguishedName { get; }
    String IssuerOrganization { get; }
    String Name { get; set; }
    DateTimeOffset NotAfter { get; }
    DateTimeOffset NotBefore { get; }
    String Notes { get; set; }
    Octopus.Client.Model.SensitiveValue Password { get; set; }
    String ReplacedBy { get; }
    Boolean SelfSigned { get; }
    String SerialNumber { get; }
    String SignatureAlgorithmName { get; }
    String SpaceId { get; set; }
    IList<String> SubjectAlternativeNames { get; set; }
    String SubjectCommonName { get; }
    String SubjectDistinguishedName { get; }
    String SubjectOrganization { get; }
    Octopus.Client.Model.TenantedDeploymentMode TenantedDeploymentParticipation { get; set; }
    Octopus.Client.Model.ReferenceCollection TenantIds { get; set; }
    Octopus.Client.Model.ReferenceCollection TenantTags { get; set; }
    String Thumbprint { get; }
    Int32 Version { get; }
    class X509Certificate
    {
      .ctor()
      String IssuerDistinguishedName { get; set; }
      DateTimeOffset NotAfter { get; set; }
      DateTimeOffset NotBefore { get; set; }
      String SerialNumber { get; set; }
      String SignatureAlgorithmName { get; set; }
      String SubjectDistinguishedName { get; set; }
      String Thumbprint { get; set; }
      Int32 Version { get; set; }
    }
  }
  class CertificateUsageResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    ICollection<MachineResource> DeploymentTargetUsages { get; set; }
    ICollection<LibraryVariableSetResource> LibraryVariableSetUsages { get; set; }
    ICollection<ProjectResource> ProjectUsages { get; set; }
    ICollection<TenantResource> TenantUsages { get; set; }
  }
  class ChannelResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Extensibility.INamedResource
    Octopus.Client.Extensibility.IHaveSpaceResource
    Octopus.Client.Model.IHaveProject
    Octopus.Client.Model.Resource
  {
    .ctor()
    String Description { get; set; }
    Boolean IsDefault { get; set; }
    String LifecycleId { get; set; }
    String Name { get; set; }
    String ProjectId { get; set; }
    List<ChannelVersionRuleResource> Rules { get; set; }
    String SpaceId { get; set; }
    Octopus.Client.Model.ReferenceCollection TenantTags { get; set; }
    Octopus.Client.Model.ChannelResource AddCommonRuleForAllActions(String, String, Octopus.Client.Model.DeploymentProcessResource)
    Octopus.Client.Model.ChannelResource AddOrUpdateTenantTags(Octopus.Client.Model.TagResource[])
    Octopus.Client.Model.ChannelResource AddRule(Octopus.Client.Model.ChannelVersionRuleResource)
    Octopus.Client.Model.ChannelResource AddRule(String, String, Octopus.Client.Model.DeploymentActionResource[])
    Octopus.Client.Model.ChannelResource ClearRules()
    Octopus.Client.Model.ChannelResource ClearTenantTags()
    Octopus.Client.Model.ChannelResource SetAsDefaultChannel()
    Octopus.Client.Model.ChannelResource UsingLifecycle(Octopus.Client.Model.LifecycleResource)
  }
  class ChannelVersionRuleResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    ICollection<DeploymentActionPackageResource> ActionPackages { get; set; }
    String Tag { get; set; }
    String VersionRange { get; set; }
  }
  class CommitDetails
  {
    .ctor()
    String Comment { get; set; }
    String Id { get; set; }
    String LinkUrl { get; set; }
  }
  class CommitResource
  {
    .ctor()
    String CommitMessage { get; set; }
  }
  class CommitResource`1
    Octopus.Client.Model.CommitResource
  {
    .ctor()
    Octopus.Client.Model.TResource Resource { get; set; }
  }
  CommunicationStyle
  {
      None = 0
      TentaclePassive = 1
      TentacleActive = 2
      Ssh = 3
      OfflineDrop = 4
      AzureWebApp = 5
      Ftp = 6
      AzureCloudService = 7
      AzureServiceFabricCluster = 8
      Kubernetes = 9
      StepPackage = 10
  }
  class CommunityActionTemplateResource
    Octopus.Client.Extensibility.IResource
  {
    .ctor()
    String Author { get; set; }
    String Description { get; set; }
    String HistoryUrl { get; set; }
    String Id { get; set; }
    Octopus.Client.Extensibility.LinkCollection Links { get; set; }
    String Name { get; set; }
    IList<ActionTemplateParameterResource> Parameters { get; }
    IDictionary<String, PropertyValueResource> Properties { get; }
    String Type { get; set; }
    Int32 Version { get; set; }
    String Website { get; set; }
  }
  class Comparer
    IEqualityComparer<UserPermissionRestriction>
  {
    .ctor()
    Boolean Equals(Octopus.Client.Model.UserPermissionRestriction, Octopus.Client.Model.UserPermissionRestriction)
    Int32 GetHashCode(Octopus.Client.Model.UserPermissionRestriction)
  }
  class ConfigurationItemResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    String Description { get; set; }
    String Name { get; set; }
  }
  abstract class ControlType
  {
    static System.String AmazonWebServicesAccount
    static System.String AzureAccount
    static System.String Certificate
    static System.String Checkbox
    static System.String ControlTypeKey
    static System.String MultiLineText
    static System.String Select
    static System.String Sensitive
    static System.String SingleLineText
    static System.String StepName
    static Dictionary<String, String> AsDisplaySettings(String)
  }
  class DashboardConfigurationResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Extensibility.IHaveSpaceResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    Octopus.Client.Model.ReferenceCollection IncludedEnvironmentIds { get; set; }
    Octopus.Client.Model.ReferenceCollection IncludedProjectGroupIds { get; set; }
    Octopus.Client.Model.ReferenceCollection IncludedProjectIds { get; set; }
    Octopus.Client.Model.ReferenceCollection IncludedTenantIds { get; set; }
    Octopus.Client.Model.ReferenceCollection IncludedTenantTags { get; set; }
    Nullable<Int32> ProjectLimit { get; set; }
    String SpaceId { get; set; }
  }
  class DashboardEnvironmentResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    String Name { get; set; }
  }
  class DashboardItemResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    String ChannelId { get; set; }
    Nullable<DateTimeOffset> CompletedTime { get; set; }
    DateTimeOffset Created { get; set; }
    String DeploymentId { get; set; }
    String Duration { get; set; }
    String EnvironmentId { get; set; }
    String ErrorMessage { get; set; }
    Boolean HasPendingInterruptions { get; set; }
    Boolean HasWarningsOrErrors { get; set; }
    Boolean IsCompleted { get; set; }
    Boolean IsCurrent { get; set; }
    Boolean IsPrevious { get; set; }
    String ProjectId { get; set; }
    DateTimeOffset QueueTime { get; set; }
    String ReleaseId { get; set; }
    String ReleaseVersion { get; set; }
    Nullable<DateTimeOffset> StartTime { get; set; }
    Octopus.Client.Model.TaskState State { get; set; }
    String TaskId { get; set; }
    String TenantId { get; set; }
  }
  DashboardItemsOptions
  {
      IncludeCurrentDeploymentOnly = 0
      IncludeCurrentAndPreviousSuccessfulDeployment = 1
  }
  class DashboardProjectGroupResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    Octopus.Client.Model.ReferenceCollection EnvironmentIds { get; set; }
    String Name { get; set; }
    Octopus.Client.Model.DashboardProjectGroupResource Copy()
  }
  class DashboardProjectResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    Boolean CanPerformUntenantedDeployment { get; set; }
    Octopus.Client.Model.ReferenceCollection EnvironmentIds { get; set; }
    Boolean IsDisabled { get; set; }
    String Name { get; set; }
    String ProjectGroupId { get; set; }
    String Slug { get; set; }
    Octopus.Client.Model.TenantedDeploymentMode TenantDeploymentMode { get; set; }
    Octopus.Client.Model.TenantedDeploymentMode TenantedDeploymentMode { get; set; }
    Octopus.Client.Model.DashboardProjectResource Copy()
  }
  DashboardRenderMode
  {
      VirtualizeColumns = 0
      VirtualizeRowsAndColumns = 1
  }
  class DashboardResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    List<DashboardEnvironmentResource> Environments { get; set; }
    Boolean IsFiltered { get; set; }
    List<DashboardItemResource> Items { get; set; }
    List<DashboardItemResource> PreviousItems { get; set; }
    List<DashboardProjectGroupResource> ProjectGroups { get; set; }
    Nullable<Int32> ProjectLimit { get; set; }
    List<DashboardProjectResource> Projects { get; set; }
    List<DashboardTenantResource> Tenants { get; set; }
  }
  class DashboardTenantResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    String Name { get; set; }
    IDictionary<String, ReferenceCollection> ProjectEnvironments { get; set; }
    Octopus.Client.Model.ReferenceCollection TenantTags { get; set; }
  }
  class DatabasePersistenceSettingsResource
    Octopus.Client.Model.PersistenceSettingsResource
  {
    .ctor()
    Octopus.Client.Model.PersistenceSettingsType Type { get; }
  }
  DaysOfWeek
  {
      Sunday = 1
      Monday = 2
      Tuesday = 4
      Wednesday = 8
      Thursday = 16
      Friday = 32
      Saturday = 64
  }
  class DaysOfWeekFlagConverter
    JsonConverter
  {
    .ctor()
    Boolean CanConvert(Type)
    Object ReadJson(JsonReader, Type, Object, JsonSerializer)
    void WriteJson(JsonWriter, Object, JsonSerializer)
  }
  class Defect
  {
    .ctor()
    String Description { get; set; }
    Octopus.Client.Model.DefectStatus Status { get; set; }
  }
  class DefectResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    .ctor(String)
    .ctor(String, Octopus.Client.Model.DefectStatus)
    String Description { get; set; }
    Nullable<DefectStatus> Status { get; set; }
  }
  DefectStatus
  {
      Unresolved = 0
      Resolved = 1
  }
  abstract class Delete
  {
    static System.String Name
    abstract class Arguments
    {
      static System.String DocumentId
    }
  }
  DeleteMachinesBehavior
  {
      DoNotDelete = 0
      DeleteUnavailableMachines = 1
  }
  abstract class Deploy
  {
    static System.String Name
    abstract class Arguments
    {
      static System.String DeploymentId
    }
  }
  DeploymentActionCondition
  {
      Success = 0
      Variable = 1
  }
  class DeploymentActionContainerResource
  {
    .ctor()
    String FeedId { get; set; }
    String Image { get; set; }
  }
  class DeploymentActionPackageResource
  {
    .ctor(String)
    .ctor(String, String)
    String DeploymentAction { get; set; }
    String PackageReference { get; set; }
    Boolean DeploymentActionNameMatches(String)
    Boolean PackageReferenceNameMatches(String)
  }
  class DeploymentActionResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    String ActionType { get; set; }
    Boolean CanBeUsedForProjectVersioning { get; set; }
    Octopus.Client.Model.ReferenceCollection Channels { get; }
    Octopus.Client.Model.DeploymentActionCondition Condition { get; set; }
    Octopus.Client.Model.DeploymentActionContainerResource Container { get; set; }
    Octopus.Client.Model.ReferenceCollection Environments { get; }
    Octopus.Client.Model.ReferenceCollection ExcludedEnvironments { get; }
    Boolean IsDisabled { get; set; }
    Boolean IsRequired { get; set; }
    String Name { get; set; }
    String Notes { get; set; }
    Octopus.Client.Model.PackageReferenceCollection Packages { get; }
    IDictionary<String, PropertyValueResource> Properties { get; }
    Octopus.Client.Model.ReferenceCollection TenantTags { get; }
    String WorkerPoolId { get; set; }
    String WorkerPoolVariable { get; set; }
    Octopus.Client.Model.DeploymentActionResource ClearAllConditions()
    Octopus.Client.Model.DeploymentActionResource ForChannels(Octopus.Client.Model.ChannelResource[])
    Octopus.Client.Model.DeploymentActionResource ForEnvironments(Octopus.Client.Model.EnvironmentResource[])
    Octopus.Client.Model.DeploymentActionResource ForTenantTags(Octopus.Client.Model.TagResource[])
  }
  DeploymentApprovalStatus
  {
      Approved = 0
      Rejected = 1
  }
  class DeploymentConnectivityPolicy
  {
    .ctor()
    Boolean AllowDeploymentsToNoTargets { get; set; }
    Boolean ExcludeUnhealthyTargets { get; set; }
    Octopus.Client.Model.SkipMachineBehavior SkipMachineBehavior { get; set; }
    Octopus.Client.Model.ReferenceCollection TargetRoles { get; set; }
  }
  class DeploymentPreviewBaseResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    Octopus.Client.Model.Forms.Form Form { get; set; }
    List<DeploymentTemplateStep> StepsToExecute { get; set; }
    Boolean UseGuidedFailureModeByDefault { get; set; }
  }
  class DeploymentPreviewResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.DeploymentPreviewBaseResource
  {
    .ctor()
    List<ReleaseChanges> Changes { get; set; }
    String ChangesMarkdown { get; set; }
  }
  class DeploymentProcessResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.IProcessResource
    Octopus.Client.Extensibility.IHaveSpaceResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    String LastSnapshotId { get; set; }
    String ProjectId { get; set; }
    String SpaceId { get; set; }
    IList<DeploymentStepResource> Steps { get; }
    Int32 Version { get; set; }
    Octopus.Client.Model.DeploymentStepResource AddOrUpdateStep(String)
    Octopus.Client.Model.IProcessResource ClearSteps()
    Octopus.Client.Model.DeploymentStepResource FindStep(String)
    Octopus.Client.Model.IProcessResource RemoveStep(String)
  }
  class DeploymentPromomotionTenant
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    String Name { get; set; }
    List<DeploymentPromotionTarget> PromoteTo { get; set; }
  }
  class DeploymentPromotionTarget
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    String Name { get; set; }
  }
  class DeploymentResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.IExecutionResource
    Octopus.Client.Extensibility.IHaveSpaceResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    List<ReleaseChanges> Changes { get; set; }
    String ChangesMarkdown { get; set; }
    String ChannelId { get; set; }
    String Comments { get; set; }
    DateTimeOffset Created { get; set; }
    String DeployedBy { get; set; }
    String DeployedById { get; set; }
    Octopus.Client.Model.ReferenceCollection DeployedToMachineIds { get; set; }
    String DeploymentProcessId { get; set; }
    String EnvironmentId { get; set; }
    Octopus.Client.Model.ReferenceCollection ExcludedMachineIds { get; set; }
    Boolean FailureEncountered { get; set; }
    Boolean ForcePackageDownload { get; set; }
    Boolean ForcePackageRedeployment { get; set; }
    Dictionary<String, String> FormValues { get; set; }
    String ManifestVariableSetId { get; set; }
    String Name { get; set; }
    String ProjectId { get; set; }
    Nullable<DateTimeOffset> QueueTime { get; set; }
    Nullable<DateTimeOffset> QueueTimeExpiry { get; set; }
    String ReleaseId { get; set; }
    Octopus.Client.Model.ReferenceCollection SkipActions { get; set; }
    String SpaceId { get; set; }
    Octopus.Client.Model.ReferenceCollection SpecificMachineIds { get; set; }
    String TaskId { get; set; }
    String TenantId { get; set; }
    Octopus.Client.Model.RetentionPeriod TentacleRetentionPeriod { get; set; }
    Boolean UseGuidedFailure { get; set; }
  }
  class DeploymentSettingsResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Extensibility.IHaveSpaceResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    Octopus.Client.Model.DeploymentConnectivityPolicy ConnectivityPolicy { get; set; }
    Octopus.Client.Model.GuidedFailureMode DefaultGuidedFailureMode { get; set; }
    Boolean DefaultToSkipIfAlreadyInstalled { get; set; }
    String DeploymentChangesTemplate { get; set; }
    String ProjectId { get; set; }
    String ReleaseNotesTemplate { get; set; }
    String SpaceId { get; set; }
    Octopus.Client.Model.VersioningStrategyResource VersioningStrategy { get; set; }
  }
  DeploymentStepCondition
  {
      Success = 0
      Failure = 1
      Always = 2
      Variable = 3
  }
  DeploymentStepPackageRequirement
  {
      LetOctopusDecide = 0
      BeforePackageAcquisition = 1
      AfterPackageAcquisition = 2
  }
  class DeploymentStepProperties
  {
    .ctor()
    HealthCheckErrorHandling
    {
        TreatExceptionsAsErrors = 0
        TreatExceptionsAsWarnings = 1
    }
    HealthCheckIncludeMachinesInDeployment
    {
        DoNotAlterMachines = 0
        IncludeCheckedMachines = 1
    }
    HealthCheckType
    {
        FullHealthCheck = 0
        ConnectionTest = 1
    }
  }
  class DeploymentStepResource
  {
    .ctor()
    List<DeploymentActionResource> Actions { get; }
    Octopus.Client.Model.DeploymentStepCondition Condition { get; set; }
    String Id { get; set; }
    String Name { get; set; }
    Octopus.Client.Model.DeploymentStepPackageRequirement PackageRequirement { get; set; }
    IDictionary<String, PropertyValueResource> Properties { get; }
    Boolean RequiresPackagesToBeAcquired { get; set; }
    Octopus.Client.Model.DeploymentStepStartTrigger StartTrigger { get; set; }
    Octopus.Client.Model.DeploymentActionResource AddOrUpdateAction(String)
    Octopus.Client.Model.DeploymentActionResource AddOrUpdateManualInterventionAction(String, String)
    Octopus.Client.Model.DeploymentActionResource AddOrUpdatePackageAction(String, Octopus.Client.Model.PackageResource)
    Octopus.Client.Model.DeploymentActionResource AddOrUpdateScriptAction(String, Octopus.Client.Model.DeploymentProcess.ScriptAction, Octopus.Client.Model.DeploymentProcess.ScriptTarget)
    Octopus.Client.Model.DeploymentStepResource ClearActions()
    Octopus.Client.Model.DeploymentActionResource FindAction(String)
    Octopus.Client.Model.DeploymentStepResource RemoveAction(String)
    Octopus.Client.Model.DeploymentStepResource RequirePackagesToBeAcquired(Boolean)
    Octopus.Client.Model.DeploymentStepResource TargetingRoles(String[])
    Octopus.Client.Model.DeploymentStepResource WithCondition(Octopus.Client.Model.DeploymentStepCondition)
    Octopus.Client.Model.DeploymentStepResource WithPackageRequirement(Octopus.Client.Model.DeploymentStepPackageRequirement)
    Octopus.Client.Model.DeploymentStepResource WithStartTrigger(Octopus.Client.Model.DeploymentStepStartTrigger)
  }
  DeploymentStepStartTrigger
  {
      StartAfterPrevious = 0
      StartWithPrevious = 1
  }
  class DeploymentTemplateBaseResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    Boolean IsLibraryVariableSetModified { get; set; }
    Boolean IsVariableSetModified { get; set; }
    List<DeploymentPromotionTarget> PromoteTo { get; set; }
    List<DeploymentPromomotionTenant> TenantPromotions { get; set; }
  }
  class DeploymentTemplateResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.DeploymentTemplateBaseResource
  {
    .ctor()
    String DeploymentNotes { get; set; }
    Boolean IsDeploymentProcessModified { get; set; }
  }
  class DeploymentTemplateStep
  {
    .ctor()
    String ActionId { get; set; }
    String ActionName { get; set; }
    String ActionNumber { get; set; }
    Boolean CanBeSkipped { get; set; }
    Octopus.Client.Model.ReferenceDataItem[] ExcludedMachines { get; set; }
    Boolean HasNoApplicableMachines { get; set; }
    String[] MachineNames { get; set; }
    Octopus.Client.Model.MachineDeploymentPreview[] Machines { get; set; }
    String[] Roles { get; set; }
    Octopus.Client.Model.ReferenceDataItem[] UnavailableMachines { get; set; }
  }
  DiscoverableEndpointType
  {
      TentaclePassive = 0
      TentacleActive = 1
      Ssh = 2
  }
  class DiscoverMachineOptions
  {
    .ctor(String)
    String Host { get; }
    Int32 Port { get; set; }
    Octopus.Client.Model.ProxyResource Proxy { get; set; }
    Nullable<DiscoverableEndpointType> Type { get; set; }
  }
  class DockerFeedResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Extensibility.INamedResource
    Octopus.Client.Extensibility.IHaveSpaceResource
    Octopus.Client.Model.FeedResource
  {
    .ctor()
    String ApiVersion { get; set; }
    Octopus.Client.Model.FeedType FeedType { get; }
    String FeedUri { get; set; }
    Octopus.Client.Model.SensitiveValue Password { get; set; }
    String RegistryPath { get; set; }
    String Username { get; set; }
  }
  class DocumentTypeResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    String Name { get; set; }
  }
  EmailPriority
  {
      Normal = 0
      Low = 1
      High = 2
  }
  class EncryptedBytes
  {
    .ctor(Byte[], Byte[])
    Byte[] Ciphertext { get; }
    Byte[] Salt { get; }
    static Octopus.Client.Model.EncryptedBytes FromBase64(String)
    String ToBase64()
  }
  class EnvironmentResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Extensibility.INamedResource
    Octopus.Client.Extensibility.IHaveSpaceResource
    Octopus.Client.Model.ResourceWithExtensionSettings
  {
    .ctor()
    Boolean AllowDynamicInfrastructure { get; set; }
    String Description { get; set; }
    String Name { get; set; }
    Int32 SortOrder { get; set; }
    String SpaceId { get; set; }
    Boolean UseGuidedFailure { get; set; }
  }
  class EnvironmentsSummaryResource
    Octopus.Client.Model.SummaryResourcesCombined
  {
    .ctor()
    List<EnvironmentSummaryResource> EnvironmentSummaries { get; set; }
    Dictionary<String, Int32> MachineTenantSummaries { get; set; }
    Dictionary<String, Int32> MachineTenantTagSummaries { get; set; }
  }
  class EnvironmentSummaryResource
    Octopus.Client.Model.SummaryResource
  {
    .ctor()
    Octopus.Client.Model.EnvironmentResource Environment { get; set; }
    Dictionary<String, Int32> MachineTenantSummaries { get; set; }
    Dictionary<String, Int32> MachineTenantTagSummaries { get; set; }
  }
  class EventAgentResource
    Octopus.Client.Extensibility.IResource
  {
    .ctor()
    String Id { get; set; }
    Octopus.Client.Extensibility.LinkCollection Links { get; set; }
    String Name { get; set; }
  }
  class EventCategoryResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Extensibility.INamedResource
  {
    .ctor()
    String Id { get; set; }
    Octopus.Client.Extensibility.LinkCollection Links { get; set; }
    String Name { get; set; }
  }
  class EventGroupResource
    Octopus.Client.Extensibility.IResource
  {
    .ctor()
    List<String> EventCategories { get; set; }
    String Id { get; set; }
    Octopus.Client.Extensibility.LinkCollection Links { get; set; }
    String Name { get; set; }
  }
  class EventNotificationSubscription
  {
    .ctor()
    Nullable<DateTimeOffset> EmailDigestLastProcessed { get; set; }
    Nullable<Int64> EmailDigestLastProcessedEventAutoId { get; set; }
    TimeSpan EmailFrequencyPeriod { get; set; }
    Octopus.Client.Model.EmailPriority EmailPriority { get; set; }
    String EmailShowDatesInTimeZoneId { get; set; }
    Octopus.Client.Model.ReferenceCollection EmailTeams { get; set; }
    Octopus.Client.Model.EventNotificationSubscriptionFilter Filter { get; set; }
    String WebhookHeaderKey { get; set; }
    String WebhookHeaderValue { get; set; }
    Nullable<DateTimeOffset> WebhookLastProcessed { get; set; }
    Nullable<Int64> WebhookLastProcessedEventAutoId { get; set; }
    Octopus.Client.Model.ReferenceCollection WebhookTeams { get; set; }
    TimeSpan WebhookTimeout { get; set; }
    String WebhookURI { get; set; }
  }
  class EventNotificationSubscriptionFilter
  {
    .ctor()
    IList<String> DocumentTypes { get; set; }
    IList<String> Environments { get; set; }
    IList<String> EventAgents { get; set; }
    IList<String> EventCategories { get; set; }
    IList<String> EventGroups { get; set; }
    IList<String> ProjectGroups { get; set; }
    IList<String> Projects { get; set; }
    IList<String> Tags { get; set; }
    IList<String> Tenants { get; set; }
    IList<String> Users { get; set; }
  }
  class EventReference
  {
    .ctor(String, Int32, Int32)
    Int32 Length { get; }
    String ReferencedDocumentId { get; }
    Int32 StartIndex { get; }
  }
  class EventResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Extensibility.IHaveSpaceResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    String Category { get; set; }
    String Comments { get; set; }
    String Details { get; set; }
    String IdentityEstablishedWith { get; set; }
    Boolean IsService { get; set; }
    String Message { get; set; }
    String MessageHtml { get; set; }
    List<EventReference> MessageReferences { get; set; }
    DateTimeOffset Occurred { get; set; }
    Octopus.Client.Model.ReferenceCollection RelatedDocumentIds { get; set; }
    String SpaceId { get; set; }
    String UserAgent { get; set; }
    String UserId { get; set; }
    String Username { get; set; }
  }
  EventScope
  {
      Application = 0
      Project = 1
      Release = 2
      Deployment = 3
  }
  class ExtensionSettingsValues
  {
    .ctor()
    String ExtensionId { get; set; }
    Object Values { get; set; }
  }
  class ExternalSecurityGroupResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    String DisplayName { get; set; }
  }
  class FeaturesConfigurationResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    String HelpSidebarSupportLink { get; set; }
    Boolean IsActionContainersEnabled { get; set; }
    Boolean IsBuiltInWorkerEnabled { get; set; }
    Boolean IsCommunityActionTemplatesEnabled { get; set; }
    Boolean IsConfigurationAsCodeEnabled { get; set; }
    Boolean IsHelpSidebarEnabled { get; set; }
    Boolean IsKubernetesEnabled { get; set; }
  }
  class FeedResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Extensibility.INamedResource
    Octopus.Client.Extensibility.IHaveSpaceResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    Octopus.Client.Model.FeedType FeedType { get; }
    String Name { get; set; }
    IList<PackageAcquisitionLocation> PackageAcquisitionLocationOptions { get; }
    String SpaceId { get; set; }
  }
  FeedType
  {
      None = 0
      NuGet = 1
      Docker = 2
      Maven = 3
      OctopusProject = 4
      GitHub = 5
      BuiltIn = 6
      Helm = 7
      AwsElasticContainerRegistry = 8
  }
  class FileUpload
  {
    .ctor()
    Stream Contents { get; set; }
    String FileName { get; set; }
  }
  class GitHubFeedResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Extensibility.INamedResource
    Octopus.Client.Extensibility.IHaveSpaceResource
    Octopus.Client.Model.FeedResource
  {
    .ctor()
    Int32 DownloadAttempts { get; set; }
    Int32 DownloadRetryBackoffSeconds { get; set; }
    Octopus.Client.Model.FeedType FeedType { get; }
    String FeedUri { get; set; }
    Octopus.Client.Model.SensitiveValue Password { get; set; }
    String Username { get; set; }
  }
  GuidedFailureMode
  {
      EnvironmentDefault = 0
      Off = 1
      On = 2
  }
  abstract class Health
  {
    static System.String Name
    static String[] CanBeRestrictedTo()
    abstract class Arguments
    {
      static System.String EnvironmentId
      static System.String MachineIds
      static System.String MachineTimeout
      static System.String RestrictedTo
      static System.String Timeout
      static System.String WorkerpoolId
    }
  }
  HealthCheckErrorHandling
  {
      TreatExceptionsAsErrors = 0
      TreatExceptionsAsWarnings = 1
  }
  HealthCheckIncludeMachinesInDeployment
  {
      DoNotAlterMachines = 0
      IncludeCheckedMachines = 1
  }
  HealthCheckType
  {
      RunScript = 0
      OnlyConnectivity = 1
  }
  HealthCheckType
  {
      FullHealthCheck = 0
      ConnectionTest = 1
  }
  class HelmFeedResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Extensibility.INamedResource
    Octopus.Client.Extensibility.IHaveSpaceResource
    Octopus.Client.Model.FeedResource
  {
    .ctor()
    Octopus.Client.Model.FeedType FeedType { get; }
    String FeedUri { get; set; }
    Octopus.Client.Model.SensitiveValue Password { get; set; }
    String Username { get; set; }
  }
  interface IAuditedResource
  {
    String LastModifiedBy { get; set; }
    Nullable<DateTimeOffset> LastModifiedOn { get; set; }
  }
  class IdentityClaimResource
  {
    .ctor()
    .ctor(String, Boolean)
    Boolean IsIdentifyingClaim { get; set; }
    String Value { get; set; }
  }
  class IdentityResource
  {
    .ctor()
    .ctor(String)
    Dictionary<String, IdentityClaimResource> Claims { get; }
    String IdentityProviderName { get; set; }
  }
  interface IExecutionResource
    Octopus.Client.Extensibility.IResource
  {
    String Comments { get; set; }
    DateTimeOffset Created { get; set; }
    String DeployedBy { get; set; }
    String DeployedById { get; set; }
    Octopus.Client.Model.ReferenceCollection DeployedToMachineIds { get; set; }
    String EnvironmentId { get; set; }
    Octopus.Client.Model.ReferenceCollection ExcludedMachineIds { get; set; }
    Boolean FailureEncountered { get; }
    Boolean ForcePackageDownload { get; set; }
    Dictionary<String, String> FormValues { get; set; }
    String ManifestVariableSetId { get; set; }
    String Name { get; set; }
    String ProjectId { get; set; }
    Nullable<DateTimeOffset> QueueTime { get; set; }
    Nullable<DateTimeOffset> QueueTimeExpiry { get; set; }
    Octopus.Client.Model.ReferenceCollection SkipActions { get; set; }
    Octopus.Client.Model.ReferenceCollection SpecificMachineIds { get; set; }
    String TaskId { get; set; }
    String TenantId { get; set; }
    Octopus.Client.Model.RetentionPeriod TentacleRetentionPeriod { get; set; }
    Boolean UseGuidedFailure { get; set; }
  }
  interface IHaveProject
  {
    String ProjectId { get; set; }
  }
  class InterruptionResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Extensibility.IHaveSpaceResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    Boolean CanTakeResponsibility { get; set; }
    String CorrelationId { get; set; }
    DateTimeOffset Created { get; set; }
    Octopus.Client.Model.Forms.Form Form { get; set; }
    Boolean HasResponsibility { get; set; }
    Boolean IsLinkedToOtherInterruption { get; set; }
    Boolean IsPending { get; set; }
    Octopus.Client.Model.ReferenceCollection RelatedDocumentIds { get; set; }
    Octopus.Client.Model.ReferenceCollection ResponsibleTeamIds { get; set; }
    String ResponsibleUserId { get; set; }
    String SpaceId { get; set; }
    String TaskId { get; set; }
    String Title { get; set; }
  }
  class InvitationResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Extensibility.IHaveSpaceResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    Octopus.Client.Model.ReferenceCollection AddToTeamIds { get; set; }
    DateTimeOffset Expires { get; set; }
    String InvitationCode { get; set; }
    String SpaceId { get; set; }
  }
  interface IProcessResource
    Octopus.Client.Extensibility.IResource
  {
    String LastSnapshotId { get; set; }
    String ProjectId { get; set; }
    IList<DeploymentStepResource> Steps { get; }
    Int32 Version { get; set; }
    Octopus.Client.Model.DeploymentStepResource AddOrUpdateStep(String)
    Octopus.Client.Model.IProcessResource ClearSteps()
    Octopus.Client.Model.DeploymentStepResource FindStep(String)
    Octopus.Client.Model.IProcessResource RemoveStep(String)
  }
  interface ISnapshotResource
    Octopus.Client.Extensibility.IResource
  {
    DateTimeOffset Assembled { get; set; }
    List<String> LibraryVariableSetSnapshotIds { get; set; }
    String ProjectId { get; set; }
    String ProjectVariableSetSnapshotId { get; set; }
    List<SelectedPackage> SelectedPackages { get; }
  }
  interface IVariableTemplateContainer
  {
    List<ActionTemplateParameterResource> Templates { get; }
  }
  interface IVariableTemplateContainerEditor`1
  {
    Octopus.Client.Model.TContainer AddOrUpdateMultiLineTextTemplate(String, String)
    Octopus.Client.Model.TContainer AddOrUpdateMultiLineTextTemplate(String, String, String, String)
    Octopus.Client.Model.TContainer AddOrUpdateSelectTemplate(String, String, IDictionary<String, String>)
    Octopus.Client.Model.TContainer AddOrUpdateSelectTemplate(String, String, IDictionary<String, String>, String, String)
    Octopus.Client.Model.TContainer AddOrUpdateSensitiveTemplate(String, String)
    Octopus.Client.Model.TContainer AddOrUpdateSensitiveTemplate(String, String, String, String)
    Octopus.Client.Model.TContainer AddOrUpdateSingleLineTextTemplate(String, String)
    Octopus.Client.Model.TContainer AddOrUpdateSingleLineTextTemplate(String, String, String, String)
    Octopus.Client.Model.TContainer AddOrUpdateVariableTemplate(String, String, IDictionary<String, String>)
    Octopus.Client.Model.TContainer AddOrUpdateVariableTemplate(String, String, IDictionary<String, String>, String, String)
    Octopus.Client.Model.TContainer Clear()
  }
  LeadershipRank
  {
      Follower = 0
      Leader = 1
  }
  class Library
  {
    .ctor(String)
    String LibraryVariableSetId { get; }
    String LibraryVariableSetName { get; set; }
    Octopus.Client.Extensibility.LinkCollection Links { get; set; }
    List<ActionTemplateParameterResource> Templates { get; set; }
    Dictionary<String, PropertyValueResource> Variables { get; set; }
  }
  class LibraryVariableSetProjectUsage
  {
    .ctor()
    Boolean IsCurrentlyBeingUsedInProject { get; set; }
    String ProjectId { get; set; }
    String ProjectName { get; set; }
    String ProjectSlug { get; set; }
    ICollection<LibraryVariableSetReleaseUsageEntry> Releases { get; set; }
    List<LibraryVariableSetRunbookSnapshotUsageEntry> RunbookSnapshots { get; set; }
  }
  class LibraryVariableSetReleaseUsageEntry
  {
    .ctor()
    String ReleaseId { get; set; }
    String ReleaseVersion { get; set; }
  }
  class LibraryVariableSetResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Extensibility.INamedResource
    Octopus.Client.Model.IVariableTemplateContainer
    Octopus.Client.Model.IVariableTemplateContainerEditor<LibraryVariableSetResource>
    Octopus.Client.Extensibility.IHaveSpaceResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    Octopus.Client.Model.VariableSetContentType ContentType { get; set; }
    String Description { get; set; }
    String Name { get; set; }
    String SpaceId { get; set; }
    List<ActionTemplateParameterResource> Templates { get; set; }
    String VariableSetId { get; set; }
    Octopus.Client.Model.LibraryVariableSetResource AddOrUpdateMultiLineTextTemplate(String, String)
    Octopus.Client.Model.LibraryVariableSetResource AddOrUpdateMultiLineTextTemplate(String, String, String, String)
    Octopus.Client.Model.LibraryVariableSetResource AddOrUpdateSelectTemplate(String, String, IDictionary<String, String>)
    Octopus.Client.Model.LibraryVariableSetResource AddOrUpdateSelectTemplate(String, String, IDictionary<String, String>, String, String)
    Octopus.Client.Model.LibraryVariableSetResource AddOrUpdateSensitiveTemplate(String, String)
    Octopus.Client.Model.LibraryVariableSetResource AddOrUpdateSensitiveTemplate(String, String, String, String)
    Octopus.Client.Model.LibraryVariableSetResource AddOrUpdateSingleLineTextTemplate(String, String)
    Octopus.Client.Model.LibraryVariableSetResource AddOrUpdateSingleLineTextTemplate(String, String, String, String)
    Octopus.Client.Model.LibraryVariableSetResource AddOrUpdateVariableTemplate(String, String, IDictionary<String, String>)
    Octopus.Client.Model.LibraryVariableSetResource AddOrUpdateVariableTemplate(String, String, IDictionary<String, String>, String, String)
    Octopus.Client.Model.LibraryVariableSetResource Clear()
  }
  class LibraryVariableSetRunbookSnapshotUsageEntry
  {
    .ctor()
    String SnapshotId { get; set; }
    String SnapshotName { get; set; }
  }
  class LibraryVariableSetUsageResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    Int32 CountOfProjectsUserCannotSee { get; set; }
    Int32 CountOfReleasesUserCannotSee { get; set; }
    Int32 CountOfRunbookSnapshotsUserCannotSee { get; set; }
    ICollection<LibraryVariableSetProjectUsage> Projects { get; set; }
  }
  abstract class LicenseKinds
  {
    static System.String CommercialLicense
    static System.String CommunityEdition
    static System.String Trial
    static System.String Unlicensed
  }
  class LicenseLimitStatusResource
  {
    .ctor()
    Int32 CurrentUsage { get; set; }
    String Disposition { get; set; }
    Int32 EffectiveLimit { get; set; }
    String EffectiveLimitDescription { get; set; }
    Boolean IsUnlimited { get; set; }
    String Message { get; set; }
    String Name { get; set; }
  }
  abstract class LicenseMessageDispositions
  {
    static System.String Error
    static System.String Information
    static System.String Warning
  }
  class LicenseMessageResource
  {
    .ctor()
    String Disposition { get; set; }
    String Message { get; set; }
  }
  class LicenseResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    String LicenseText { get; set; }
    String SerialNumber { get; set; }
  }
  class LicenseStatusResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    String ComplianceSummary { get; set; }
    Int32 DaysToEffectiveExpiryDate { get; set; }
    Boolean DoesExpiryBlockKeyActivities { get; set; }
    Int32 EffectiveClusterTaskLimit { get; set; }
    DateTime EffectiveExpiryDate { get; set; }
    Int32 EffectiveNodeTaskLimit { get; set; }
    String HostingEnvironment { get; set; }
    Boolean IsClusterTaskLimitControlledByLicense { get; set; }
    Boolean IsCompliant { get; set; }
    Boolean IsNodeTaskLimitControlledByLicense { get; set; }
    String LicenseKind { get; set; }
    Octopus.Client.Model.LicenseLimitStatusResource[] Limits { get; set; }
    Octopus.Client.Model.LicenseMessageResource[] Messages { get; set; }
    String PermissionsMode { get; set; }
  }
  class LifecycleProgressionResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    Octopus.Client.Model.ReferenceCollection NextDeployments { get; set; }
    Int32 NextDeploymentsMinimumRequired { get; set; }
    List<PhaseProgressionResource> Phases { get; set; }
  }
  class LifecycleResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Extensibility.INamedResource
    Octopus.Client.Extensibility.IHaveSpaceResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    String Description { get; set; }
    String Name { get; set; }
    IList<PhaseResource> Phases { get; }
    Octopus.Client.Model.RetentionPeriod ReleaseRetentionPolicy { get; set; }
    String SpaceId { get; set; }
    Octopus.Client.Model.RetentionPeriod TentacleRetentionPolicy { get; set; }
    Octopus.Client.Model.PhaseResource AddOrUpdatePhase(String)
    Octopus.Client.Model.LifecycleResource Clear()
    Octopus.Client.Model.PhaseResource FindPhase(String)
    Octopus.Client.Model.LifecycleResource RemovePhase(String)
    Octopus.Client.Model.LifecycleResource WithReleaseRetentionPolicy(Octopus.Client.Model.RetentionPeriod)
    Octopus.Client.Model.LifecycleResource WithTentacleRetentionPolicy(Octopus.Client.Model.RetentionPeriod)
  }
  class LoginCommand
  {
    .ctor()
    String Password { get; set; }
    Boolean RememberMe { get; set; }
    Octopus.Client.Model.LoginState State { get; set; }
    String Username { get; set; }
  }
  class LoginState
  {
    .ctor()
    Boolean UsingSecureConnection { get; set; }
  }
  abstract class MachineBasedResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Extensibility.INamedResource
    Octopus.Client.Model.Resource
  {
    String Architecture { get; set; }
    Octopus.Client.Model.Endpoints.EndpointResource Endpoint { get; set; }
    Boolean HasLatestCalamari { get; set; }
    Octopus.Client.Model.MachineModelHealthStatus HealthStatus { get; set; }
    Boolean IsDisabled { get; set; }
    Boolean IsInProcess { get; set; }
    String MachinePolicyId { get; set; }
    String Name { get; set; }
    String OperatingSystem { get; set; }
    String ShellName { get; set; }
    String ShellVersion { get; set; }
    Octopus.Client.Model.MachineModelStatus Status { get; set; }
    String StatusSummary { get; set; }
    String Thumbprint { get; set; }
    String Uri { get; set; }
  }
  class MachineCleanupPolicy
  {
    .ctor()
    Octopus.Client.Model.DeleteMachinesBehavior DeleteMachinesBehavior { get; set; }
    TimeSpan DeleteMachinesElapsedTimeSpan { get; set; }
  }
  class MachineConnectionStatus
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    String CurrentTentacleVersion { get; set; }
    DateTimeOffset LastChecked { get; set; }
    List<ActivityLogElement> Logs { get; set; }
    String MachineId { get; set; }
    String Status { get; set; }
  }
  MachineConnectivityBehavior
  {
      ExpectedToBeOnline = 0
      MayBeOfflineAndCanBeSkipped = 1
  }
  class MachineConnectivityPolicy
  {
    .ctor()
    Octopus.Client.Model.MachineConnectivityBehavior MachineConnectivityBehavior { get; set; }
  }
  class MachineDeploymentPreview
  {
    .ctor()
    Boolean HasLatestCalamari { get; set; }
    String Id { get; set; }
    String Name { get; set; }
  }
  class MachineHealthCheckPolicy
  {
    .ctor()
    .ctor(Octopus.Client.Model.MachineScriptPolicy, Octopus.Client.Model.MachineScriptPolicy)
    Octopus.Client.Model.MachineScriptPolicy BashHealthCheckPolicy { get; set; }
    String HealthCheckCron { get; set; }
    String HealthCheckCronTimezone { get; set; }
    Nullable<TimeSpan> HealthCheckInterval { get; set; }
    Octopus.Client.Model.HealthCheckType HealthCheckType { get; set; }
    Octopus.Client.Model.MachineScriptPolicy PowerShellHealthCheckPolicy { get; set; }
    Octopus.Client.Model.MachineScriptPolicy SshEndpointHealthCheckPolicy { get; }
    Octopus.Client.Model.MachineScriptPolicy TentacleEndpointHealthCheckPolicy { get; }
  }
  MachineModelHealthStatus
  {
      Healthy = 0
      Unavailable = 1
      Unknown = 2
      HasWarnings = 3
      Unhealthy = 4
  }
  MachineModelStatus
  {
      Online = 0
      Offline = 1
      Unknown = 2
      NeedsUpgrade = 3
      CalamariNeedsUpgrade = 4
      Disabled = 5
  }
  class MachinePolicyResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Extensibility.INamedResource
    Octopus.Client.Extensibility.IHaveSpaceResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    TimeSpan ConnectionConnectTimeout { get; set; }
    Int32 ConnectionRetryCountLimit { get; set; }
    TimeSpan ConnectionRetrySleepInterval { get; set; }
    TimeSpan ConnectionRetryTimeLimit { get; set; }
    String Description { get; set; }
    Boolean IsDefault { get; set; }
    Octopus.Client.Model.MachineCleanupPolicy MachineCleanupPolicy { get; set; }
    Octopus.Client.Model.MachineConnectivityPolicy MachineConnectivityPolicy { get; set; }
    Octopus.Client.Model.MachineHealthCheckPolicy MachineHealthCheckPolicy { get; set; }
    Octopus.Client.Model.MachineUpdatePolicy MachineUpdatePolicy { get; set; }
    String Name { get; set; }
    TimeSpan PollingRequestMaximumMessageProcessingTimeout { get; set; }
    TimeSpan PollingRequestQueueTimeout { get; set; }
    String SpaceId { get; set; }
  }
  class MachinePollingConversation
  {
    .ctor()
    String InitialMessageDescription { get; set; }
    Guid InitialMessageId { get; set; }
    DateTime StartedAtUtc { get; set; }
  }
  class MachineResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Extensibility.INamedResource
    Octopus.Client.Model.MachineBasedResource
  {
    .ctor()
    Octopus.Client.Model.ReferenceCollection EnvironmentIds { get; set; }
    Octopus.Client.Model.ReferenceCollection Roles { get; set; }
    Octopus.Client.Model.TenantedDeploymentMode TenantedDeploymentParticipation { get; set; }
    Octopus.Client.Model.ReferenceCollection TenantIds { get; set; }
    Octopus.Client.Model.ReferenceCollection TenantTags { get; set; }
    Octopus.Client.Model.MachineResource AddOrUpdateEnvironments(Octopus.Client.Model.EnvironmentResource[])
    Octopus.Client.Model.MachineResource AddOrUpdateRoles(String[])
    Octopus.Client.Model.MachineResource AddOrUpdateTenants(Octopus.Client.Model.TenantResource[])
    Octopus.Client.Model.MachineResource AddOrUpdateTenantTags(Octopus.Client.Model.TagResource[])
    Octopus.Client.Model.MachineResource ClearEnvironments()
    Octopus.Client.Model.MachineResource ClearRoles()
    Octopus.Client.Model.MachineResource ClearTenants()
    Octopus.Client.Model.MachineResource ClearTenantTags()
    Octopus.Client.Model.MachineResource RemoveEnvironment(Octopus.Client.Model.EnvironmentResource)
    Octopus.Client.Model.MachineResource RemoveRole(String)
    Octopus.Client.Model.MachineResource RemoveTenant(Octopus.Client.Model.TenantResource)
    Octopus.Client.Model.MachineResource RemoveTenantTag(Octopus.Client.Model.TagResource)
  }
  class MachineScriptPolicy
  {
    .ctor()
    Octopus.Client.Model.MachineScriptPolicyRunType RunType { get; set; }
    String ScriptBody { get; set; }
  }
  MachineScriptPolicyRunType
  {
      InheritFromDefault = 0
      Inline = 1
      OnlyConnectivity = 2
  }
  class MachineUpdatePolicy
  {
    .ctor()
    Octopus.Client.Model.CalamariUpdateBehavior CalamariUpdateBehavior { get; set; }
    String TentacleUpdateAccountId { get; set; }
    Octopus.Client.Model.TentacleUpdateBehavior TentacleUpdateBehavior { get; set; }
  }
  class MaintenanceConfigurationResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    Boolean IsInMaintenanceMode { get; set; }
  }
  class MavenFeedResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Extensibility.INamedResource
    Octopus.Client.Extensibility.IHaveSpaceResource
    Octopus.Client.Model.FeedResource
  {
    .ctor()
    Int32 DownloadAttempts { get; set; }
    Int32 DownloadRetryBackoffSeconds { get; set; }
    Octopus.Client.Model.FeedType FeedType { get; }
    String FeedUri { get; set; }
    Octopus.Client.Model.SensitiveValue Password { get; set; }
    String Username { get; set; }
  }
  abstract class Migration
  {
    static System.String Name
  }
  abstract class MigrationImport
  {
    static System.String Name
  }
  abstract class MigrationPartialExport
  {
    static System.String Name
  }
  class MissingVariableResource
  {
    .ctor()
    String EnvironmentId { get; set; }
    String LibraryVariableSetId { get; set; }
    Octopus.Client.Extensibility.LinkCollection Links { get; set; }
    String ProjectId { get; set; }
    String VariableTemplateId { get; set; }
    String VariableTemplateName { get; set; }
  }
  MultipleAccountType
  {
      None = 0
      KubernetesStandard = 1
      KubernetesAws = 2
      KubernetesAzure = 3
      KubernetesCertificate = 4
      KubernetesPodService = 5
      KubernetesGoogleCloud = 6
  }
  class MultiTenancyStatusResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    Boolean Enabled { get; set; }
  }
  class NamedReferenceItem
  {
    .ctor()
    Boolean DisplayIdAndName { get; set; }
    String DisplayName { get; set; }
    String Id { get; set; }
  }
  class NamedReferenceItemCollection
    IList<NamedReferenceItem>
    ICollection<NamedReferenceItem>
    IEnumerable<NamedReferenceItem>
    IEnumerable
    IList
    ICollection
    IReadOnlyList<NamedReferenceItem>
    IReadOnlyCollection<NamedReferenceItem>
    List<NamedReferenceItem>
  {
    .ctor()
  }
  class NormalizeAttribute
    _Attribute
    Attribute
  {
    .ctor()
  }
  class NotDocumentReferenceAttribute
    _Attribute
    Attribute
  {
    .ctor()
  }
  class NotReadableAttribute
    _Attribute
    Octopus.Client.Extensibility.Attributes.ApiPropertyAttribute
  {
    .ctor()
  }
  class NuGetFeedResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Extensibility.INamedResource
    Octopus.Client.Extensibility.IHaveSpaceResource
    Octopus.Client.Model.FeedResource
  {
    static System.Int32 DefaultDownloadAttempts
    static System.Int32 DefaultDownloadRetryBackoffSeconds
    static System.Boolean DefaultEnhancedMode
    .ctor()
    Int32 DownloadAttempts { get; set; }
    Int32 DownloadRetryBackoffSeconds { get; set; }
    Boolean EnhancedMode { get; set; }
    Octopus.Client.Model.FeedType FeedType { get; }
    String FeedUri { get; set; }
    Octopus.Client.Model.SensitiveValue Password { get; set; }
    String Username { get; set; }
  }
  class NumericReportData
  {
    .ctor()
    String[] Labels { get; set; }
    Octopus.Client.Model.NumericReportSeries[] Series { get; set; }
  }
  class NumericReportSeries
  {
    .ctor()
    Double[] Data { get; set; }
    String Label { get; set; }
  }
  class OctopusProjectFeedResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Extensibility.INamedResource
    Octopus.Client.Extensibility.IHaveSpaceResource
    Octopus.Client.Model.FeedResource
  {
    .ctor()
    Octopus.Client.Model.FeedType FeedType { get; }
  }
  class OctopusServerClusterSummaryResource
  {
    .ctor()
    Octopus.Client.Extensibility.LinkCollection Links { get; set; }
    Octopus.Client.Model.OctopusServerNodeSummaryResource[] Nodes { get; set; }
  }
  class OctopusServerNodeDetailsResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    Int32 RunningTasks { get; set; }
  }
  class OctopusServerNodeResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Extensibility.INamedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    Boolean IsInMaintenanceMode { get; set; }
    Int32 MaxConcurrentTasks { get; set; }
    String Name { get; set; }
  }
  class OctopusServerNodeSummaryResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    Boolean IsInMaintenanceMode { get; set; }
    Boolean IsLeader { get; set; }
    Boolean IsOffline { get; set; }
    Nullable<DateTimeOffset> LastSeen { get; set; }
    Int32 MaxConcurrentTasks { get; set; }
    String Name { get; set; }
    Octopus.Client.Model.LeadershipRank Rank { get; set; }
    Int32 RunningTaskCount { get; set; }
  }
  OverwriteMode
  {
      FailIfExists = 0
      OverwriteExisting = 1
      IgnoreIfExists = 2
  }
  PackageAcquisitionLocation
  {
      Server = 0
      ExecutionTarget = 1
      NotAcquired = 2
  }
  class PackageBuildMetadata
  {
    .ctor()
    String BuildNumber { get; set; }
    String BuildUrl { get; set; }
    String PackageId { get; set; }
    String VcsCommitNumber { get; set; }
    String VcsRoot { get; set; }
    String VcsType { get; set; }
    String Version { get; set; }
  }
  class PackageFromBuiltInFeedResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.PackageResource
  {
    .ctor()
    String Hash { get; set; }
    Nullable<Int64> PackageSizeBytes { get; set; }
  }
  class PackageReference
  {
    .ctor(String, String, String, Octopus.Client.Model.PackageAcquisitionLocation)
    .ctor(String, String, String, String)
    .ctor(String, String, Octopus.Client.Model.PackageAcquisitionLocation)
    .ctor(String, String, String)
    .ctor(String, String)
    .ctor()
    String AcquisitionLocation { get; set; }
    String FeedId { get; set; }
    String Id { get; set; }
    Boolean IsPrimaryPackage { get; }
    String Name { get; set; }
    String PackageId { get; set; }
    IDictionary<String, String> Properties { get; }
    Octopus.Client.Model.PackageReference Clone()
  }
  class PackageReferenceCollection
    ICollection<PackageReference>
    IEnumerable<PackageReference>
    IEnumerable
  {
    .ctor()
    Int32 Count { get; }
    Boolean IsReadOnly { get; }
    Octopus.Client.Model.PackageReference PrimaryPackage { get; }
    void Add(Octopus.Client.Model.PackageReference)
    void Clear()
    Boolean Contains(Octopus.Client.Model.PackageReference)
    void CopyTo(Octopus.Client.Model.PackageReference[], Int32)
    Octopus.Client.Model.PackageReference GetByName(String)
    IEnumerator<PackageReference> GetEnumerator()
    Boolean Remove(Octopus.Client.Model.PackageReference)
    Boolean TryGetByName(String, Octopus.Client.Model.PackageReference&)
  }
  class PackageResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    String Description { get; set; }
    String FeedId { get; set; }
    String FileExtension { get; set; }
    String NuGetFeedId { get; set; }
    String NuGetPackageId { get; set; }
    String PackageId { get; set; }
    Octopus.Client.Model.BuildInformation.OctopusPackageVersionBuildInformationMappedResource PackageVersionBuildInformation { get; set; }
    Nullable<DateTimeOffset> Published { get; set; }
    String ReleaseNotes { get; set; }
    String Summary { get; set; }
    String Title { get; set; }
    String Version { get; set; }
  }
  class PackageSignatureResource
  {
    .ctor()
    String BaseVersion { get; set; }
    Byte[] Signature { get; set; }
  }
  class PerformanceConfigurationResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    Octopus.Client.Model.DashboardRenderMode DefaultDashboardRenderMode { get; set; }
  }
  Permission
  {
      AdministerSystem = 0
      ProjectEdit = 1
      ProjectView = 2
      ProjectCreate = 3
      ProjectDelete = 4
      ProcessView = 5
      ProcessEdit = 6
      VariableEdit = 7
      VariableEditUnscoped = 8
      VariableView = 9
      VariableViewUnscoped = 10
      ReleaseCreate = 11
      ReleaseView = 12
      ReleaseEdit = 13
      ReleaseDelete = 14
      DefectReport = 15
      DefectResolve = 16
      DeploymentCreate = 17
      DeploymentDelete = 18
      DeploymentView = 19
      EnvironmentView = 20
      EnvironmentCreate = 21
      EnvironmentEdit = 22
      EnvironmentDelete = 23
      MachineCreate = 24
      MachineEdit = 25
      MachineView = 26
      MachineDelete = 27
      ArtifactView = 28
      ArtifactCreate = 29
      ArtifactEdit = 30
      ArtifactDelete = 31
      FeedView = 32
      EventView = 33
      LibraryVariableSetView = 34
      LibraryVariableSetCreate = 35
      LibraryVariableSetEdit = 36
      LibraryVariableSetDelete = 37
      ProjectGroupView = 38
      ProjectGroupCreate = 39
      ProjectGroupEdit = 40
      ProjectGroupDelete = 41
      TeamCreate = 42
      TeamView = 43
      TeamEdit = 44
      TeamDelete = 45
      UserView = 46
      UserInvite = 47
      UserRoleView = 48
      UserRoleEdit = 49
      TaskView = 50
      TaskViewLog = 51
      TaskCreate = 52
      TaskCancel = 53
      TaskEdit = 54
      InterruptionView = 55
      InterruptionSubmit = 56
      InterruptionViewSubmitResponsible = 57
      BuiltInFeedPush = 58
      BuiltInFeedAdminister = 59
      BuiltInFeedDownload = 60
      ActionTemplateView = 61
      ActionTemplateCreate = 62
      ActionTemplateEdit = 63
      ActionTemplateDelete = 64
      LifecycleCreate = 65
      LifecycleView = 66
      LifecycleEdit = 67
      LifecycleDelete = 68
      AccountView = 69
      AccountEdit = 70
      AccountCreate = 71
      AccountDelete = 72
      TenantCreate = 73
      TenantEdit = 74
      TenantView = 75
      TenantDelete = 76
      TagSetCreate = 77
      TagSetEdit = 78
      TagSetDelete = 79
      MachinePolicyCreate = 80
      MachinePolicyView = 81
      MachinePolicyEdit = 82
      MachinePolicyDelete = 83
      ProxyCreate = 84
      ProxyView = 85
      ProxyEdit = 86
      ProxyDelete = 87
      SubscriptionCreate = 88
      SubscriptionView = 89
      SubscriptionEdit = 90
      SubscriptionDelete = 91
      TriggerCreate = 92
      TriggerView = 93
      TriggerEdit = 94
      TriggerDelete = 95
      CertificateView = 96
      CertificateCreate = 97
      CertificateEdit = 98
      CertificateDelete = 99
      CertificateExportPrivateKey = 100
      UserEdit = 101
      ConfigureServer = 102
      FeedEdit = 103
      WorkerView = 104
      WorkerEdit = 105
      SpaceEdit = 106
      SpaceView = 107
      SpaceDelete = 108
      SpaceCreate = 109
      BuildInformationPush = 110
      BuildInformationAdminister = 111
      RunbookView = 112
      RunbookEdit = 113
      RunbookRunView = 114
      RunbookRunDelete = 115
      RunbookRunCreate = 116
  }
  class PermissionDescription
  {
    .ctor()
    String Description { get; set; }
    String[] SupportedRestrictions { get; set; }
  }
  abstract class PermissionModes
  {
    static System.String Full
    static System.String Restricted
    static System.String Unspecified
  }
  abstract class PermissionScope
  {
    static System.String Environments
    static System.String ProjectGroups
    static System.String Projects
    static System.String Tenants
  }
  abstract class PersistenceSettingsResource
  {
    Octopus.Client.Model.PersistenceSettingsType Type { get; }
  }
  PersistenceSettingsType
  {
      Database = 0
      VersionControlled = 1
  }
  class PhaseDeploymentResource
  {
    .ctor()
    Octopus.Client.Model.DeploymentResource Deployment { get; set; }
    Octopus.Client.Model.TaskResource Task { get; set; }
  }
  PhaseProgress
  {
      Pending = 0
      Current = 1
      Complete = 2
  }
  class PhaseProgressionResource
  {
    .ctor()
    Octopus.Client.Model.ReferenceCollection AutomaticDeploymentTargets { get; set; }
    Boolean Blocked { get; set; }
    List<PhaseDeploymentResource> Deployments { get; set; }
    String Id { get; set; }
    Int32 MinimumEnvironmentsBeforePromotion { get; set; }
    String Name { get; set; }
    Octopus.Client.Model.ReferenceCollection OptionalDeploymentTargets { get; set; }
    Octopus.Client.Model.PhaseProgress Progress { get; set; }
  }
  class PhaseResource
  {
    .ctor()
    Octopus.Client.Model.ReferenceCollection AutomaticDeploymentTargets { get; set; }
    String Id { get; set; }
    Boolean IsOptionalPhase { get; set; }
    Int32 MinimumEnvironmentsBeforePromotion { get; set; }
    String Name { get; set; }
    Octopus.Client.Model.ReferenceCollection OptionalDeploymentTargets { get; set; }
    Octopus.Client.Model.RetentionPeriod ReleaseRetentionPolicy { get; set; }
    Octopus.Client.Model.RetentionPeriod TentacleRetentionPolicy { get; set; }
    Octopus.Client.Model.PhaseResource Clear()
    Octopus.Client.Model.PhaseResource WithAutomaticDeploymentTargets(Octopus.Client.Model.EnvironmentResource[])
    Octopus.Client.Model.PhaseResource WithMinimumEnvironmentsBeforePromotion(Int32)
    Octopus.Client.Model.PhaseResource WithOptionalDeploymentTargets(Octopus.Client.Model.EnvironmentResource[])
    Octopus.Client.Model.PhaseResource WithReleaseRetentionPolicy(Octopus.Client.Model.RetentionPeriod)
    Octopus.Client.Model.PhaseResource WithTentacleRetentionPolicy(Octopus.Client.Model.RetentionPeriod)
  }
  class ProcessReferenceDataItem
    Octopus.Client.Model.ReferenceDataItem
  {
    .ctor(String, String, Octopus.Client.Model.ProcessType)
    Octopus.Client.Model.ProcessType ProcessType { get; set; }
  }
  ProcessType
  {
      Deployment = 0
      Runbook = 1
  }
  class ProgressionResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    Dictionary<String, IEnumerable<ReferenceDataItem>> ChannelEnvironments { get; set; }
    List<ReferenceDataItem> Environments { get; set; }
    List<ReleaseProgressionResource> Releases { get; set; }
  }
  class Project
  {
    .ctor(String)
    Octopus.Client.Extensibility.LinkCollection Links { get; set; }
    String ProjectId { get; }
    String ProjectName { get; set; }
    List<ActionTemplateParameterResource> Templates { get; set; }
    Dictionary<String, Dictionary<String, PropertyValueResource>> Variables { get; set; }
  }
  class ProjectedTeamReferenceDataItem
    Octopus.Client.Model.ReferenceDataItem
  {
    .ctor(String, String, String, Boolean, String[])
    String[] ExternalGroupNames { get; set; }
    Boolean IsDirectlyAssigned { get; set; }
    String SpaceId { get; set; }
  }
  class ProjectGroupResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Extensibility.INamedResource
    Octopus.Client.Extensibility.IHaveSpaceResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    String Description { get; set; }
    Octopus.Client.Model.ReferenceCollection EnvironmentIds { get; set; }
    String Name { get; set; }
    String RetentionPolicyId { get; set; }
    String SpaceId { get; set; }
  }
  class ProjectResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Extensibility.INamedResource
    Octopus.Client.Model.IVariableTemplateContainer
    Octopus.Client.Model.IVariableTemplateContainerEditor<ProjectResource>
    Octopus.Client.Extensibility.IHaveSpaceResource
    Octopus.Client.Model.ResourceWithExtensionSettings
  {
    .ctor()
    .ctor(String, String, String)
    Boolean AutoCreateRelease { get; set; }
    ISet<AutoDeployReleaseOverrideResource> AutoDeployReleaseOverrides { get; }
    String ClonedFromProjectId { get; set; }
    Octopus.Client.Model.GuidedFailureMode DefaultGuidedFailureMode { get; set; }
    Boolean DefaultToSkipIfAlreadyInstalled { get; set; }
    String DeploymentChangesTemplate { get; set; }
    String DeploymentProcessId { get; set; }
    String Description { get; set; }
    Boolean DiscreteChannelRelease { get; set; }
    List<String> IncludedLibraryVariableSetIds { get; set; }
    Boolean IsDisabled { get; set; }
    Boolean IsVersionControlled { get; set; }
    String LifecycleId { get; set; }
    String Name { get; set; }
    Octopus.Client.Model.PersistenceSettingsResource PersistenceSettings { get; set; }
    Octopus.Client.Model.DeploymentConnectivityPolicy ProjectConnectivityPolicy { get; set; }
    String ProjectGroupId { get; set; }
    Octopus.Client.Model.ReleaseCreationStrategyResource ReleaseCreationStrategy { get; set; }
    String ReleaseNotesTemplate { get; set; }
    String Slug { get; set; }
    String SpaceId { get; set; }
    List<ActionTemplateParameterResource> Templates { get; set; }
    Octopus.Client.Model.TenantedDeploymentMode TenantedDeploymentMode { get; set; }
    String VariableSetId { get; set; }
    Octopus.Client.Model.VersioningStrategyResource VersioningStrategy { get; set; }
    void AddAutoDeployReleaseOverride(Octopus.Client.Model.EnvironmentResource, Octopus.Client.Model.ReleaseResource)
    void AddAutoDeployReleaseOverride(Octopus.Client.Model.EnvironmentResource, Octopus.Client.Model.TenantResource, Octopus.Client.Model.ReleaseResource)
    Octopus.Client.Model.ProjectResource AddOrUpdateMultiLineTextTemplate(String, String)
    Octopus.Client.Model.ProjectResource AddOrUpdateMultiLineTextTemplate(String, String, String, String)
    Octopus.Client.Model.ProjectResource AddOrUpdateSelectTemplate(String, String, IDictionary<String, String>)
    Octopus.Client.Model.ProjectResource AddOrUpdateSelectTemplate(String, String, IDictionary<String, String>, String, String)
    Octopus.Client.Model.ProjectResource AddOrUpdateSensitiveTemplate(String, String)
    Octopus.Client.Model.ProjectResource AddOrUpdateSensitiveTemplate(String, String, String, String)
    Octopus.Client.Model.ProjectResource AddOrUpdateSingleLineTextTemplate(String, String)
    Octopus.Client.Model.ProjectResource AddOrUpdateSingleLineTextTemplate(String, String, String, String)
    Octopus.Client.Model.ProjectResource AddOrUpdateVariableTemplate(String, String, IDictionary<String, String>, String, String)
    Octopus.Client.Model.ProjectResource AddOrUpdateVariableTemplate(String, String, IDictionary<String, String>)
    Octopus.Client.Model.ProjectResource Clear()
    Octopus.Client.Model.ProjectResource IncludingLibraryVariableSets(Octopus.Client.Model.LibraryVariableSetResource[])
  }
  class ProjectTriggerResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Extensibility.INamedResource
    Octopus.Client.Extensibility.IHaveSpaceResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    Octopus.Client.Model.Triggers.TriggerActionResource Action { get; set; }
    String Description { get; set; }
    Octopus.Client.Model.Triggers.TriggerFilterResource Filter { get; set; }
    Boolean IsDisabled { get; set; }
    String Name { get; set; }
    String ProjectId { get; set; }
    String SpaceId { get; set; }
  }
  class PropertyValueJsonConverter
    JsonConverter
  {
    .ctor()
    Boolean CanConvert(Type)
    Object ReadJson(JsonReader, Type, Object, JsonSerializer)
    void WriteJson(JsonWriter, Object, JsonSerializer)
  }
  class PropertyValueResource
  {
    .ctor(String)
    .ctor(String, Boolean)
    .ctor(Octopus.Client.Model.SensitiveValue)
    Boolean IsSensitive { get; }
    Octopus.Client.Model.SensitiveValue SensitiveValue { get; }
    String Value { get; }
    class PropertyValueJsonConverter
      JsonConverter
    {
      .ctor()
      Boolean CanConvert(Type)
      Object ReadJson(JsonReader, Type, Object, JsonSerializer)
      void WriteJson(JsonWriter, Object, JsonSerializer)
    }
  }
  class ProxyResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Extensibility.INamedResource
    Octopus.Client.Extensibility.IHaveSpaceResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    String Host { get; set; }
    String Name { get; set; }
    Octopus.Client.Model.SensitiveValue Password { get; set; }
    Int32 Port { get; set; }
    String ProxyType { get; set; }
    String SpaceId { get; set; }
    String Username { get; set; }
  }
  class ReferenceCollection
    ICollection<String>
    IEnumerable<String>
    IEnumerable
    ISerializable
    IDeserializationCallback
    ISet<String>
    IReadOnlyCollection<String>
    HashSet<String>
  {
    .ctor()
    .ctor(String)
    .ctor(IEnumerable<String>)
    Octopus.Client.Model.ReferenceCollection Clone()
    static Octopus.Client.Model.ReferenceCollection One(String)
    void ReplaceAll(IEnumerable<String>)
    String ToString()
  }
  class ReferenceDataItem
  {
    .ctor(String, String)
    String Id { get; set; }
    String Name { get; set; }
  }
  class RegisterCommand
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.UserResource
  {
    .ctor()
    String InvitationCode { get; set; }
  }
  class ReleaseChanges
  {
    .ctor()
    List<CommitDetails> Commits { get; set; }
    List<PackageBuildMetadata> PackageBuildMetadata { get; set; }
    String ReleaseNotes { get; set; }
    String Version { get; set; }
    List<WorkItemLink> WorkItems { get; set; }
  }
  class ReleaseCreationStrategyResource
  {
    .ctor()
    String ChannelId { get; set; }
    Octopus.Client.Model.DeploymentActionPackageResource ReleaseCreationPackage { get; set; }
  }
  class ReleaseProgressionResource
  {
    .ctor()
    Octopus.Client.Model.ChannelResource Channel { get; set; }
    Dictionary<String, IList<DashboardItemResource>> Deployments { get; set; }
    Boolean HasUnresolvedDefect { get; set; }
    Octopus.Client.Model.ReferenceCollection NextDeployments { get; set; }
    Octopus.Client.Model.ReleaseResource Release { get; set; }
    Octopus.Client.Model.RetentionPeriod ReleaseRetentionPeriod { get; set; }
    Octopus.Client.Model.RetentionPeriod TentacleRetentionPeriod { get; set; }
  }
  class ReleaseResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.ISnapshotResource
    Octopus.Client.Extensibility.IHaveSpaceResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    .ctor(String, String, String)
    .ctor(String, String)
    .ctor(String)
    DateTimeOffset Assembled { get; set; }
    List<ReleasePackageVersionBuildInformationResource> BuildInformation { get; set; }
    String ChannelId { get; set; }
    Boolean IgnoreChannelRules { get; set; }
    List<String> LibraryVariableSetSnapshotIds { get; set; }
    String ProjectDeploymentProcessSnapshotId { get; set; }
    String ProjectId { get; set; }
    String ProjectVariableSetSnapshotId { get; set; }
    String ReleaseNotes { get; set; }
    List<SelectedPackage> SelectedPackages { get; set; }
    String SpaceId { get; set; }
    String Version { get; set; }
    Octopus.Client.Model.VersionControl.VersionControlReferenceResource VersionControlReference { get; set; }
  }
  class ReleaseSummaryResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    .ctor(String, String)
    String Version { get; set; }
  }
  class ReleaseTemplateBaseResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    IList<ReleaseTemplatePackage> Packages { get; set; }
  }
  class ReleaseTemplatePackage
  {
    .ctor()
    String ActionName { get; set; }
    String FeedId { get; set; }
    String FeedName { get; set; }
    Boolean IsResolvable { get; set; }
    String NuGetFeedId { get; set; }
    String NuGetFeedName { get; set; }
    String NuGetPackageId { get; set; }
    String PackageId { get; set; }
    String PackageReferenceName { get; set; }
    String StepName { get; set; }
    String VersionSelectedLastRelease { get; set; }
  }
  class ReleaseTemplateResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.ReleaseTemplateBaseResource
  {
    .ctor()
    String DeploymentProcessId { get; set; }
    String LastReleaseVersion { get; set; }
    String NextVersionIncrement { get; set; }
    String VersioningPackageReferenceName { get; set; }
    String VersioningPackageStepName { get; set; }
  }
  class ReportDeploymentCountOverTimeResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    String ProjectId { get; set; }
    Octopus.Client.Model.NumericReportData ReportData { get; set; }
  }
  abstract class Resource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
  {
    String Id { get; set; }
    String LastModifiedBy { get; set; }
    Nullable<DateTimeOffset> LastModifiedOn { get; set; }
    Octopus.Client.Extensibility.LinkCollection Links { get; set; }
    Boolean HasLink(String)
    String Link(String)
  }
  class ResourceCollection`1
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor(IEnumerable<TResource>, Octopus.Client.Extensibility.LinkCollection)
    Boolean IsStale { get; set; }
    IList<TResource> Items { get; set; }
    Int32 ItemsPerPage { get; set; }
    String ItemType { get; }
    Int32 TotalResults { get; set; }
  }
  abstract class ResourceWithExtensionSettings
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    List<ExtensionSettingsValues> ExtensionSettings { get; set; }
    Octopus.Client.Model.TSettings GetExtensionSettings(String)
  }
  abstract class Retention
  {
    static System.String Name
  }
  class RetentionDefaultConfigurationResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    Nullable<Int32> RetentionDays { get; set; }
  }
  class RetentionPeriod
    IEquatable<RetentionPeriod>
  {
    .ctor(Int32, Octopus.Client.Model.RetentionUnit)
    Int32 QuantityToKeep { get; }
    Boolean ShouldKeepForever { get; }
    Octopus.Client.Model.RetentionUnit Unit { get; }
    Boolean Equals(Octopus.Client.Model.RetentionPeriod)
    Boolean Equals(Object)
    Int32 GetHashCode()
    static Octopus.Client.Model.RetentionPeriod KeepForever()
    String ToString()
  }
  class RetentionPolicyResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Extensibility.INamedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    Octopus.Client.Model.RetentionPeriod DeployedReleases { get; set; }
    Boolean IsReadOnly { get; set; }
    String Name { get; set; }
    Octopus.Client.Model.RetentionPeriod TentacleDeployments { get; set; }
    Octopus.Client.Model.RetentionPeriod UndeployedReleases { get; set; }
  }
  RetentionUnit
  {
      Days = 0
      Items = 1
  }
  class RootResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    String ApiVersion { get; set; }
    String Application { get; set; }
    Boolean HasLongTermSupport { get; set; }
    Guid InstallationId { get; set; }
    Boolean IsEarlyAccessProgram { get; set; }
    String Version { get; set; }
  }
  RunbookEnvironmentScope
  {
      All = 0
      Specified = 1
      FromProjectLifecycles = 2
  }
  class RunbookProcessResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.IProcessResource
    Octopus.Client.Extensibility.IHaveSpaceResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    String LastSnapshotId { get; set; }
    String ProjectId { get; set; }
    String RunbookId { get; set; }
    String SpaceId { get; set; }
    IList<DeploymentStepResource> Steps { get; }
    Int32 Version { get; set; }
    Octopus.Client.Model.DeploymentStepResource AddOrUpdateStep(String)
    Octopus.Client.Model.IProcessResource ClearSteps()
    Octopus.Client.Model.DeploymentStepResource FindStep(String)
    Octopus.Client.Model.IProcessResource RemoveStep(String)
  }
  class RunbookResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Extensibility.INamedResource
    Octopus.Client.Extensibility.IHaveSpaceResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    Octopus.Client.Model.DeploymentConnectivityPolicy ConnectivityPolicy { get; set; }
    Octopus.Client.Model.GuidedFailureMode DefaultGuidedFailureMode { get; set; }
    String Description { get; set; }
    Octopus.Client.Model.ReferenceCollection Environments { get; }
    Octopus.Client.Model.RunbookEnvironmentScope EnvironmentScope { get; set; }
    Octopus.Client.Model.TenantedDeploymentMode MultiTenancyMode { get; set; }
    String Name { get; set; }
    String ProjectId { get; set; }
    String PublishedRunbookSnapshotId { get; set; }
    String RunbookProcessId { get; set; }
    Octopus.Client.Model.RunbookRetentionPeriod RunRetentionPolicy { get; set; }
    String SpaceId { get; set; }
  }
  class RunbookRetentionPeriod
  {
    .ctor()
    Int32 QuantityToKeep { get; set; }
    Boolean ShouldKeepForever { get; set; }
  }
  class RunbookRunParameters
  {
    .ctor()
    String EnvironmentId { get; set; }
    String[] EnvironmentIds { get; set; }
    String[] ExcludedMachineIds { get; set; }
    Boolean ForcePackageDownload { get; set; }
    Dictionary<String, String> FormValues { get; set; }
    String ProjectId { get; set; }
    Nullable<DateTimeOffset> QueueTime { get; set; }
    Nullable<DateTimeOffset> QueueTimeExpiry { get; set; }
    String RunbookId { get; set; }
    String RunbookSnapshotNameOrId { get; set; }
    String[] SkipActions { get; set; }
    String[] SpecificMachineIds { get; set; }
    String TenantId { get; set; }
    String[] TenantIds { get; set; }
    String[] TenantTagNames { get; set; }
    Boolean UseDefaultSnapshot { get; set; }
    Nullable<Boolean> UseGuidedFailure { get; set; }
    static Octopus.Client.Model.RunbookRunParameters MapFrom(Octopus.Client.Model.RunbookRunResource)
  }
  class RunbookRunPreviewResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.DeploymentPreviewBaseResource
  {
    .ctor()
  }
  class RunbookRunResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.IExecutionResource
    Octopus.Client.Extensibility.IHaveSpaceResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    String Comments { get; set; }
    DateTimeOffset Created { get; set; }
    String DeployedBy { get; set; }
    String DeployedById { get; set; }
    Octopus.Client.Model.ReferenceCollection DeployedToMachineIds { get; set; }
    String EnvironmentId { get; set; }
    Octopus.Client.Model.ReferenceCollection ExcludedMachineIds { get; set; }
    Boolean FailureEncountered { get; set; }
    Boolean ForcePackageDownload { get; set; }
    Dictionary<String, String> FormValues { get; set; }
    String FrozenRunbookProcessId { get; set; }
    String ManifestVariableSetId { get; set; }
    String Name { get; set; }
    String ProjectId { get; set; }
    Nullable<DateTimeOffset> QueueTime { get; set; }
    Nullable<DateTimeOffset> QueueTimeExpiry { get; set; }
    String RunbookId { get; set; }
    String RunbookSnapshotId { get; set; }
    Octopus.Client.Model.ReferenceCollection SkipActions { get; set; }
    String SpaceId { get; set; }
    Octopus.Client.Model.ReferenceCollection SpecificMachineIds { get; set; }
    String TaskId { get; set; }
    String TenantId { get; set; }
    Octopus.Client.Model.RetentionPeriod TentacleRetentionPeriod { get; set; }
    Boolean UseGuidedFailure { get; set; }
  }
  class RunbookRunTemplateResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.DeploymentTemplateBaseResource
  {
    .ctor()
    Boolean IsRunbookProcessModified { get; set; }
  }
  class RunbookSnapshotResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.ISnapshotResource
    Octopus.Client.Extensibility.IHaveSpaceResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    .ctor(String)
    DateTimeOffset Assembled { get; set; }
    String FrozenProjectVariableSetId { get; set; }
    String FrozenRunbookProcessId { get; set; }
    List<String> LibraryVariableSetSnapshotIds { get; set; }
    String Name { get; set; }
    String Notes { get; set; }
    String ProjectId { get; set; }
    String ProjectVariableSetSnapshotId { get; set; }
    String RunbookId { get; set; }
    List<SelectedPackage> SelectedPackages { get; set; }
    String SpaceId { get; set; }
  }
  class RunbookSnapshotTemplateResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.ReleaseTemplateBaseResource
  {
    .ctor()
    String NextNameIncrement { get; set; }
    String RunbookProcessId { get; set; }
  }
  class ScheduledTaskDetailsResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    Octopus.Client.Model.ActivityElement ActivityLog { get; set; }
  }
  class ScheduledTaskStatusResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Extensibility.INamedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    Boolean IsEnabled { get; set; }
    String Name { get; set; }
  }
  class SchedulerStatusResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    Boolean IsRunning { get; set; }
    Octopus.Client.Model.ScheduledTaskStatusResource[] TaskStatus { get; set; }
  }
  class ScopedUserRoleResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Extensibility.IHaveSpaceResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    Octopus.Client.Model.ReferenceCollection EnvironmentIds { get; set; }
    Octopus.Client.Model.ReferenceCollection ProjectGroupIds { get; set; }
    Octopus.Client.Model.ReferenceCollection ProjectIds { get; set; }
    String SpaceId { get; set; }
    String TeamId { get; set; }
    Octopus.Client.Model.ReferenceCollection TenantIds { get; set; }
    String UserRoleId { get; set; }
  }
  ScopeField
  {
      Project = 0
      Environment = 1
      Machine = 2
      Role = 3
      TargetRole = 4
      Action = 5
      User = 6
      Trigger = 7
      ParentDeployment = 8
      Private = 9
      Channel = 10
      TenantTag = 11
      Tenant = 12
      ProcessOwner = 13
  }
  class ScopeSpecification
    IDictionary<ScopeField, ScopeValue>
    ICollection<KeyValuePair<ScopeField, ScopeValue>>
    IEnumerable<KeyValuePair<ScopeField, ScopeValue>>
    IEnumerable
    IDictionary
    ICollection
    IReadOnlyDictionary<ScopeField, ScopeValue>
    IReadOnlyCollection<KeyValuePair<ScopeField, ScopeValue>>
    ISerializable
    IDeserializationCallback
    IEquatable<ScopeSpecification>
    Dictionary<ScopeField, ScopeValue>
  {
    .ctor()
    Octopus.Client.Model.ScopeSpecification Clone()
    Boolean Equals(Octopus.Client.Model.ScopeSpecification)
    Int32 GetHashCode()
    Int32 Rank()
    String ToString()
  }
  class ScopeValue
    ICollection<String>
    IEnumerable<String>
    IEnumerable
    ISerializable
    IDeserializationCallback
    ISet<String>
    IReadOnlyCollection<String>
    Octopus.Client.Model.ReferenceCollection
  {
    .ctor()
    .ctor(String)
    .ctor(String, String[])
    .ctor(IEnumerable<String>)
  }
  class ScriptConsoleSupportedAttribute
    _Attribute
    Attribute
  {
    .ctor()
  }
  ScriptSyntax
  {
      PowerShell = 0
      Bash = 1
      CSharp = 2
      FSharp = 3
      Python = 4
  }
  abstract class ScriptSyntaxExtension
  {
    static String GetExtension(Octopus.Client.Model.ScriptSyntax)
  }
  class ScriptSyntaxMeta
  {
    static Octopus.Client.Model.ScriptSyntaxMeta[] All
    static Octopus.Client.Model.ScriptSyntaxMeta Bash
    static Octopus.Client.Model.ScriptSyntaxMeta CSharp
    System.String Extension
    static Octopus.Client.Model.ScriptSyntaxMeta FSharp
    System.String Name
    static Octopus.Client.Model.ScriptSyntaxMeta PowerShell
    static Octopus.Client.Model.ScriptSyntaxMeta Python
    Octopus.Client.Model.ScriptSyntax ScriptSyntax
    static Octopus.Client.Model.ScriptSyntaxMeta FromExtension(String)
    static Octopus.Client.Model.ScriptSyntaxMeta FromName(String)
  }
  class SelectedPackage
  {
    .ctor()
    .ctor(String, String)
    .ctor(String, String, String)
    String ActionName { get; set; }
    String PackageReferenceName { get; set; }
    String StepName { get; set; }
    String Version { get; set; }
  }
  class SemanticVersion
    IFormattable
    IComparable
    IComparable<StrictSemanticVersion>
    IEquatable<StrictSemanticVersion>
    Octopus.Client.Model.Versioning.StrictSemanticVersion
  {
    .ctor(String)
    .ctor(Octopus.Client.Model.SemanticVersion)
    .ctor(Version, String, String)
    .ctor(Int32, Int32, Int32)
    .ctor(Int32, Int32, Int32, String)
    .ctor(Int32, Int32, Int32, String, String)
    .ctor(Int32, Int32, Int32, IEnumerable<String>, String)
    .ctor(Int32, Int32, Int32, Int32)
    .ctor(Int32, Int32, Int32, Int32, String, String)
    .ctor(Int32, Int32, Int32, Int32, IEnumerable<String>, String)
    .ctor(Version, IEnumerable<String>, String, String, Boolean)
    Boolean IsLegacyVersion { get; }
    Boolean IsSemVer2 { get; }
    String OriginalString { get; }
    Int32 Revision { get; }
    Version Version { get; }
    static String IncrementRelease(String)
    static Octopus.Client.Model.SemanticVersion Parse(String, Boolean)
    String ToString()
    static Boolean TryParse(String, Octopus.Client.Model.SemanticVersion&, Boolean)
    static Boolean TryParseStrict(String, Octopus.Client.Model.SemanticVersion&)
  }
  class SemanticVersionComparer
    IComparer<String>
  {
    .ctor()
    Int32 Compare(String, String)
  }
  abstract class SemanticVersionMask
  {
    static Octopus.Client.Model.SemanticVersion ApplyMask(String, Octopus.Client.Model.SemanticVersion)
    static Octopus.Client.Model.SemanticVersion GetLatestMaskedVersion(String, List<SemanticVersion>)
    static Boolean IsMask(String)
  }
  class SensitiveValue
    IEquatable<SensitiveValue>
  {
    .ctor()
    Boolean HasValue { get; set; }
    String Hint { get; set; }
    String NewValue { get; set; }
    Boolean Equals(Octopus.Client.Model.SensitiveValue)
  }
  class ServerActivitiesResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    Octopus.Client.Model.ServerActivityResource[] OrchestratedActivities { get; set; }
    Octopus.Client.Model.ServerActivityResource[] OrphanedActivities { get; set; }
    Octopus.Client.Model.ServerActivityResource[] SystemServices { get; set; }
  }
  class ServerActivityResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    String ActorName { get; set; }
    String CurrentlyReceiving { get; set; }
    Nullable<DateTime> CurrentlyReceivingSinceUtc { get; set; }
    String CurrentOperation { get; set; }
    String Description { get; set; }
    Int32 InputQueueCount { get; set; }
    String Location { get; set; }
    List<ServerActivityResource> SupervisedActivities { get; set; }
  }
  class ServerConfigurationResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    String ServerUri { get; set; }
  }
  class ServerStatusHealthResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    String Description { get; set; }
    Boolean IsCompliantWithLicense { get; set; }
    Boolean IsEntireClusterDrainingTasks { get; set; }
    Boolean IsEntireClusterReadOnly { get; set; }
    Boolean IsOperatingNormally { get; set; }
  }
  class ServerStatusResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    Boolean IsDatabaseEncrypted { get; set; }
    Boolean IsInMaintenanceMode { get; set; }
    Boolean IsMajorMinorUpgrade { get; set; }
    Boolean IsUpgradeAvailable { get; set; }
    String MaintenanceExpires { get; set; }
    String MaximumAvailableVersion { get; set; }
    String MaximumAvailableVersionCoveredByLicense { get; set; }
  }
  SkipMachineBehavior
  {
      None = 0
      SkipUnavailableMachines = 1
  }
  class SmtpConfigurationResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    Boolean EnableSsl { get; set; }
    String NewSmtpPassword { get; set; }
    String SendEmailFrom { get; set; }
    String SmtpHost { get; set; }
    String SmtpLogin { get; set; }
    Octopus.Client.Model.SensitiveValue SmtpPassword { get; set; }
    Nullable<Int32> SmtpPort { get; set; }
    Nullable<Int32> Timeout { get; set; }
  }
  class SpaceResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Extensibility.INamedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    String Description { get; set; }
    Boolean IsDefault { get; set; }
    String Name { get; set; }
    Octopus.Client.Model.ReferenceCollection SpaceManagersTeamMembers { get; set; }
    Octopus.Client.Model.ReferenceCollection SpaceManagersTeams { get; set; }
    Boolean TaskQueueStopped { get; set; }
  }
  class SpaceRootResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
  }
  class SpaceSearchResult
  {
    .ctor()
    String Id { get; set; }
    String Name { get; set; }
    String Type { get; set; }
  }
  class SquidAttribute
    _Attribute
    Attribute
  {
    .ctor()
  }
  class StandardColor
  {
    static System.String DarkBlue
    static System.String DarkCyan
    static System.String DarkGreen
    static System.String DarkGrey
    static System.String DarkPurple
    static System.String DarkRed
    static System.String DarkYellow
    static System.String LightBlue
    static System.String LightCyan
    static System.String LightGreen
    static System.String LightGrey
    static System.String LightPurple
    static System.String LightRed
    static System.String LightYellow
    .ctor()
  }
  class StaticWorkerPoolResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Extensibility.INamedResource
    Octopus.Client.Extensibility.IHaveSpaceResource
    Octopus.Client.Model.WorkerPoolResource
  {
    .ctor()
  }
  class SubscriptionResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Extensibility.INamedResource
    Octopus.Client.Extensibility.IHaveSpaceResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    Octopus.Client.Model.EventNotificationSubscription EventNotificationSubscription { get; set; }
    Boolean IsDisabled { get; set; }
    String Name { get; set; }
    String SpaceId { get; set; }
    Octopus.Client.Model.SubscriptionType Type { get; set; }
  }
  SubscriptionType
  {
      Event = 0
  }
  class SummaryResource
  {
    .ctor()
    Dictionary<String, Int32> MachineEndpointSummaries { get; set; }
    Dictionary<String, Int32> MachineHealthStatusSummaries { get; set; }
    String[] MachineIdsForCalamariUpgrade { get; set; }
    String[] MachineIdsForTentacleUpgrade { get; set; }
    Boolean TentacleUpgradesRequired { get; set; }
    Int32 TotalDisabledMachines { get; set; }
    Int32 TotalMachines { get; set; }
  }
  class SummaryResourcesCombined
  {
    .ctor()
    Dictionary<String, Int32> MachineEndpointSummaries { get; set; }
    Dictionary<String, Int32> MachineHealthStatusSummaries { get; set; }
    String[] MachineIdsForCalamariUpgrade { get; set; }
    String[] MachineIdsForTentacleUpgrade { get; set; }
    Boolean TentacleUpgradesRequired { get; set; }
    Int32 TotalDisabledMachines { get; set; }
    Int32 TotalMachines { get; set; }
  }
  class SupportsRestrictionAttribute
    _Attribute
    Attribute
  {
    .ctor(String[])
    Boolean ExplicitTenantScopeRequired { get; set; }
    IList<String> Scopes { get; }
  }
  abstract class SyncCommunityActionTemplates
  {
    static System.String Name
  }
  class SystemInfoResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    String ClrVersion { get; set; }
    String OSVersion { get; set; }
    Int32 ThreadCount { get; set; }
    TimeSpan Uptime { get; set; }
    String Version { get; set; }
    Int64 WorkingSetBytes { get; set; }
  }
  abstract class SystemIntegrityCheck
  {
    static System.String Name
  }
  class TagResource
    Octopus.Client.Extensibility.INamedResource
  {
    .ctor()
    String CanonicalTagName { get; set; }
    String Color { get; set; }
    String Description { get; set; }
    String Id { get; set; }
    String Name { get; set; }
    Int32 SortOrder { get; set; }
    class StandardColor
    {
      static System.String DarkBlue
      static System.String DarkCyan
      static System.String DarkGreen
      static System.String DarkGrey
      static System.String DarkPurple
      static System.String DarkRed
      static System.String DarkYellow
      static System.String LightBlue
      static System.String LightCyan
      static System.String LightGreen
      static System.String LightGrey
      static System.String LightPurple
      static System.String LightRed
      static System.String LightYellow
      .ctor()
    }
  }
  class TagSetResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Extensibility.INamedResource
    Octopus.Client.Extensibility.IHaveSpaceResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    String Description { get; set; }
    String Name { get; set; }
    Int32 SortOrder { get; set; }
    String SpaceId { get; set; }
    IList<TagResource> Tags { get; set; }
    Octopus.Client.Model.TagSetResource AddOrUpdateTag(String, String, String)
    Octopus.Client.Model.TagSetResource RemoveTag(String)
  }
  TargetType
  {
      Machines = 0
      Environments = 1
      Workers = 2
      WorkerPools = 3
      OctopusServer = 4
  }
  class TaskDetailsResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    Octopus.Client.Model.ActivityElement ActivityLog { get; set; }
    IList<ActivityElement> ActivityLogs { get; set; }
    Int64 PhysicalLogSize { get; set; }
    Octopus.Client.Model.TaskProgress Progress { get; set; }
    Octopus.Client.Model.TaskResource Task { get; set; }
  }
  class TaskProgress
  {
    .ctor()
    String EstimatedTimeRemaining { get; set; }
    Int32 ProgressPercentage { get; set; }
  }
  class TaskResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Extensibility.IHaveSpaceResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    Dictionary<String, Object> Arguments { get; set; }
    Boolean CanRerun { get; set; }
    String Completed { get; set; }
    Nullable<DateTimeOffset> CompletedTime { get; set; }
    String Description { get; set; }
    String Duration { get; set; }
    String ErrorMessage { get; set; }
    Boolean FinishedSuccessfully { get; }
    Boolean HasBeenPickedUpByProcessor { get; set; }
    Boolean HasPendingInterruptions { get; set; }
    Boolean HasWarningsOrErrors { get; set; }
    Boolean IsCompleted { get; }
    Nullable<DateTimeOffset> LastUpdatedTime { get; set; }
    String Name { get; set; }
    DateTimeOffset QueueTime { get; set; }
    Nullable<DateTimeOffset> QueueTimeExpiry { get; set; }
    String ServerNode { get; set; }
    String SpaceId { get; set; }
    Nullable<DateTimeOffset> StartTime { get; set; }
    Octopus.Client.Model.TaskState State { get; set; }
  }
  class TaskResourceCollection
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.ResourceCollection<TaskResource>
  {
    .ctor(IEnumerable<TaskResource>, Octopus.Client.Extensibility.LinkCollection)
    Dictionary<String, Int32> TotalCounts { get; set; }
  }
  abstract class TaskRestrictedTo
  {
    static System.String DeploymentTargets
    static System.String Policies
    static System.String Unrestricted
    static System.String Workers
  }
  TaskState
  {
      Queued = 1
      Executing = 2
      Failed = 3
      Canceled = 4
      TimedOut = 5
      Success = 6
      Cancelling = 8
  }
  class TaskTypeResource
    Octopus.Client.Extensibility.IResource
  {
    .ctor()
    String Id { get; set; }
    Octopus.Client.Extensibility.LinkCollection Links { get; set; }
    String Name { get; set; }
  }
  class TeamNameResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Extensibility.INamedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    String Name { get; set; }
  }
  class TeamResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Extensibility.INamedResource
    Octopus.Client.Extensibility.IHaveSpaceResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    Boolean CanBeDeleted { get; set; }
    Boolean CanBeRenamed { get; set; }
    Boolean CanChangeMembers { get; set; }
    Boolean CanChangeRoles { get; set; }
    String Description { get; set; }
    Octopus.Client.Model.NamedReferenceItemCollection ExternalSecurityGroups { get; set; }
    Octopus.Client.Model.ReferenceCollection MemberUserIds { get; set; }
    String Name { get; set; }
    String SpaceId { get; set; }
  }
  TenantedDeploymentMode
  {
      Untenanted = 0
      TenantedOrUntenanted = 1
      Tenanted = 2
  }
  class TenantProjectEnvironmentMappingResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    Octopus.Client.Model.ReferenceCollection Environments { get; set; }
    String ProjectId { get; set; }
  }
  class TenantResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Extensibility.INamedResource
    Octopus.Client.Extensibility.IHaveSpaceResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    String ClonedFromTenantId { get; set; }
    String Description { get; set; }
    String Name { get; set; }
    IDictionary<String, ReferenceCollection> ProjectEnvironments { get; set; }
    String SpaceId { get; set; }
    Octopus.Client.Model.ReferenceCollection TenantTags { get; set; }
    Octopus.Client.Model.TenantResource ClearProjects()
    Octopus.Client.Model.TenantResource ClearTags()
    Octopus.Client.Model.TenantResource ConnectToProjectAndEnvironments(Octopus.Client.Model.ProjectResource, Octopus.Client.Model.EnvironmentResource[])
    Octopus.Client.Model.TenantResource WithTag(Octopus.Client.Model.TagResource)
  }
  class TenantsMissingVariablesResource
  {
    .ctor(String)
    Octopus.Client.Extensibility.LinkCollection Links { get; }
    IEnumerable<MissingVariableResource> MissingVariables { get; set; }
    String TenantId { get; }
  }
  class TenantVariableResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Extensibility.IHaveSpaceResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    Dictionary<String, Library> LibraryVariables { get; set; }
    Dictionary<String, Project> ProjectVariables { get; set; }
    String SpaceId { get; set; }
    String TenantId { get; set; }
    String TenantName { get; set; }
    class Library
    {
      .ctor(String)
      String LibraryVariableSetId { get; }
      String LibraryVariableSetName { get; set; }
      Octopus.Client.Extensibility.LinkCollection Links { get; set; }
      List<ActionTemplateParameterResource> Templates { get; set; }
      Dictionary<String, PropertyValueResource> Variables { get; set; }
    }
    class Project
    {
      .ctor(String)
      Octopus.Client.Extensibility.LinkCollection Links { get; set; }
      String ProjectId { get; }
      String ProjectName { get; set; }
      List<ActionTemplateParameterResource> Templates { get; set; }
      Dictionary<String, Dictionary<String, PropertyValueResource>> Variables { get; set; }
    }
  }
  TentacleUpdateBehavior
  {
      NeverUpdate = 0
      Update = 1
  }
  class TentacleUpgradeSupportedAttribute
    _Attribute
    Attribute
  {
    .ctor()
  }
  abstract class TestAzureAccount
  {
    static System.String Name
    abstract class Arguments
    {
      static System.String AccountId
    }
  }
  abstract class TestEmail
  {
    static System.String Name
    abstract class Arguments
    {
      static System.String EmailAddress
    }
  }
  class TrimAttribute
    _Attribute
    Attribute
  {
    .ctor()
  }
  abstract class UpdateCalamari
  {
    static System.String Name
    abstract class Arguments
    {
      static System.String MachineIds
    }
  }
  abstract class Upgrade
  {
    static System.String Name
    static String[] CanBeRestrictedTo()
    abstract class Arguments
    {
      static System.String EnvironmentId
      static System.String MachineIds
      static System.String RestrictedTo
      static System.String WorkerpoolId
    }
  }
  class UpgradeConfigurationResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    Boolean AllowChecking { get; set; }
    Boolean IncludeStatistics { get; set; }
    Octopus.Client.Model.UpgradeNotificationMode NotificationMode { get; set; }
  }
  UpgradeNotificationMode
  {
      AlwaysShow = 0
      ShowOnlyMajorMinor = 1
      NeverShow = 2
  }
  class UsernamePasswordVersionControlCredentialsResource
    Octopus.Client.Model.VersionControlCredentialsResource
  {
    .ctor()
    Octopus.Client.Model.SensitiveValue Password { get; set; }
    Octopus.Client.Model.VersionControlCredentialsType Type { get; }
    String Username { get; set; }
  }
  class UserPermissionRestriction
  {
    .ctor()
    Octopus.Client.Model.ReferenceCollection RestrictedToEnvironmentIds { get; set; }
    Octopus.Client.Model.ReferenceCollection RestrictedToProjectGroupIds { get; set; }
    Octopus.Client.Model.ReferenceCollection RestrictedToProjectIds { get; set; }
    Octopus.Client.Model.ReferenceCollection RestrictedToTenantIds { get; set; }
    String SpaceId { get; set; }
    static IEqualityComparer<UserPermissionRestriction> UserPermissionRestrictionComparer { get; }
    String ToString()
    class Comparer
      IEqualityComparer<UserPermissionRestriction>
    {
      .ctor()
      Boolean Equals(Octopus.Client.Model.UserPermissionRestriction, Octopus.Client.Model.UserPermissionRestriction)
      Int32 GetHashCode(Octopus.Client.Model.UserPermissionRestriction)
    }
  }
  class UserPermissionSetResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    Boolean IsPermissionsComplete { get; set; }
    Boolean IsTeamsComplete { get; set; }
    Dictionary<Permission, List<UserPermissionRestriction>> SpacePermissions { get; set; }
    List<Permission> SystemPermissions { get; set; }
    List<ProjectedTeamReferenceDataItem> Teams { get; set; }
  }
  class UserResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    Boolean CanPasswordBeEdited { get; set; }
    String DisplayName { get; set; }
    String EmailAddress { get; set; }
    Octopus.Client.Model.IdentityResource[] Identities { get; set; }
    Boolean IsActive { get; set; }
    Boolean IsRequestor { get; set; }
    Boolean IsService { get; set; }
    String Password { get; set; }
    String Username { get; set; }
  }
  class UserRoleResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Extensibility.INamedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    Boolean CanBeDeleted { get; set; }
    String Description { get; set; }
    List<Permission> GrantedSpacePermissions { get; set; }
    List<Permission> GrantedSystemPermissions { get; set; }
    String Name { get; set; }
    List<String> SpacePermissionDescriptions { get; set; }
    List<String> SupportedRestrictions { get; set; }
    List<String> SystemPermissionDescriptions { get; set; }
  }
  class VariablePromptOptions
  {
    .ctor()
    String Description { get; set; }
    IDictionary<String, String> DisplaySettings { get; set; }
    String Label { get; set; }
    Boolean Required { get; set; }
    Octopus.Client.Model.VariablePromptOptions Clone()
  }
  class VariableResource
  {
    .ctor()
    String Description { get; set; }
    String Id { get; set; }
    Boolean IsEditable { get; set; }
    Boolean IsSensitive { get; set; }
    String Name { get; set; }
    Octopus.Client.Model.VariablePromptOptions Prompt { get; set; }
    Octopus.Client.Model.ScopeSpecification Scope { get; set; }
    Octopus.Client.Model.VariableType Type { get; set; }
    String Value { get; set; }
  }
  class VariableScopeValues
    Octopus.Client.Model.IVariableScopeValues
  {
    .ctor()
    List<ReferenceDataItem> Actions { get; set; }
    List<ReferenceDataItem> Channels { get; set; }
    List<ReferenceDataItem> Environments { get; set; }
    List<ReferenceDataItem> Machines { get; set; }
    List<ProcessReferenceDataItem> Processes { get; set; }
    List<ReferenceDataItem> Roles { get; set; }
    List<ReferenceDataItem> TenantTags { get; set; }
  }
  VariableSetContentType
  {
      Variables = 0
      ScriptModule = 1
  }
  class VariableSetResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Extensibility.IHaveSpaceResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    String OwnerId { get; set; }
    Octopus.Client.Model.VariableScopeValues ScopeValues { get; set; }
    String SpaceId { get; set; }
    IList<VariableResource> Variables { get; set; }
    Int32 Version { get; set; }
    Octopus.Client.Model.VariableSetResource AddOrUpdateVariableValue(String, String)
    Octopus.Client.Model.VariableSetResource AddOrUpdateVariableValue(String, String, String)
    Octopus.Client.Model.VariableSetResource AddOrUpdateVariableValue(String, String, Octopus.Client.Model.ScopeSpecification)
    Octopus.Client.Model.VariableSetResource AddOrUpdateVariableValue(String, String, Octopus.Client.Model.ScopeSpecification, Boolean)
    Octopus.Client.Model.VariableSetResource AddOrUpdateVariableValue(String, String, Octopus.Client.Model.ScopeSpecification, Boolean, String)
  }
  class VariableTemplateContainerEditor`1
    Octopus.Client.Model.IVariableTemplateContainerEditor<TContainer>
  {
    .ctor(Octopus.Client.Model.TContainer)
    Octopus.Client.Model.TContainer AddOrUpdateMultiLineTextTemplate(String, String)
    Octopus.Client.Model.TContainer AddOrUpdateMultiLineTextTemplate(String, String, String, String)
    Octopus.Client.Model.TContainer AddOrUpdateSelectTemplate(String, String, IDictionary<String, String>)
    Octopus.Client.Model.TContainer AddOrUpdateSelectTemplate(String, String, IDictionary<String, String>, String, String)
    Octopus.Client.Model.TContainer AddOrUpdateSensitiveTemplate(String, String)
    Octopus.Client.Model.TContainer AddOrUpdateSensitiveTemplate(String, String, String, String)
    Octopus.Client.Model.TContainer AddOrUpdateSingleLineTextTemplate(String, String)
    Octopus.Client.Model.TContainer AddOrUpdateSingleLineTextTemplate(String, String, String, String)
    Octopus.Client.Model.TContainer AddOrUpdateVariableTemplate(String, String, IDictionary<String, String>)
    Octopus.Client.Model.TContainer AddOrUpdateVariableTemplate(String, String, IDictionary<String, String>, String, String)
    Octopus.Client.Model.TContainer Clear()
  }
  VariableType
  {
      String = 0
      Sensitive = 1
      Certificate = 2
      AmazonWebServicesAccount = 3
      AzureAccount = 4
      WorkerPool = 5
  }
  class VcsRunbookResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Extensibility.INamedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    Octopus.Client.Model.DeploymentConnectivityPolicy ConnectivityPolicy { get; set; }
    Octopus.Client.Model.GuidedFailureMode DefaultGuidedFailureMode { get; set; }
    String Description { get; set; }
    Octopus.Client.Model.ReferenceCollection Environments { get; }
    Octopus.Client.Model.RunbookEnvironmentScope EnvironmentScope { get; set; }
    Octopus.Client.Model.TenantedDeploymentMode MultiTenancyMode { get; set; }
    String Name { get; set; }
  }
  class VersionControlBranchResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor(String)
    String Name { get; }
  }
  abstract class VersionControlCredentialsResource
  {
    Octopus.Client.Model.VersionControlCredentialsType Type { get; }
  }
  VersionControlCredentialsType
  {
      Anonymous = 0
      UsernamePassword = 1
  }
  class VersionControlSettingsResource
    Octopus.Client.Model.PersistenceSettingsResource
  {
    .ctor()
    String BasePath { get; set; }
    Octopus.Client.Model.VersionControlCredentialsResource Credentials { get; set; }
    String DefaultBranch { get; set; }
    Octopus.Client.Model.PersistenceSettingsType Type { get; }
    String Url { get; set; }
  }
  class VersioningStrategyResource
  {
    .ctor()
    Octopus.Client.Model.DeploymentActionPackageResource DonorPackage { get; set; }
    String Template { get; set; }
  }
  class WebPortalConfigResource
    Octopus.Client.Extensibility.IResource
  {
    .ctor()
    String Id { get; set; }
    Octopus.Client.Extensibility.LinkCollection Links { get; set; }
    Octopus.Client.Model.WebPortalSecurityResource Security { get; set; }
  }
  class WebPortalSecurityResource
  {
    .ctor()
    Boolean ContentSecurityPolicyEnabled { get; set; }
    String CorsWhitelist { get; set; }
    Boolean HttpStrictTransportSecurityEnabled { get; set; }
    Int64 HttpStrictTransportSecurityMaxAge { get; set; }
    String ReferrerPolicy { get; set; }
    Octopus.Client.Model.XOptionsResource XOptions { get; set; }
  }
  class WorkerPoolResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Extensibility.INamedResource
    Octopus.Client.Extensibility.IHaveSpaceResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    String Description { get; set; }
    Boolean IsDefault { get; set; }
    String Name { get; set; }
    Int32 SortOrder { get; set; }
    String SpaceId { get; set; }
    Octopus.Client.Model.WorkerPoolType WorkerPoolType { get; set; }
  }
  class WorkerPoolsSummaryResource
    Octopus.Client.Model.SummaryResourcesCombined
  {
    .ctor()
    List<WorkerPoolSummaryResource> WorkerPoolSummaries { get; set; }
  }
  class WorkerPoolSummaryResource
    Octopus.Client.Model.SummaryResource
  {
    .ctor()
    Octopus.Client.Model.WorkerPoolResource WorkerPool { get; set; }
  }
  WorkerPoolType
  {
      StaticWorkerPool = 0
      DynamicWorkerPool = 1
  }
  class WorkerResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Extensibility.INamedResource
    Octopus.Client.Extensibility.IHaveSpaceResource
    Octopus.Client.Model.MachineBasedResource
  {
    .ctor()
    String SpaceId { get; set; }
    Octopus.Client.Model.ReferenceCollection WorkerPoolIds { get; set; }
    Octopus.Client.Model.WorkerResource AddOrUpdateWorkerPools(Octopus.Client.Model.WorkerPoolResource[])
    Octopus.Client.Model.WorkerResource ClearWorkerPools()
    Octopus.Client.Model.WorkerResource RemoveWorkerPool(Octopus.Client.Model.WorkerPoolResource)
  }
  class X509Certificate
  {
    .ctor()
    String IssuerDistinguishedName { get; set; }
    DateTimeOffset NotAfter { get; set; }
    DateTimeOffset NotBefore { get; set; }
    String SerialNumber { get; set; }
    String SignatureAlgorithmName { get; set; }
    String SubjectDistinguishedName { get; set; }
    String Thumbprint { get; set; }
    Int32 Version { get; set; }
  }
  class XOptionsResource
  {
    static System.String XFrameAllowFromDescription
    static System.String XFrameOptionsDescription
    .ctor()
    String XFrameOptionAllowFrom { get; set; }
    String XFrameOptions { get; set; }
  }
}
Octopus.Client.Model.Accounts
{
  abstract class AccountResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Extensibility.INamedResource
    Octopus.Client.Extensibility.IHaveSpaceResource
    Octopus.Client.Model.Resource
  {
    Octopus.Client.Model.Accounts.AccountType AccountType { get; }
    String Description { get; set; }
    Octopus.Client.Model.ReferenceCollection EnvironmentIds { get; set; }
    String Name { get; set; }
    String SpaceId { get; set; }
    Octopus.Client.Model.TenantedDeploymentMode TenantedDeploymentParticipation { get; set; }
    Octopus.Client.Model.ReferenceCollection TenantIds { get; set; }
    Octopus.Client.Model.ReferenceCollection TenantTags { get; set; }
  }
  AccountType
  {
      None = 0
      UsernamePassword = 1
      SshKeyPair = 2
      AzureSubscription = 3
      AzureServicePrincipal = 4
      AmazonWebServicesAccount = 5
      AmazonWebServicesRoleAccount = 6
      Token = 7
      GoogleCloudAccount = 8
  }
  class AmazonWebServicesAccountResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Extensibility.INamedResource
    Octopus.Client.Extensibility.IHaveSpaceResource
    Octopus.Client.Model.Accounts.AccountResource
  {
    .ctor()
    String AccessKey { get; set; }
    Octopus.Client.Model.Accounts.AccountType AccountType { get; }
    Octopus.Client.Model.SensitiveValue SecretKey { get; set; }
  }
  class AzureServicePrincipalAccountResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Extensibility.INamedResource
    Octopus.Client.Extensibility.IHaveSpaceResource
    Octopus.Client.Model.Accounts.AccountResource
  {
    .ctor()
    Octopus.Client.Model.Accounts.AccountType AccountType { get; }
    String ActiveDirectoryEndpointBaseUri { get; set; }
    String AzureEnvironment { get; set; }
    String ClientId { get; set; }
    Octopus.Client.Model.SensitiveValue Password { get; set; }
    String ResourceManagementEndpointBaseUri { get; set; }
    String SubscriptionNumber { get; set; }
    String TenantId { get; set; }
    class ResourceGroup
    {
      .ctor()
      String Id { get; set; }
      String Name { get; set; }
    }
    class WebSite
    {
      .ctor()
      String Name { get; set; }
      String ResourceGroup { get; set; }
      String WebSpace { get; set; }
    }
    class WebSlot
    {
      .ctor()
      String Name { get; set; }
      String Region { get; set; }
      String ResourceGroupName { get; set; }
      String Site { get; set; }
    }
  }
  class AzureStorageAccount
  {
    .ctor()
    String Location { get; set; }
    String Name { get; set; }
  }
  class AzureSubscriptionAccountResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Extensibility.INamedResource
    Octopus.Client.Extensibility.IHaveSpaceResource
    Octopus.Client.Model.Accounts.AccountResource
  {
    .ctor()
    Octopus.Client.Model.Accounts.AccountType AccountType { get; }
    String AzureEnvironment { get; set; }
    Octopus.Client.Model.SensitiveValue CertificateBytes { get; set; }
    String CertificateThumbprint { get; set; }
    String ServiceManagementEndpointBaseUri { get; set; }
    String ServiceManagementEndpointSuffix { get; set; }
    String SubscriptionNumber { get; set; }
    class WebSite
    {
      .ctor()
      String Name { get; set; }
      String ResourceGroup { get; set; }
      String WebSpace { get; set; }
    }
    class WebSlot
    {
      .ctor()
      String Name { get; set; }
      String Region { get; set; }
      String ResourceGroupName { get; set; }
      String Site { get; set; }
    }
  }
  class GoogleCloudAccountResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Extensibility.INamedResource
    Octopus.Client.Extensibility.IHaveSpaceResource
    Octopus.Client.Model.Accounts.AccountResource
  {
    .ctor()
    Octopus.Client.Model.Accounts.AccountType AccountType { get; }
    Octopus.Client.Model.SensitiveValue JsonKey { get; set; }
  }
  class ResourceGroup
  {
    .ctor()
    String Id { get; set; }
    String Name { get; set; }
  }
  class SshKeyPairAccountResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Extensibility.INamedResource
    Octopus.Client.Extensibility.IHaveSpaceResource
    Octopus.Client.Model.Accounts.AccountResource
  {
    .ctor()
    Octopus.Client.Model.Accounts.AccountType AccountType { get; }
    Octopus.Client.Model.SensitiveValue PrivateKeyFile { get; set; }
    Octopus.Client.Model.SensitiveValue PrivateKeyPassphrase { get; set; }
    String Username { get; set; }
  }
  class SupportedAccountTypesAttribute
    _Attribute
    Attribute
  {
    .ctor(Octopus.Client.Model.Accounts.AccountType[])
    Octopus.Client.Model.Accounts.AccountType[] AccountTypes { get; }
  }
  class TokenAccountResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Extensibility.INamedResource
    Octopus.Client.Extensibility.IHaveSpaceResource
    Octopus.Client.Model.Accounts.AccountResource
  {
    .ctor()
    Octopus.Client.Model.Accounts.AccountType AccountType { get; }
    Octopus.Client.Model.SensitiveValue Token { get; set; }
  }
  class UsernamePasswordAccountResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Extensibility.INamedResource
    Octopus.Client.Extensibility.IHaveSpaceResource
    Octopus.Client.Model.Accounts.AccountResource
  {
    .ctor()
    Octopus.Client.Model.Accounts.AccountType AccountType { get; }
    Octopus.Client.Model.SensitiveValue Password { get; set; }
    String Username { get; set; }
  }
  class WebSite
  {
    .ctor()
    String Name { get; set; }
    String ResourceGroup { get; set; }
    String WebSpace { get; set; }
  }
  class WebSite
  {
    .ctor()
    String Name { get; set; }
    String ResourceGroup { get; set; }
    String WebSpace { get; set; }
  }
  class WebSlot
  {
    .ctor()
    String Name { get; set; }
    String Region { get; set; }
    String ResourceGroupName { get; set; }
    String Site { get; set; }
  }
  class WebSlot
  {
    .ctor()
    String Name { get; set; }
    String Region { get; set; }
    String ResourceGroupName { get; set; }
    String Site { get; set; }
  }
}
Octopus.Client.Model.Accounts.Usages
{
  class AccountUsageResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    ICollection<StepUsage> DeploymentProcesses { get; set; }
    ICollection<LibraryVariableSetUsageEntry> LibraryVariableSets { get; set; }
    ICollection<ProjectVariableSetUsage> ProjectVariableSets { get; set; }
    ICollection<ReleaseUsage> Releases { get; set; }
    ICollection<RunbookStepUsage> RunbookProcesses { get; set; }
    ICollection<RunbookSnapshotUsage> RunbookSnapshots { get; set; }
    ICollection<TargetUsageEntry> Targets { get; set; }
  }
  class LibraryVariableSetUsageEntry
  {
    .ctor()
    String LibraryVariableSetId { get; set; }
    String LibraryVariableSetName { get; set; }
  }
  class ProjectVariableSetUsage
  {
    .ctor()
    Boolean IsCurrentlyBeingUsedInProject { get; set; }
    String ProjectId { get; set; }
    String ProjectName { get; set; }
    String ProjectSlug { get; set; }
    ICollection<ReleaseUsageEntry> Releases { get; set; }
    List<RunbookSnapshotUsageEntry> RunbookSnapshots { get; set; }
  }
  class ReleaseUsage
  {
    .ctor()
    String ProjectId { get; set; }
    String ProjectName { get; set; }
    ICollection<ReleaseUsageEntry> Releases { get; set; }
  }
  class ReleaseUsageEntry
  {
    .ctor()
    String ReleaseId { get; set; }
    String ReleaseVersion { get; set; }
  }
  class RunbookSnapshotUsage
  {
    .ctor()
    String ProjectId { get; set; }
    String ProjectName { get; set; }
    String RunbookId { get; set; }
    String RunbookName { get; set; }
    ICollection<RunbookSnapshotUsageEntry> Snapshots { get; set; }
  }
  class RunbookSnapshotUsageEntry
  {
    .ctor()
    String SnapshotId { get; set; }
    String SnapshotName { get; set; }
  }
  class RunbookStepUsage
    Octopus.Client.Model.Accounts.Usages.StepUsageBase
  {
    .ctor()
    String ProcessId { get; set; }
    String RunbookId { get; set; }
    String RunbookName { get; set; }
  }
  class StepUsage
    Octopus.Client.Model.Accounts.Usages.StepUsageBase
  {
    .ctor()
  }
  class StepUsageBase
  {
    .ctor()
    String ProjectId { get; set; }
    String ProjectName { get; set; }
    String ProjectSlug { get; set; }
    ICollection<StepUsageEntry> Steps { get; set; }
  }
  class StepUsageEntry
  {
    .ctor()
    String StepId { get; set; }
    String StepName { get; set; }
  }
  class TargetUsageEntry
  {
    .ctor()
    String TargetId { get; set; }
    String TargetName { get; set; }
  }
}
Octopus.Client.Model.BuildInformation
{
  class OctopusBuildInformation
  {
    .ctor()
    String Branch { get; set; }
    String BuildEnvironment { get; set; }
    String BuildNumber { get; set; }
    String BuildUrl { get; set; }
    Octopus.Client.Model.IssueTrackers.Commit[] Commits { get; set; }
    String VcsCommitNumber { get; set; }
    String VcsRoot { get; set; }
    String VcsType { get; set; }
  }
  class OctopusPackageVersionBuildInformationMappedResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    String Branch { get; set; }
    String BuildEnvironment { get; set; }
    String BuildNumber { get; set; }
    String BuildUrl { get; set; }
    Octopus.Client.Model.IssueTrackers.CommitDetail[] Commits { get; set; }
    Nullable<DateTimeOffset> Created { get; set; }
    String IncompleteDataWarning { get; set; }
    String IssueTrackerName { get; set; }
    String PackageId { get; set; }
    String VcsCommitNumber { get; set; }
    String VcsCommitUrl { get; set; }
    String VcsRoot { get; set; }
    String VcsType { get; set; }
    String Version { get; set; }
    Octopus.Client.Model.IssueTrackers.WorkItemLink[] WorkItems { get; set; }
  }
  class OctopusPackageVersionBuildInformationResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    Octopus.Client.Model.BuildInformation.OctopusBuildInformation OctopusBuildInformation { get; set; }
    String PackageId { get; set; }
    String Version { get; set; }
  }
  class ReleasePackageVersionBuildInformationResource
  {
    .ctor()
    String Branch { get; set; }
    String BuildEnvironment { get; set; }
    String BuildNumber { get; set; }
    String BuildUrl { get; set; }
    Octopus.Client.Model.IssueTrackers.CommitDetail[] Commits { get; set; }
    String IssueTrackerName { get; set; }
    String PackageId { get; set; }
    String VcsCommitNumber { get; set; }
    String VcsCommitUrl { get; set; }
    String VcsRoot { get; set; }
    String VcsType { get; set; }
    String Version { get; set; }
    Octopus.Client.Model.IssueTrackers.WorkItemLink[] WorkItems { get; set; }
  }
}
Octopus.Client.Model.DeploymentProcess
{
  class InlineScriptAction
    Octopus.Client.Model.DeploymentProcess.ScriptAction
  {
    .ctor(Octopus.Client.Model.ScriptSyntax, String)
    Octopus.Client.Model.DeploymentProcess.ScriptSource Source { get; }
    Octopus.Client.Model.ScriptSyntax Syntax { get; }
    String GetScriptBody()
  }
  class InlineScriptActionFromFileInAssembly
    Octopus.Client.Model.DeploymentProcess.ScriptAction
  {
    .ctor(String, Assembly)
    Assembly ResourceAssembly { get; }
    String ResourceName { get; }
    Octopus.Client.Model.DeploymentProcess.ScriptSource Source { get; }
    Octopus.Client.Model.ScriptSyntax Syntax { get; }
    String GetScriptBody()
  }
  abstract class ScriptAction
  {
    Octopus.Client.Model.DeploymentProcess.ScriptSource Source { get; }
    Octopus.Client.Model.ScriptSyntax Syntax { get; }
    static Octopus.Client.Model.DeploymentProcess.InlineScriptAction InlineScript(Octopus.Client.Model.ScriptSyntax, String)
    static Octopus.Client.Model.DeploymentProcess.InlineScriptActionFromFileInAssembly InlineScriptFromFileInAssembly(String, Assembly)
  }
  class ScriptActionFromFileInPackage
    Octopus.Client.Model.DeploymentProcess.ScriptAction
  {
    .ctor(Octopus.Client.Model.PackageResource, String)
    String PackageFeedId { get; }
    String PackageId { get; }
    String ScriptFilePath { get; }
    Octopus.Client.Model.DeploymentProcess.ScriptSource Source { get; }
    Octopus.Client.Model.ScriptSyntax Syntax { get; }
  }
  ScriptSource
  {
      Inline = 0
      Package = 1
  }
  ScriptTarget
  {
      Server = 0
      Target = 1
  }
}
Octopus.Client.Model.Endpoints
{
  AzureServiceFabricCredentialType
  {
      ClientCredential = 0
      UserCredential = 1
  }
  AzureServiceFabricSecurityMode
  {
      Unsecure = 0
      SecureClientCertificate = 1
      SecureAzureAD = 2
  }
  class AzureWebAppEndpointResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Endpoints.EndpointResource
  {
    .ctor()
    String AccountId { get; set; }
    Octopus.Client.Model.CommunicationStyle CommunicationStyle { get; }
    String DefaultWorkerPoolId { get; set; }
    String ResourceGroupName { get; set; }
    String WebAppName { get; set; }
    String WebAppSlotName { get; set; }
  }
  abstract class CalamariDotNetCorePlatforms
  {
    static System.String Linux64
    static System.String Osx64
  }
  class CloudRegionEndpointResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Endpoints.EndpointResource
  {
    .ctor()
    Octopus.Client.Model.CommunicationStyle CommunicationStyle { get; }
    String DefaultWorkerPoolId { get; set; }
  }
  class CloudServiceEndpointResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Endpoints.EndpointResource
  {
    .ctor()
    String AccountId { get; set; }
    String CloudServiceName { get; set; }
    Octopus.Client.Model.CommunicationStyle CommunicationStyle { get; }
    String DefaultWorkerPoolId { get; set; }
    String Slot { get; set; }
    String StorageAccountName { get; set; }
    Boolean SwapIfPossible { get; set; }
    Boolean UseCurrentInstanceCount { get; set; }
  }
  abstract class EndpointResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    Octopus.Client.Model.CommunicationStyle CommunicationStyle { get; }
  }
  interface IEndpointWithMultipleAuthenticationResource
  {
    String AuthenticationType { get; }
  }
  class KubernetesAwsAuthenticationResource
    Octopus.Client.Model.Endpoints.IEndpointWithMultipleAuthenticationResource
    Octopus.Client.Model.Endpoints.KubernetesStandardAccountAuthenticationResource
  {
    .ctor()
    String AuthenticationType { get; }
    String ClusterName { get; set; }
  }
  class KubernetesAzureAuthenticationResource
    Octopus.Client.Model.Endpoints.IEndpointWithMultipleAuthenticationResource
    Octopus.Client.Model.Endpoints.KubernetesStandardAccountAuthenticationResource
  {
    .ctor()
    String AuthenticationType { get; }
    String ClusterName { get; set; }
    String ClusterResourceGroup { get; set; }
  }
  class KubernetesCertificateAuthenticationResource
    Octopus.Client.Model.Endpoints.IEndpointWithMultipleAuthenticationResource
  {
    .ctor()
    String AuthenticationType { get; }
    String ClientCertificate { get; set; }
  }
  class KubernetesEndpointResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Endpoints.EndpointResource
  {
    .ctor()
    Octopus.Client.Model.Endpoints.IEndpointWithMultipleAuthenticationResource Authentication { get; set; }
    String ClusterCertificate { get; set; }
    String ClusterCertificatePath { get; set; }
    String ClusterUrl { get; set; }
    Octopus.Client.Model.CommunicationStyle CommunicationStyle { get; }
    Octopus.Client.Model.DeploymentActionContainerResource Container { get; set; }
    String DefaultWorkerPoolId { get; set; }
    String Namespace { get; set; }
    String ProxyId { get; set; }
    String SkipTlsVerification { get; set; }
  }
  class KubernetesGoogleCloudAuthenticationResource
    Octopus.Client.Model.Endpoints.IEndpointWithMultipleAuthenticationResource
    Octopus.Client.Model.Endpoints.KubernetesStandardAccountAuthenticationResource
  {
    .ctor()
    String AuthenticationType { get; }
    String ClusterName { get; set; }
    Boolean ImpersonateServiceAccount { get; set; }
    String Project { get; set; }
    String Region { get; set; }
    String ServiceAccountEmails { get; set; }
    Boolean UseVmServiceAccount { get; set; }
    String Zone { get; set; }
  }
  class KubernetesPodServiceAuthenticationResource
    Octopus.Client.Model.Endpoints.IEndpointWithMultipleAuthenticationResource
  {
    .ctor()
    String AuthenticationType { get; }
    String TokenPath { get; set; }
  }
  class KubernetesStandardAccountAuthenticationResource
    Octopus.Client.Model.Endpoints.IEndpointWithMultipleAuthenticationResource
  {
    .ctor()
    String AccountId { get; set; }
    String AuthenticationType { get; }
  }
  class ListeningTentacleEndpointResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Endpoints.TentacleEndpointResource
  {
    .ctor()
    Octopus.Client.Model.CommunicationStyle CommunicationStyle { get; }
    String ProxyId { get; set; }
    String Uri { get; set; }
  }
  class OfflineDropDestinationResource
  {
    .ctor()
    .ctor(String)
    Octopus.Client.Model.Endpoints.OfflineDropDestinationType DestinationType { get; set; }
    String DropFolderPath { get; set; }
  }
  OfflineDropDestinationType
  {
      Artifact = 0
      FileSystem = 1
  }
  class OfflineDropEndpointResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Endpoints.EndpointResource
  {
    .ctor()
    String ApplicationsDirectory { get; set; }
    Octopus.Client.Model.CommunicationStyle CommunicationStyle { get; }
    Octopus.Client.Model.Endpoints.OfflineDropDestinationResource Destination { get; set; }
    String OctopusWorkingDirectory { get; set; }
    Octopus.Client.Model.SensitiveValue SensitiveVariablesEncryptionPassword { get; set; }
  }
  class PollingTentacleEndpointResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Endpoints.TentacleEndpointResource
  {
    .ctor()
    Octopus.Client.Model.CommunicationStyle CommunicationStyle { get; }
    String Uri { get; set; }
  }
  class ServiceFabricEndpointResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Endpoints.EndpointResource
  {
    .ctor()
    String AadClientCredentialSecret { get; set; }
    Octopus.Client.Model.Endpoints.AzureServiceFabricCredentialType AadCredentialType { get; set; }
    Octopus.Client.Model.SensitiveValue AadUserCredentialPassword { get; set; }
    String AadUserCredentialUsername { get; set; }
    String CertificateStoreLocation { get; set; }
    String CertificateStoreName { get; set; }
    String ClientCertVariable { get; set; }
    Octopus.Client.Model.CommunicationStyle CommunicationStyle { get; }
    String ConnectionEndpoint { get; set; }
    String DefaultWorkerPoolId { get; set; }
    Octopus.Client.Model.Endpoints.AzureServiceFabricSecurityMode SecurityMode { get; set; }
    String ServerCertThumbprint { get; set; }
  }
  class SshEndpointResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Endpoints.EndpointResource
  {
    .ctor()
    String AccountId { get; set; }
    Octopus.Client.Model.CommunicationStyle CommunicationStyle { get; }
    String DotNetCorePlatform { get; set; }
    String Fingerprint { get; set; }
    String Host { get; set; }
    Int32 Port { get; set; }
    String ProxyId { get; set; }
    String Uri { get; }
    abstract class CalamariDotNetCorePlatforms
    {
      static System.String Linux64
      static System.String Osx64
    }
  }
  class StepPackageEndpointResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Endpoints.EndpointResource
  {
    .ctor()
    Octopus.Client.Model.CommunicationStyle CommunicationStyle { get; }
    String DeploymentTargetTypeId { get; set; }
    Object Inputs { get; set; }
    String StepPackageId { get; set; }
    String StepPackageVersion { get; set; }
  }
  class TentacleDetailsResource
  {
    .ctor()
    Boolean UpgradeLocked { get; set; }
    Boolean UpgradeRequired { get; set; }
    Boolean UpgradeSuggested { get; set; }
    String Version { get; set; }
  }
  abstract class TentacleEndpointResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Endpoints.EndpointResource
  {
    String CertificateSignatureAlgorithm { get; set; }
    Octopus.Client.Model.Endpoints.TentacleDetailsResource TentacleVersionDetails { get; set; }
    String Thumbprint { get; set; }
  }
}
Octopus.Client.Model.Forms
{
  class Button
  {
    .ctor(String, String)
    String Text { get; }
    Object Value { get; }
  }
  class Checkbox
    Octopus.Client.Model.Forms.Control
  {
    .ctor(String)
    String Text { get; }
    Object CoerceValue(String)
    Type GetNativeValueType()
  }
  abstract class Control
  {
    Object CoerceValue(String)
    Type GetNativeValueType()
  }
  class Form
  {
    .ctor()
    .ctor(IEnumerable<FormElement>, IDictionary<String, String>)
    List<FormElement> Elements { get; }
    Dictionary<String, String> Values { get; }
  }
  class FormElement
  {
    .ctor(String, Octopus.Client.Model.Forms.Control, Boolean)
    Octopus.Client.Model.Forms.Control Control { get; }
    Boolean IsValueRequired { get; }
    String Name { get; }
  }
  abstract class FormExtensions
  {
    static void AddElement(Octopus.Client.Model.Forms.Form, String, Octopus.Client.Model.Forms.Control, String, Boolean)
    static Object GetCoercedValue(Octopus.Client.Model.Forms.Form, String)
    static void SetValue(Octopus.Client.Model.Forms.Form, String, String)
    static void UpdateValues(Octopus.Client.Model.Forms.Form, IDictionary<String, String>)
    static IList<String> Validate(Octopus.Client.Model.Forms.Form)
  }
  class Paragraph
    Octopus.Client.Model.Forms.Control
  {
    .ctor(String)
    String Text { get; }
  }
  class SubmitButtonGroup
    Octopus.Client.Model.Forms.Control
  {
    .ctor(List<Button>)
    List<Button> Buttons { get; }
    Object CoerceValue(String)
    Type GetNativeValueType()
  }
  class TextArea
    Octopus.Client.Model.Forms.Control
  {
    .ctor(String)
    String Label { get; }
    Object CoerceValue(String)
    Type GetNativeValueType()
  }
  class VariableValue
    Octopus.Client.Model.Forms.Control
  {
    .ctor(String, String, String, Boolean)
    String Description { get; }
    Boolean IsSecure { get; }
    String Label { get; }
    String Name { get; }
    Object CoerceValue(String)
    Type GetNativeValueType()
  }
}
Octopus.Client.Model.IssueTrackers
{
  class Commit
  {
    .ctor()
    String Comment { get; set; }
    String Id { get; set; }
  }
  class CommitDetail
  {
    .ctor()
    String Comment { get; set; }
    String Id { get; set; }
    String LinkUrl { get; set; }
  }
  class WorkItemLink
  {
    .ctor()
    String Id { get; set; }
    String LinkText { get; set; }
    String LinkUrl { get; set; }
  }
}
Octopus.Client.Model.Migrations
{
  class MigrationImportResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    Boolean DeletePackageOnCompletion { get; set; }
    String FailureCallbackUri { get; set; }
    Boolean IsDryRun { get; set; }
    Boolean IsEncryptedPackage { get; set; }
    Boolean OverwriteExisting { get; set; }
    String PackageFeedSpaceId { get; set; }
    String PackageId { get; set; }
    String PackageVersion { get; set; }
    String Password { get; set; }
    String SuccessCallbackUri { get; set; }
    String TaskId { get; set; }
  }
  class MigrationPartialExportResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    String DestinationApiKey { get; set; }
    String DestinationPackageFeed { get; set; }
    String DestinationPackageFeedSpaceId { get; set; }
    Boolean EncryptPackage { get; set; }
    String FailureCallbackUri { get; set; }
    Boolean IgnoreCertificates { get; set; }
    Boolean IgnoreDeployments { get; set; }
    Boolean IgnoreMachines { get; set; }
    Boolean IgnoreTenants { get; set; }
    Boolean IncludeTaskLogs { get; set; }
    String PackageId { get; set; }
    String PackageVersion { get; set; }
    String Password { get; set; }
    List<String> Projects { get; set; }
    String SpaceId { get; set; }
    String SuccessCallbackUri { get; set; }
    String TaskId { get; set; }
  }
}
Octopus.Client.Model.PackageMetadata
{
  class OctopusPackageMetadata
  {
    .ctor()
    String BuildEnvironment { get; set; }
    String BuildNumber { get; set; }
    String BuildUrl { get; set; }
    String CommentParser { get; set; }
    Octopus.Client.Model.IssueTrackers.Commit[] Commits { get; set; }
    String VcsCommitNumber { get; set; }
    String VcsRoot { get; set; }
    String VcsType { get; set; }
  }
  class OctopusPackageMetadataMappedResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    String BuildEnvironment { get; set; }
    String BuildNumber { get; set; }
    String BuildUrl { get; set; }
    Octopus.Client.Model.IssueTrackers.CommitDetail[] Commits { get; set; }
    Nullable<DateTimeOffset> Created { get; set; }
    String IncompleteDataWarning { get; set; }
    String IssueTrackerName { get; set; }
    String PackageId { get; set; }
    String VcsCommitNumber { get; set; }
    String VcsCommitUrl { get; set; }
    String VcsRoot { get; set; }
    String VcsType { get; set; }
    String Version { get; set; }
    Octopus.Client.Model.IssueTrackers.WorkItemLink[] WorkItems { get; set; }
  }
  class OctopusPackageMetadataVersionResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    .ctor()
    Octopus.Client.Model.PackageMetadata.OctopusPackageMetadata OctopusPackageMetadata { get; set; }
    String PackageId { get; set; }
    String Version { get; set; }
  }
}
Octopus.Client.Model.Triggers
{
  class AutoDeployActionResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Triggers.TriggerActionResource
  {
    .ctor()
    Octopus.Client.Model.Triggers.TriggerActionType ActionType { get; }
    Boolean ShouldRedeployWhenMachineHasBeenDeployedTo { get; set; }
  }
  class MachineFilterResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Triggers.TriggerFilterResource
  {
    .ctor()
    Octopus.Client.Model.ReferenceCollection EnvironmentIds { get; set; }
    Octopus.Client.Model.ReferenceCollection EventCategories { get; set; }
    Octopus.Client.Model.ReferenceCollection EventGroups { get; set; }
    Octopus.Client.Model.Triggers.TriggerFilterType FilterType { get; }
    Octopus.Client.Model.ReferenceCollection Roles { get; set; }
  }
  class RunRunbookActionResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Triggers.TriggerActionResource
  {
    .ctor()
    Octopus.Client.Model.Triggers.TriggerActionType ActionType { get; }
    Octopus.Client.Model.ReferenceCollection EnvironmentIds { get; set; }
    String RunbookId { get; set; }
    Octopus.Client.Model.ReferenceCollection TenantIds { get; set; }
    Octopus.Client.Model.ReferenceCollection TenantTags { get; set; }
  }
  abstract class ScopedDeploymentActionResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Triggers.TriggerActionResource
  {
    String ChannelId { get; set; }
    Octopus.Client.Model.ReferenceCollection TenantIds { get; set; }
    Octopus.Client.Model.ReferenceCollection TenantTags { get; set; }
  }
  abstract class TriggerActionResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    Octopus.Client.Model.Triggers.TriggerActionType ActionType { get; }
  }
  TriggerActionType
  {
      AutoDeploy = 0
      DeployLatestRelease = 1
      DeployNewRelease = 2
      RunRunbook = 3
  }
  abstract class TriggerFilterResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Resource
  {
    Octopus.Client.Model.Triggers.TriggerFilterType FilterType { get; }
  }
  TriggerFilterType
  {
      MachineFilter = 0
      OnceDailySchedule = 1
      ContinuousDailySchedule = 2
      DaysPerMonthSchedule = 3
      CronExpressionSchedule = 4
  }
}
Octopus.Client.Model.Triggers.ScheduledTriggers
{
  class ContinuousDailyScheduledTriggerFilterResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Triggers.ScheduledTriggers.ScheduledTriggerFilterResource
  {
    .ctor()
    Octopus.Client.Model.DaysOfWeek DaysOfWeek { get; set; }
    Octopus.Client.Model.Triggers.TriggerFilterType FilterType { get; }
    Nullable<Int16> HourInterval { get; set; }
    Octopus.Client.Model.Triggers.ScheduledTriggers.DailyScheduledTriggerInterval Interval { get; set; }
    Nullable<Int16> MinuteInterval { get; set; }
    DateTime RunAfter { get; set; }
    DateTime RunUntil { get; set; }
  }
  class CronScheduledTriggerFilterResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Triggers.ScheduledTriggers.ScheduledTriggerFilterResource
  {
    .ctor()
    String CronExpression { get; set; }
    Octopus.Client.Model.Triggers.TriggerFilterType FilterType { get; }
  }
  DailyScheduledTriggerInterval
  {
      OnceHourly = 0
      OnceEveryMinute = 1
  }
  DayOfWeek
  {
      Sunday = 0
      Monday = 1
      Tuesday = 2
      Wednesday = 3
      Thursday = 4
      Friday = 5
      Saturday = 6
  }
  class DaysPerMonthScheduledTriggerFilterResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Triggers.ScheduledTriggers.ScheduledTriggerFilterResource
  {
    .ctor()
    String DateOfMonth { get; set; }
    String DayNumberOfMonth { get; set; }
    Nullable<DayOfWeek> DayOfWeek { get; set; }
    Octopus.Client.Model.Triggers.TriggerFilterType FilterType { get; }
    Octopus.Client.Model.Triggers.ScheduledTriggers.MonthlyScheduleType MonthlyScheduleType { get; set; }
    DateTime StartTime { get; set; }
  }
  class DeployLatestReleaseActionResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Triggers.ScopedDeploymentActionResource
  {
    .ctor()
    Octopus.Client.Model.Triggers.TriggerActionType ActionType { get; }
    String DestinationEnvironmentId { get; set; }
    Boolean ShouldRedeployWhenReleaseIsCurrent { get; set; }
    Octopus.Client.Model.ReferenceCollection SourceEnvironmentIds { get; set; }
    String Variables { get; set; }
  }
  class DeployNewReleaseActionResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Triggers.ScopedDeploymentActionResource
  {
    .ctor()
    Octopus.Client.Model.Triggers.TriggerActionType ActionType { get; }
    String EnvironmentId { get; set; }
    String Variables { get; set; }
    Octopus.Client.Model.VersionControl.VersionControlReferenceResource VersionControlReference { get; set; }
  }
  MonthlyScheduleType
  {
      DateOfMonth = 0
      DayOfMonth = 1
  }
  class OnceDailyScheduledTriggerFilterResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Triggers.ScheduledTriggers.ScheduledTriggerFilterResource
  {
    .ctor()
    Octopus.Client.Model.DaysOfWeek DaysOfWeek { get; set; }
    Octopus.Client.Model.Triggers.TriggerFilterType FilterType { get; }
    DateTime StartTime { get; set; }
  }
  abstract class ScheduledTriggerFilterResource
    Octopus.Client.Extensibility.IResource
    Octopus.Client.Model.IAuditedResource
    Octopus.Client.Model.Triggers.TriggerFilterResource
  {
    String Timezone { get; set; }
  }
}
Octopus.Client.Model.VersionControl
{
  class ConvertProjectToVersionControlledCommand
  {
    .ctor()
    String CommitMessage { get; set; }
    Octopus.Client.Model.VersionControlSettingsResource VersionControlSettings { get; set; }
  }
  class ConvertProjectToVersionControlledResponse
    Octopus.Client.Model.VersionControl.IHaveCustomerVisibleMessages
  {
    .ctor()
    Octopus.Client.Model.VersionControl.MessageCollection Messages { get; }
  }
  interface IHaveCustomerVisibleMessages
  {
    Octopus.Client.Model.VersionControl.MessageCollection Messages { get; }
  }
  class MessageCollection
    IList<String>
    ICollection<String>
    IEnumerable<String>
    IEnumerable
    IList
    ICollection
    IReadOnlyList<String>
    IReadOnlyCollection<String>
    List<String>
  {
    .ctor()
  }
  class VersionControlReferenceResource
  {
    .ctor()
    String GitCommit { get; set; }
    String GitRef { get; set; }
  }
}
Octopus.Client.Model.Versioning
{
  interface IVersionComparer
    IEqualityComparer<StrictSemanticVersion>
    IComparer<StrictSemanticVersion>
  {
  }
  class StrictSemanticVersion
    IFormattable
    IComparable
    IComparable<StrictSemanticVersion>
    IEquatable<StrictSemanticVersion>
  {
    .ctor(Octopus.Client.Model.Versioning.StrictSemanticVersion)
    .ctor(Int32, Int32, Int32)
    .ctor(Int32, Int32, Int32, String)
    .ctor(Int32, Int32, Int32, String, String)
    .ctor(Int32, Int32, Int32, IEnumerable<String>, String)
    Boolean HasMetadata { get; }
    Boolean IsPrerelease { get; }
    Int32 Major { get; }
    String Metadata { get; }
    Int32 Minor { get; }
    Int32 Patch { get; }
    String Release { get; }
    IEnumerable<String> ReleaseLabels { get; }
    Int32 CompareTo(Object)
    Int32 CompareTo(Octopus.Client.Model.Versioning.StrictSemanticVersion)
    Int32 CompareTo(Octopus.Client.Model.Versioning.StrictSemanticVersion, Octopus.Client.Model.Versioning.VersionComparison)
    Boolean Equals(Object)
    Boolean Equals(Octopus.Client.Model.Versioning.StrictSemanticVersion)
    Boolean Equals(Octopus.Client.Model.Versioning.StrictSemanticVersion, Octopus.Client.Model.Versioning.VersionComparison)
    Int32 GetHashCode()
    static Octopus.Client.Model.Versioning.StrictSemanticVersion Parse(String)
    String ToNormalizedString()
    String ToString()
    String ToString(String, IFormatProvider)
    static Boolean TryParse(String, Octopus.Client.Model.Versioning.StrictSemanticVersion&)
  }
  class VersionComparer
    Octopus.Client.Model.Versioning.IVersionComparer
    IEqualityComparer<StrictSemanticVersion>
    IComparer<StrictSemanticVersion>
  {
    static Octopus.Client.Model.Versioning.IVersionComparer Default
    static Octopus.Client.Model.Versioning.IVersionComparer Version
    static Octopus.Client.Model.Versioning.IVersionComparer VersionRelease
    static Octopus.Client.Model.Versioning.IVersionComparer VersionReleaseMetadata
    .ctor()
    .ctor(Octopus.Client.Model.Versioning.VersionComparison)
    static Int32 Compare(Octopus.Client.Model.Versioning.StrictSemanticVersion, Octopus.Client.Model.Versioning.StrictSemanticVersion, Octopus.Client.Model.Versioning.VersionComparison)
    Int32 Compare(Octopus.Client.Model.Versioning.StrictSemanticVersion, Octopus.Client.Model.Versioning.StrictSemanticVersion)
    Boolean Equals(Octopus.Client.Model.Versioning.StrictSemanticVersion, Octopus.Client.Model.Versioning.StrictSemanticVersion)
    Int32 GetHashCode(Octopus.Client.Model.Versioning.StrictSemanticVersion)
  }
  VersionComparison
  {
      Default = 0
      Version = 1
      VersionRelease = 2
      VersionReleaseMetadata = 3
  }
  class VersionFormatter
    IFormatProvider
    ICustomFormatter
  {
    .ctor()
    String Format(String, Object, IFormatProvider)
    Object GetFormat(Type)
  }
}
Octopus.Client.Operations
{
  class InvalidRegistrationArgumentsException
    ISerializable
    _Exception
    ArgumentException
  {
    .ctor(String)
  }
  interface IRegisterMachineOperation
    Octopus.Client.Operations.IRegisterMachineOperationBase
  {
    String[] EnvironmentNames { get; set; }
    String[] Roles { get; set; }
    Octopus.Client.Model.TenantedDeploymentMode TenantedDeploymentParticipation { get; set; }
    String[] Tenants { get; set; }
    String[] TenantTags { get; set; }
  }
  interface IRegisterMachineOperationBase
  {
    Boolean AllowOverwrite { get; set; }
    Octopus.Client.Model.CommunicationStyle CommunicationStyle { get; set; }
    String MachineName { get; set; }
    String MachinePolicy { get; set; }
    String ProxyName { get; set; }
    Uri SubscriptionId { get; set; }
    String TentacleHostname { get; set; }
    Int32 TentaclePort { get; set; }
    String TentacleThumbprint { get; set; }
    void Execute(Octopus.Client.OctopusServerEndpoint)
    void Execute(Octopus.Client.OctopusRepository)
    void Execute(Octopus.Client.IOctopusSpaceRepository)
    Task ExecuteAsync(Octopus.Client.OctopusServerEndpoint)
    Task ExecuteAsync(Octopus.Client.OctopusAsyncRepository)
    Task ExecuteAsync(Octopus.Client.IOctopusSpaceAsyncRepository)
  }
  interface IRegisterWorkerOperation
    Octopus.Client.Operations.IRegisterMachineOperationBase
  {
    String[] WorkerPoolNames { get; set; }
  }
  class RegisterMachineOperation
    Octopus.Client.Operations.IRegisterMachineOperationBase
    Octopus.Client.Operations.IRegisterMachineOperation
    Octopus.Client.Operations.RegisterMachineOperationBase
  {
    .ctor()
    .ctor(Octopus.Client.IOctopusClientFactory)
    String[] EnvironmentNames { get; set; }
    String[] Roles { get; set; }
    Octopus.Client.Model.TenantedDeploymentMode TenantedDeploymentParticipation { get; set; }
    String[] Tenants { get; set; }
    String[] TenantTags { get; set; }
    void Execute(Octopus.Client.IOctopusSpaceRepository)
    Task ExecuteAsync(Octopus.Client.IOctopusSpaceAsyncRepository)
  }
  abstract class RegisterMachineOperationBase
    Octopus.Client.Operations.IRegisterMachineOperationBase
  {
    .ctor(Octopus.Client.IOctopusClientFactory)
    Boolean AllowOverwrite { get; set; }
    Octopus.Client.Model.CommunicationStyle CommunicationStyle { get; set; }
    String MachineName { get; set; }
    String MachinePolicy { get; set; }
    String ProxyName { get; set; }
    Uri SubscriptionId { get; set; }
    String TentacleHostname { get; set; }
    Int32 TentaclePort { get; set; }
    String TentacleThumbprint { get; set; }
    void Execute(Octopus.Client.OctopusServerEndpoint)
    void Execute(Octopus.Client.OctopusRepository)
    void Execute(Octopus.Client.IOctopusSpaceRepository)
    Task ExecuteAsync(Octopus.Client.OctopusServerEndpoint)
    Task ExecuteAsync(Octopus.Client.OctopusAsyncRepository)
    Task ExecuteAsync(Octopus.Client.IOctopusSpaceAsyncRepository)
  }
  class RegisterWorkerOperation
    Octopus.Client.Operations.IRegisterMachineOperationBase
    Octopus.Client.Operations.IRegisterWorkerOperation
    Octopus.Client.Operations.RegisterMachineOperationBase
  {
    .ctor()
    .ctor(Octopus.Client.IOctopusClientFactory)
    String[] WorkerPoolNames { get; set; }
    void Execute(Octopus.Client.IOctopusSpaceRepository)
    Task ExecuteAsync(Octopus.Client.IOctopusSpaceAsyncRepository)
  }
}
Octopus.Client.Repositories
{
  class BranchScopedRepository
    Octopus.Client.Repositories.IBranchScopedRepository
  {
    .ctor(Octopus.Client.IOctopusRepository, Octopus.Client.Model.VersionControlBranchResource)
    Octopus.Client.Repositories.IVcsRunbookRepository Runbooks { get; }
  }
  class BuildInformationRepository
    Octopus.Client.Repositories.IBuildInformationRepository
  {
    .ctor(Octopus.Client.IOctopusRepository)
    void Delete(Octopus.Client.Model.BuildInformation.OctopusPackageVersionBuildInformationMappedResource)
    void DeleteBuilds(IReadOnlyList<OctopusPackageVersionBuildInformationMappedResource>)
    Octopus.Client.Model.BuildInformation.OctopusPackageVersionBuildInformationMappedResource Get(String)
    Octopus.Client.Model.ResourceCollection<OctopusPackageVersionBuildInformationMappedResource> LatestBuilds(Int32, Int32)
    Octopus.Client.Model.ResourceCollection<OctopusPackageVersionBuildInformationMappedResource> ListBuilds(String, Int32, Int32)
    Octopus.Client.Model.BuildInformation.OctopusPackageVersionBuildInformationMappedResource Push(String, String, Octopus.Client.Model.BuildInformation.OctopusBuildInformation)
    Octopus.Client.Model.BuildInformation.OctopusPackageVersionBuildInformationMappedResource Push(String, String, Octopus.Client.Model.BuildInformation.OctopusBuildInformation, Octopus.Client.Model.OverwriteMode)
  }
  interface IAccountRepository
    Octopus.Client.Repositories.IResourceRepository
    Octopus.Client.Repositories.ICreate<AccountResource>
    Octopus.Client.Repositories.IModify<AccountResource>
    Octopus.Client.Repositories.IDelete<AccountResource>
    Octopus.Client.Repositories.IGet<AccountResource>
    Octopus.Client.Repositories.IFindByName<AccountResource>
    Octopus.Client.Repositories.IPaginate<AccountResource>
  {
    Octopus.Client.Model.Accounts.AccountType DetermineAccountType()
    List<TAccount> FindAllOfType(Object)
    Octopus.Client.Repositories.TAccount FindByNameOfType(String)
    List<TAccount> FindByNamesOfType(IEnumerable<String>)
    List<TAccount> FindManyOfType(Func<TAccount, Boolean>, Object)
    Octopus.Client.Repositories.TAccount FindOneOfType(Func<TAccount, Boolean>, Object)
    Octopus.Client.Model.Accounts.Usages.AccountUsageResource GetAccountUsage(Octopus.Client.Model.Accounts.AccountResource)
    Octopus.Client.Repositories.TAccount GetOfType(String)
    List<TAccount> GetOfType(String[])
    void PaginateOfType(Func<ResourceCollection<TAccount>, Boolean>, Object)
    Octopus.Client.Repositories.TAccount RefreshOfType(Octopus.Client.Repositories.TAccount)
  }
  interface IActionTemplateRepository
    Octopus.Client.Repositories.ICreate<ActionTemplateResource>
    Octopus.Client.Repositories.IModify<ActionTemplateResource>
    Octopus.Client.Repositories.IDelete<ActionTemplateResource>
    Octopus.Client.Repositories.IGet<ActionTemplateResource>
    Octopus.Client.Repositories.IFindByName<ActionTemplateResource>
    Octopus.Client.Repositories.IPaginate<ActionTemplateResource>
    Octopus.Client.Repositories.IGetAll<ActionTemplateResource>
  {
    Octopus.Client.Model.ActionTemplateResource GetVersion(Octopus.Client.Model.ActionTemplateResource, Int32)
    List<ActionTemplateSearchResource> Search()
    void SetLogo(Octopus.Client.Model.ActionTemplateResource, String, Stream)
    Octopus.Client.Model.ActionUpdateResultResource[] UpdateActions(Octopus.Client.Model.ActionTemplateResource, Octopus.Client.Model.ActionsUpdateResource)
  }
  interface IArtifactRepository
    Octopus.Client.Repositories.IPaginate<ArtifactResource>
    Octopus.Client.Repositories.IGet<ArtifactResource>
    Octopus.Client.Repositories.ICreate<ArtifactResource>
    Octopus.Client.Repositories.IModify<ArtifactResource>
    Octopus.Client.Repositories.IDelete<ArtifactResource>
  {
    Octopus.Client.Model.ResourceCollection<ArtifactResource> FindRegarding(Octopus.Client.Extensibility.IResource)
    Stream GetContent(Octopus.Client.Model.ArtifactResource)
    void PutContent(Octopus.Client.Model.ArtifactResource, Stream)
  }
  interface IBackupRepository
  {
    Octopus.Client.Model.BackupConfigurationResource GetConfiguration()
    Octopus.Client.Model.BackupConfigurationResource ModifyConfiguration(Octopus.Client.Model.BackupConfigurationResource)
  }
  interface IBranchScopedRepository
  {
    Octopus.Client.Repositories.IVcsRunbookRepository Runbooks { get; }
  }
  interface IBuildInformationRepository
  {
    void Delete(Octopus.Client.Model.BuildInformation.OctopusPackageVersionBuildInformationMappedResource)
    void DeleteBuilds(IReadOnlyList<OctopusPackageVersionBuildInformationMappedResource>)
    Octopus.Client.Model.BuildInformation.OctopusPackageVersionBuildInformationMappedResource Get(String)
    Octopus.Client.Model.ResourceCollection<OctopusPackageVersionBuildInformationMappedResource> LatestBuilds(Int32, Int32)
    Octopus.Client.Model.ResourceCollection<OctopusPackageVersionBuildInformationMappedResource> ListBuilds(String, Int32, Int32)
    Octopus.Client.Model.BuildInformation.OctopusPackageVersionBuildInformationMappedResource Push(String, String, Octopus.Client.Model.BuildInformation.OctopusBuildInformation, Octopus.Client.Model.OverwriteMode)
    Octopus.Client.Model.BuildInformation.OctopusPackageVersionBuildInformationMappedResource Push(String, String, Octopus.Client.Model.BuildInformation.OctopusBuildInformation)
  }
  interface IBuiltInPackageRepositoryRepository
  {
    void DeletePackage(Octopus.Client.Model.PackageResource)
    void DeletePackages(IReadOnlyList<PackageResource>)
    Octopus.Client.Model.PackageFromBuiltInFeedResource GetPackage(String, String)
    Octopus.Client.Model.ResourceCollection<PackageFromBuiltInFeedResource> LatestPackages(Int32, Int32)
    Octopus.Client.Model.ResourceCollection<PackageFromBuiltInFeedResource> ListPackages(String, Int32, Int32)
    Octopus.Client.Model.PackageFromBuiltInFeedResource PushPackage(String, Stream, Boolean)
    Octopus.Client.Model.PackageFromBuiltInFeedResource PushPackage(String, Stream, Boolean, Boolean)
    Octopus.Client.Model.PackageFromBuiltInFeedResource PushPackage(String, Stream, Octopus.Client.Model.OverwriteMode)
    Octopus.Client.Model.PackageFromBuiltInFeedResource PushPackage(String, Stream, Octopus.Client.Model.OverwriteMode, Boolean)
  }
  interface ICanExtendSpaceContext`1
  {
    Octopus.Client.Repositories.T UsingContext(Octopus.Client.SpaceContext)
  }
  interface ICertificateConfigurationRepository
    Octopus.Client.Repositories.IGet<CertificateConfigurationResource>
    Octopus.Client.Repositories.IFindByName<CertificateConfigurationResource>
    Octopus.Client.Repositories.IPaginate<CertificateConfigurationResource>
  {
    Octopus.Client.Model.CertificateConfigurationResource GetOctopusCertificate()
    Stream GetPublicCertificate(Octopus.Client.Model.CertificateConfigurationResource)
  }
  interface ICertificateRepository
    Octopus.Client.Repositories.IResourceRepository
    Octopus.Client.Repositories.IGet<CertificateResource>
    Octopus.Client.Repositories.IFindByName<CertificateResource>
    Octopus.Client.Repositories.IPaginate<CertificateResource>
    Octopus.Client.Repositories.ICreate<CertificateResource>
    Octopus.Client.Repositories.IModify<CertificateResource>
    Octopus.Client.Repositories.IDelete<CertificateResource>
  {
    void Archive(Octopus.Client.Model.CertificateResource)
    Stream Export(Octopus.Client.Model.CertificateResource, Nullable<CertificateFormat>, String, Boolean)
    Stream ExportAsPem(Octopus.Client.Model.CertificateResource, Boolean, Octopus.Client.Model.CertificateExportPemOptions)
    Octopus.Client.Model.CertificateConfigurationResource GetOctopusCertificate()
    Octopus.Client.Model.CertificateResource Replace(Octopus.Client.Model.CertificateResource, String, String)
    void UnArchive(Octopus.Client.Model.CertificateResource)
  }
  interface IChannelBetaRepository
  {
    Octopus.Client.Model.ChannelResource Create(Octopus.Client.Model.ProjectResource, Octopus.Client.Model.ChannelResource, String)
  }
  interface IChannelRepository
    Octopus.Client.Repositories.ICreate<ChannelResource>
    Octopus.Client.Repositories.ICreateProjectScoped<ChannelResource>
    Octopus.Client.Repositories.IModify<ChannelResource>
    Octopus.Client.Repositories.IGet<ChannelResource>
    Octopus.Client.Repositories.IGetProjectScoped<ChannelResource>
    Octopus.Client.Repositories.IDelete<ChannelResource>
    Octopus.Client.Repositories.IPaginate<ChannelResource>
    Octopus.Client.Repositories.IGetAll<ChannelResource>
  {
    Octopus.Client.Repositories.IChannelBetaRepository Beta()
    Octopus.Client.Editors.ChannelEditor CreateOrModify(Octopus.Client.Model.ProjectResource, String)
    Octopus.Client.Editors.ChannelEditor CreateOrModify(Octopus.Client.Model.ProjectResource, String, String)
    Octopus.Client.Model.ChannelResource FindByName(Octopus.Client.Model.ProjectResource, String)
  }
  interface ICommunityActionTemplateRepository
    Octopus.Client.Repositories.IGet<CommunityActionTemplateResource>
  {
    Octopus.Client.Model.ActionTemplateResource GetInstalledTemplate(Octopus.Client.Model.CommunityActionTemplateResource)
    void Install(Octopus.Client.Model.CommunityActionTemplateResource)
    void UpdateInstallation(Octopus.Client.Model.CommunityActionTemplateResource)
  }
  interface IConfigurationRepository
  {
    Octopus.Client.Repositories.T Get()
    Octopus.Client.Repositories.T Modify(Octopus.Client.Repositories.T)
  }
  interface ICreateProjectScoped`1
  {
    Octopus.Client.Repositories.TResource Create(Octopus.Client.Model.ProjectResource, Octopus.Client.Repositories.TResource, Object)
  }
  interface ICreate`1
  {
    Octopus.Client.Repositories.TResource Create(Octopus.Client.Repositories.TResource, Object)
  }
  interface IDashboardConfigurationRepository
  {
    Octopus.Client.Model.DashboardConfigurationResource GetDashboardConfiguration()
    Octopus.Client.Model.DashboardConfigurationResource ModifyDashboardConfiguration(Octopus.Client.Model.DashboardConfigurationResource)
  }
  interface IDashboardRepository
  {
    Octopus.Client.Model.DashboardResource GetDashboard()
    Octopus.Client.Model.DashboardResource GetDynamicDashboard(String[], String[], Octopus.Client.Model.DashboardItemsOptions)
  }
  interface IDefectsRepository
  {
    Octopus.Client.Model.ResourceCollection<DefectResource> GetDefects(Octopus.Client.Model.ReleaseResource)
    void RaiseDefect(Octopus.Client.Model.ReleaseResource, String)
    void ResolveDefect(Octopus.Client.Model.ReleaseResource)
  }
  interface IDelete`1
  {
    void Delete(Octopus.Client.Repositories.TResource)
  }
  interface IDeploymentProcessRepository
    Octopus.Client.Repositories.IGet<DeploymentProcessResource>
    Octopus.Client.Repositories.IModify<DeploymentProcessResource>
  {
    Octopus.Client.Repositories.IDeploymentProcessRepositoryBeta Beta()
    Octopus.Client.Model.ReleaseTemplateResource GetTemplate(Octopus.Client.Model.DeploymentProcessResource, Octopus.Client.Model.ChannelResource)
  }
  interface IDeploymentProcessRepositoryBeta
  {
    Octopus.Client.Model.DeploymentProcessResource Get(Octopus.Client.Model.ProjectResource, String)
    Octopus.Client.Model.DeploymentProcessResource Modify(Octopus.Client.Model.ProjectResource, Octopus.Client.Model.DeploymentProcessResource, String)
  }
  interface IDeploymentRepository
    Octopus.Client.Repositories.IGet<DeploymentResource>
    Octopus.Client.Repositories.ICreate<DeploymentResource>
    Octopus.Client.Repositories.IPaginate<DeploymentResource>
    Octopus.Client.Repositories.IDelete<DeploymentResource>
  {
    Octopus.Client.Model.ResourceCollection<DeploymentResource> FindAll(String[], String[], Int32, Nullable<Int32>)
    Octopus.Client.Model.ResourceCollection<DeploymentResource> FindBy(String[], String[], Int32, Nullable<Int32>)
    Octopus.Client.Model.TaskResource GetTask(Octopus.Client.Model.DeploymentResource)
    void Paginate(String[], String[], Func<ResourceCollection<DeploymentResource>, Boolean>)
    void Paginate(String[], String[], String[], Func<ResourceCollection<DeploymentResource>, Boolean>)
  }
  interface IDeploymentSettingsBetaRepository
  {
    Octopus.Client.Model.DeploymentSettingsResource Get(Octopus.Client.Model.ProjectResource, String)
    Octopus.Client.Model.DeploymentSettingsResource Modify(Octopus.Client.Model.ProjectResource, Octopus.Client.Model.DeploymentSettingsResource, String)
  }
  interface IDeploymentSettingsRepository
  {
    Octopus.Client.Repositories.IDeploymentSettingsBetaRepository Beta()
    Octopus.Client.Model.DeploymentSettingsResource Get(Octopus.Client.Model.ProjectResource)
    Octopus.Client.Model.DeploymentSettingsResource Modify(Octopus.Client.Model.ProjectResource, Octopus.Client.Model.DeploymentSettingsResource)
  }
  interface IEnvironmentRepository
    Octopus.Client.Repositories.IFindByName<EnvironmentResource>
    Octopus.Client.Repositories.IPaginate<EnvironmentResource>
    Octopus.Client.Repositories.IGet<EnvironmentResource>
    Octopus.Client.Repositories.ICreate<EnvironmentResource>
    Octopus.Client.Repositories.IModify<EnvironmentResource>
    Octopus.Client.Repositories.IDelete<EnvironmentResource>
    Octopus.Client.Repositories.IGetAll<EnvironmentResource>
  {
    Octopus.Client.Editors.EnvironmentEditor CreateOrModify(String)
    Octopus.Client.Editors.EnvironmentEditor CreateOrModify(String, String)
    Octopus.Client.Editors.EnvironmentEditor CreateOrModify(String, String, Boolean)
    List<MachineResource> GetMachines(Octopus.Client.Model.EnvironmentResource, Nullable<Int32>, Nullable<Int32>, String, String, Nullable<Boolean>, String, String, String, String)
    void Sort(String[])
    Octopus.Client.Model.EnvironmentsSummaryResource Summary(String, String, String, String, Nullable<Boolean>, String, String, String, String, Nullable<Boolean>)
  }
  interface IEventRepository
    Octopus.Client.Repositories.IGet<EventResource>
    Octopus.Client.Repositories.ICanExtendSpaceContext<IEventRepository>
  {
    IReadOnlyList<EventAgentResource> GetAgents()
    IReadOnlyList<EventCategoryResource> GetCategories()
    IReadOnlyList<DocumentTypeResource> GetDocumentTypes()
    IReadOnlyList<EventGroupResource> GetGroups()
    Octopus.Client.Model.ResourceCollection<EventResource> List(Int32, String, String, Boolean)
    Octopus.Client.Model.ResourceCollection<EventResource> List(Int32, Nullable<Int32>, String, String, String, String, Boolean, String, String, String, String, String, String, String, String, Nullable<Int64>, Nullable<Int64>, String, String, String)
  }
  interface IFeaturesConfigurationRepository
  {
    Octopus.Client.Model.FeaturesConfigurationResource GetFeaturesConfiguration()
    Octopus.Client.Model.FeaturesConfigurationResource ModifyFeaturesConfiguration(Octopus.Client.Model.FeaturesConfigurationResource)
  }
  interface IFeedRepository
    Octopus.Client.Repositories.ICreate<FeedResource>
    Octopus.Client.Repositories.IModify<FeedResource>
    Octopus.Client.Repositories.IDelete<FeedResource>
    Octopus.Client.Repositories.IGet<FeedResource>
    Octopus.Client.Repositories.IFindByName<FeedResource>
    Octopus.Client.Repositories.IPaginate<FeedResource>
  {
    List<PackageResource> GetVersions(Octopus.Client.Model.FeedResource, String[])
  }
  interface IFindByName`1
    Octopus.Client.Repositories.IPaginate<TResource>
  {
    Octopus.Client.Repositories.TResource FindByName(String, String, Object)
    List<TResource> FindByNames(IEnumerable<String>, String, Object)
  }
  interface IGetAll`1
  {
    List<TResource> GetAll()
  }
  interface IGetProjectScoped`1
  {
    Octopus.Client.Repositories.TResource Get(Octopus.Client.Model.ProjectResource, String)
  }
  interface IGet`1
  {
    Octopus.Client.Repositories.TResource Get(String)
    List<TResource> Get(String[])
    Octopus.Client.Repositories.TResource Refresh(Octopus.Client.Repositories.TResource)
  }
  interface IInterruptionRepository
    Octopus.Client.Repositories.IGet<InterruptionResource>
  {
    Octopus.Client.Model.UserResource GetResponsibleUser(Octopus.Client.Model.InterruptionResource)
    Octopus.Client.Model.ResourceCollection<InterruptionResource> List(Int32, Nullable<Int32>, Boolean, String)
    void Submit(Octopus.Client.Model.InterruptionResource)
    void TakeResponsibility(Octopus.Client.Model.InterruptionResource)
  }
  interface ILibraryVariableSetRepository
    Octopus.Client.Repositories.IResourceRepository
    Octopus.Client.Repositories.ICreate<LibraryVariableSetResource>
    Octopus.Client.Repositories.IGet<LibraryVariableSetResource>
    Octopus.Client.Repositories.IModify<LibraryVariableSetResource>
    Octopus.Client.Repositories.IDelete<LibraryVariableSetResource>
    Octopus.Client.Repositories.IFindByName<LibraryVariableSetResource>
    Octopus.Client.Repositories.IPaginate<LibraryVariableSetResource>
  {
    Octopus.Client.Editors.LibraryVariableSetEditor CreateOrModify(String)
    Octopus.Client.Editors.LibraryVariableSetEditor CreateOrModify(String, String)
  }
  interface ILicensesRepository
  {
    Octopus.Client.Model.LicenseResource GetCurrent()
    Octopus.Client.Model.LicenseStatusResource GetStatus()
    Octopus.Client.Model.LicenseResource UpdateCurrent(Octopus.Client.Model.LicenseResource)
  }
  interface ILifecyclesRepository
    Octopus.Client.Repositories.IGet<LifecycleResource>
    Octopus.Client.Repositories.ICreate<LifecycleResource>
    Octopus.Client.Repositories.IModify<LifecycleResource>
    Octopus.Client.Repositories.IDelete<LifecycleResource>
    Octopus.Client.Repositories.IFindByName<LifecycleResource>
    Octopus.Client.Repositories.IPaginate<LifecycleResource>
  {
    Octopus.Client.Editors.LifecycleEditor CreateOrModify(String)
    Octopus.Client.Editors.LifecycleEditor CreateOrModify(String, String)
  }
  interface IMachinePolicyRepository
    Octopus.Client.Repositories.IFindByName<MachinePolicyResource>
    Octopus.Client.Repositories.IPaginate<MachinePolicyResource>
    Octopus.Client.Repositories.ICreate<MachinePolicyResource>
    Octopus.Client.Repositories.IModify<MachinePolicyResource>
    Octopus.Client.Repositories.IGet<MachinePolicyResource>
    Octopus.Client.Repositories.IDelete<MachinePolicyResource>
  {
    List<MachineResource> GetMachines(Octopus.Client.Model.MachinePolicyResource)
    Octopus.Client.Model.MachinePolicyResource GetTemplate()
  }
  interface IMachineRepository
    Octopus.Client.Repositories.IFindByName<MachineResource>
    Octopus.Client.Repositories.IPaginate<MachineResource>
    Octopus.Client.Repositories.IGet<MachineResource>
    Octopus.Client.Repositories.ICreate<MachineResource>
    Octopus.Client.Repositories.IModify<MachineResource>
    Octopus.Client.Repositories.IDelete<MachineResource>
  {
    Octopus.Client.Editors.MachineEditor CreateOrModify(String, Octopus.Client.Model.Endpoints.EndpointResource, Octopus.Client.Model.EnvironmentResource[], String[], Octopus.Client.Model.TenantResource[], Octopus.Client.Model.TagResource[], Nullable<TenantedDeploymentMode>)
    Octopus.Client.Editors.MachineEditor CreateOrModify(String, Octopus.Client.Model.Endpoints.EndpointResource, Octopus.Client.Model.EnvironmentResource[], String[])
    Octopus.Client.Model.MachineResource Discover(String, Int32, Nullable<DiscoverableEndpointType>)
    Octopus.Client.Model.MachineResource Discover(Octopus.Client.Model.DiscoverMachineOptions)
    List<MachineResource> FindByThumbprint(String)
    Octopus.Client.Model.MachineConnectionStatus GetConnectionStatus(Octopus.Client.Model.MachineResource)
    IReadOnlyList<TaskResource> GetTasks(Octopus.Client.Model.MachineResource)
    IReadOnlyList<TaskResource> GetTasks(Octopus.Client.Model.MachineResource, Object)
    Octopus.Client.Model.ResourceCollection<MachineResource> List(Int32, Nullable<Int32>, String, String, String, String, Nullable<Boolean>, String, String, String, String, String)
  }
  interface IMachineRoleRepository
  {
    List<String> GetAllRoleNames()
  }
  interface IMigrationRepository
  {
    Octopus.Client.Model.Migrations.MigrationImportResource Import(Octopus.Client.Model.Migrations.MigrationImportResource)
    Octopus.Client.Model.Migrations.MigrationPartialExportResource PartialExport(Octopus.Client.Model.Migrations.MigrationPartialExportResource)
  }
  interface IModify`1
  {
    Octopus.Client.Repositories.TResource Modify(Octopus.Client.Repositories.TResource)
  }
  interface IOctopusServerNodeRepository
    Octopus.Client.Repositories.IModify<OctopusServerNodeResource>
    Octopus.Client.Repositories.IDelete<OctopusServerNodeResource>
    Octopus.Client.Repositories.IGet<OctopusServerNodeResource>
    Octopus.Client.Repositories.IFindByName<OctopusServerNodeResource>
    Octopus.Client.Repositories.IPaginate<OctopusServerNodeResource>
  {
    Octopus.Client.Model.OctopusServerNodeDetailsResource Details(Octopus.Client.Model.OctopusServerNodeResource)
    Octopus.Client.Model.OctopusServerClusterSummaryResource Summary()
  }
  interface IOctopusSpaceBetaRepository
  {
    Octopus.Client.Repositories.IBranchScopedRepository ForBranch(Octopus.Client.Model.VersionControlBranchResource)
  }
  interface IPackageMetadataRepository
  {
    Octopus.Client.Model.PackageMetadata.OctopusPackageMetadataMappedResource Get(String)
    Octopus.Client.Model.PackageMetadata.OctopusPackageMetadataMappedResource Push(String, String, Octopus.Client.Model.PackageMetadata.OctopusPackageMetadata, Octopus.Client.Model.OverwriteMode)
    Octopus.Client.Model.PackageMetadata.OctopusPackageMetadataMappedResource Push(String, String, Octopus.Client.Model.PackageMetadata.OctopusPackageMetadata)
  }
  interface IPaginate`1
  {
    List<TResource> FindAll(String, Object)
    List<TResource> FindMany(Func<TResource, Boolean>, String, Object)
    Octopus.Client.Repositories.TResource FindOne(Func<TResource, Boolean>, String, Object)
    void Paginate(Func<ResourceCollection<TResource>, Boolean>, String, Object)
  }
  interface IPerformanceConfigurationRepository
  {
    Octopus.Client.Model.PerformanceConfigurationResource Get()
    Octopus.Client.Model.PerformanceConfigurationResource Modify(Octopus.Client.Model.PerformanceConfigurationResource)
  }
  interface IProjectBetaRepository
  {
    Octopus.Client.Model.VersionControl.ConvertProjectToVersionControlledResponse ConvertToVersionControlled(Octopus.Client.Model.ProjectResource, Octopus.Client.Model.VersionControlSettingsResource, String)
    IReadOnlyList<ChannelResource> GetAllChannels(Octopus.Client.Model.ProjectResource, String)
    IReadOnlyList<RunbookResource> GetAllRunbooks(Octopus.Client.Model.ProjectResource, String)
    Octopus.Client.Model.ChannelResource GetChannel(Octopus.Client.Model.ProjectResource, String, String)
    Octopus.Client.Model.ResourceCollection<ChannelResource> GetChannels(Octopus.Client.Model.ProjectResource, String)
    Octopus.Client.Model.VersionControlBranchResource GetVersionControlledBranch(Octopus.Client.Model.ProjectResource, String)
    Octopus.Client.Model.ResourceCollection<VersionControlBranchResource> GetVersionControlledBranches(Octopus.Client.Model.ProjectResource)
  }
  interface IProjectGroupRepository
    Octopus.Client.Repositories.IFindByName<ProjectGroupResource>
    Octopus.Client.Repositories.IPaginate<ProjectGroupResource>
    Octopus.Client.Repositories.IGet<ProjectGroupResource>
    Octopus.Client.Repositories.ICreate<ProjectGroupResource>
    Octopus.Client.Repositories.IModify<ProjectGroupResource>
    Octopus.Client.Repositories.IDelete<ProjectGroupResource>
    Octopus.Client.Repositories.IGetAll<ProjectGroupResource>
  {
    Octopus.Client.Editors.ProjectGroupEditor CreateOrModify(String)
    Octopus.Client.Editors.ProjectGroupEditor CreateOrModify(String, String)
    List<ProjectResource> GetProjects(Octopus.Client.Model.ProjectGroupResource)
  }
  interface IProjectRepository
    Octopus.Client.Repositories.IFindByName<ProjectResource>
    Octopus.Client.Repositories.IPaginate<ProjectResource>
    Octopus.Client.Repositories.IGet<ProjectResource>
    Octopus.Client.Repositories.ICreate<ProjectResource>
    Octopus.Client.Repositories.IModify<ProjectResource>
    Octopus.Client.Repositories.IDelete<ProjectResource>
    Octopus.Client.Repositories.IGetAll<ProjectResource>
  {
    Octopus.Client.Repositories.IProjectBetaRepository Beta()
    Octopus.Client.Editors.ProjectEditor CreateOrModify(String, Octopus.Client.Model.ProjectGroupResource, Octopus.Client.Model.LifecycleResource)
    Octopus.Client.Editors.ProjectEditor CreateOrModify(String, Octopus.Client.Model.ProjectGroupResource, Octopus.Client.Model.LifecycleResource, String, String)
    IReadOnlyList<ChannelResource> GetAllChannels(Octopus.Client.Model.ProjectResource)
    IReadOnlyList<ReleaseResource> GetAllReleases(Octopus.Client.Model.ProjectResource)
    IReadOnlyList<RunbookResource> GetAllRunbooks(Octopus.Client.Model.ProjectResource)
    IReadOnlyList<RunbookSnapshotResource> GetAllRunbookSnapshots(Octopus.Client.Model.ProjectResource)
    IReadOnlyList<ProjectTriggerResource> GetAllTriggers(Octopus.Client.Model.ProjectResource)
    Octopus.Client.Model.ResourceCollection<ChannelResource> GetChannels(Octopus.Client.Model.ProjectResource)
    Octopus.Client.Model.ProgressionResource GetProgression(Octopus.Client.Model.ProjectResource)
    Octopus.Client.Model.ReleaseResource GetReleaseByVersion(Octopus.Client.Model.ProjectResource, String)
    Octopus.Client.Model.ResourceCollection<ReleaseResource> GetReleases(Octopus.Client.Model.ProjectResource, Int32, Nullable<Int32>, String)
    Octopus.Client.Model.ResourceCollection<RunbookResource> GetRunbooks(Octopus.Client.Model.ProjectResource, Int32, Nullable<Int32>, String)
    Octopus.Client.Model.RunbookSnapshotResource GetRunbookSnapshotByName(Octopus.Client.Model.ProjectResource, String)
    Octopus.Client.Model.ResourceCollection<RunbookSnapshotResource> GetRunbookSnapshots(Octopus.Client.Model.ProjectResource, Int32, Nullable<Int32>, String)
    Octopus.Client.Model.ResourceCollection<ProjectTriggerResource> GetTriggers(Octopus.Client.Model.ProjectResource)
    void SetLogo(Octopus.Client.Model.ProjectResource, String, Stream)
  }
  interface IProjectTriggerRepository
    Octopus.Client.Repositories.ICreate<ProjectTriggerResource>
    Octopus.Client.Repositories.IModify<ProjectTriggerResource>
    Octopus.Client.Repositories.IGet<ProjectTriggerResource>
    Octopus.Client.Repositories.IDelete<ProjectTriggerResource>
  {
    Octopus.Client.Editors.ProjectTriggerEditor CreateOrModify(Octopus.Client.Model.ProjectResource, String, Octopus.Client.Model.Triggers.TriggerFilterResource, Octopus.Client.Model.Triggers.TriggerActionResource)
    Octopus.Client.Model.ProjectTriggerResource FindByName(Octopus.Client.Model.ProjectResource, String)
    Octopus.Client.Model.ResourceCollection<ProjectTriggerResource> FindByRunbook(String[])
  }
  interface IProxyRepository
    Octopus.Client.Repositories.IGet<ProxyResource>
    Octopus.Client.Repositories.ICreate<ProxyResource>
    Octopus.Client.Repositories.IModify<ProxyResource>
    Octopus.Client.Repositories.IDelete<ProxyResource>
    Octopus.Client.Repositories.IFindByName<ProxyResource>
    Octopus.Client.Repositories.IPaginate<ProxyResource>
  {
  }
  interface IReleaseRepository
    Octopus.Client.Repositories.IGet<ReleaseResource>
    Octopus.Client.Repositories.ICreate<ReleaseResource>
    Octopus.Client.Repositories.IPaginate<ReleaseResource>
    Octopus.Client.Repositories.IModify<ReleaseResource>
    Octopus.Client.Repositories.IDelete<ReleaseResource>
  {
    Octopus.Client.Model.ReleaseResource Create(Octopus.Client.Model.ReleaseResource, Boolean)
    Octopus.Client.Model.ResourceCollection<ArtifactResource> GetArtifacts(Octopus.Client.Model.ReleaseResource, Int32, Nullable<Int32>)
    Octopus.Client.Model.ResourceCollection<DeploymentResource> GetDeployments(Octopus.Client.Model.ReleaseResource, Int32, Nullable<Int32>)
    Octopus.Client.Model.DeploymentPreviewResource GetPreview(Octopus.Client.Model.DeploymentPromotionTarget)
    Octopus.Client.Model.LifecycleProgressionResource GetProgression(Octopus.Client.Model.ReleaseResource)
    Octopus.Client.Model.DeploymentTemplateResource GetTemplate(Octopus.Client.Model.ReleaseResource)
    Octopus.Client.Model.ReleaseResource SnapshotVariables(Octopus.Client.Model.ReleaseResource)
  }
  interface IResourceRepository
  {
    Octopus.Client.IOctopusClient Client { get; }
  }
  interface IRetentionPolicyRepository
  {
    Octopus.Client.Model.TaskResource ApplyNow(String)
  }
  interface IRunbookProcessRepository
    Octopus.Client.Repositories.IGet<RunbookProcessResource>
    Octopus.Client.Repositories.IModify<RunbookProcessResource>
  {
    Octopus.Client.Model.RunbookSnapshotTemplateResource GetTemplate(Octopus.Client.Model.RunbookProcessResource)
  }
  interface IRunbookRepository
    Octopus.Client.Repositories.IFindByName<RunbookResource>
    Octopus.Client.Repositories.IPaginate<RunbookResource>
    Octopus.Client.Repositories.IGet<RunbookResource>
    Octopus.Client.Repositories.ICreate<RunbookResource>
    Octopus.Client.Repositories.IModify<RunbookResource>
    Octopus.Client.Repositories.IDelete<RunbookResource>
  {
    Octopus.Client.Editors.RunbookEditor CreateOrModify(Octopus.Client.Model.ProjectResource, String, String)
    Octopus.Client.Model.RunbookResource FindByName(Octopus.Client.Model.ProjectResource, String)
    Octopus.Client.Model.RunbookRunPreviewResource GetPreview(Octopus.Client.Model.DeploymentPromotionTarget)
    Octopus.Client.Model.RunbookRunTemplateResource GetRunbookRunTemplate(Octopus.Client.Model.RunbookResource)
    Octopus.Client.Model.RunbookSnapshotTemplateResource GetRunbookSnapshotTemplate(Octopus.Client.Model.RunbookResource)
    Octopus.Client.Model.RunbookRunResource Run(Octopus.Client.Model.RunbookResource, Octopus.Client.Model.RunbookRunResource)
    Octopus.Client.Model.RunbookRunResource[] Run(Octopus.Client.Model.RunbookResource, Octopus.Client.Model.RunbookRunParameters)
  }
  interface IRunbookRunRepository
    Octopus.Client.Repositories.IGet<RunbookRunResource>
    Octopus.Client.Repositories.ICreate<RunbookRunResource>
    Octopus.Client.Repositories.IPaginate<RunbookRunResource>
    Octopus.Client.Repositories.IDelete<RunbookRunResource>
  {
    Octopus.Client.Model.ResourceCollection<RunbookRunResource> FindBy(String[], String[], String[], Int32, Nullable<Int32>)
    Octopus.Client.Model.TaskResource GetTask(Octopus.Client.Model.RunbookRunResource)
    void Paginate(String[], String[], String[], Func<ResourceCollection<RunbookRunResource>, Boolean>)
    void Paginate(String[], String[], String[], String[], Func<ResourceCollection<RunbookRunResource>, Boolean>)
  }
  interface IRunbookSnapshotRepository
    Octopus.Client.Repositories.IGet<RunbookSnapshotResource>
    Octopus.Client.Repositories.ICreate<RunbookSnapshotResource>
    Octopus.Client.Repositories.IPaginate<RunbookSnapshotResource>
    Octopus.Client.Repositories.IModify<RunbookSnapshotResource>
    Octopus.Client.Repositories.IDelete<RunbookSnapshotResource>
  {
    Octopus.Client.Model.RunbookSnapshotResource Create(Octopus.Client.Model.RunbookSnapshotResource)
    Octopus.Client.Model.ResourceCollection<ArtifactResource> GetArtifacts(Octopus.Client.Model.RunbookSnapshotResource, Int32, Nullable<Int32>)
    Octopus.Client.Model.RunbookRunPreviewResource GetPreview(Octopus.Client.Model.DeploymentPromotionTarget)
    Octopus.Client.Model.ResourceCollection<RunbookRunResource> GetRunbookRuns(Octopus.Client.Model.RunbookSnapshotResource, Int32, Nullable<Int32>)
    Octopus.Client.Model.RunbookRunTemplateResource GetTemplate(Octopus.Client.Model.RunbookSnapshotResource)
    Octopus.Client.Model.RunbookSnapshotResource SnapshotVariables(Octopus.Client.Model.RunbookSnapshotResource)
  }
  interface ISchedulerRepository
  {
    Octopus.Client.Model.ScheduledTaskDetailsResource GetLogs(String)
    Stream GetRawLogs(String)
    void Start()
    void Start(String)
    Octopus.Client.Model.SchedulerStatusResource Status()
    void Stop()
    void Stop(String)
    void Trigger(String)
  }
  interface IScopedUserRoleRepository
    Octopus.Client.Repositories.ICreate<ScopedUserRoleResource>
    Octopus.Client.Repositories.IModify<ScopedUserRoleResource>
    Octopus.Client.Repositories.IDelete<ScopedUserRoleResource>
    Octopus.Client.Repositories.IGet<ScopedUserRoleResource>
    Octopus.Client.Repositories.ICanExtendSpaceContext<IScopedUserRoleRepository>
  {
  }
  interface IServerStatusRepository
  {
    Octopus.Client.Model.ServerStatusHealthResource GetServerHealth()
    Octopus.Client.Model.ServerStatusResource GetServerStatus()
    Octopus.Client.Model.SystemInfoResource GetSystemInfo(Octopus.Client.Model.ServerStatusResource)
  }
  interface ISpaceRepository
    Octopus.Client.Repositories.ICreate<SpaceResource>
    Octopus.Client.Repositories.IModify<SpaceResource>
    Octopus.Client.Repositories.IDelete<SpaceResource>
    Octopus.Client.Repositories.IFindByName<SpaceResource>
    Octopus.Client.Repositories.IPaginate<SpaceResource>
    Octopus.Client.Repositories.IGet<SpaceResource>
  {
    Octopus.Client.Model.SpaceSearchResult[] Search(String, String)
    void SetLogo(Octopus.Client.Model.SpaceResource, String, Stream)
  }
  interface ISubscriptionRepository
    Octopus.Client.Repositories.IFindByName<SubscriptionResource>
    Octopus.Client.Repositories.IPaginate<SubscriptionResource>
    Octopus.Client.Repositories.ICreate<SubscriptionResource>
    Octopus.Client.Repositories.IModify<SubscriptionResource>
    Octopus.Client.Repositories.IGet<SubscriptionResource>
    Octopus.Client.Repositories.IDelete<SubscriptionResource>
  {
    Octopus.Client.Editors.SubscriptionEditor CreateOrModify(String, Octopus.Client.Model.EventNotificationSubscription, Boolean)
  }
  interface ITagSetRepository
    Octopus.Client.Repositories.ICreate<TagSetResource>
    Octopus.Client.Repositories.IModify<TagSetResource>
    Octopus.Client.Repositories.IGet<TagSetResource>
    Octopus.Client.Repositories.IDelete<TagSetResource>
    Octopus.Client.Repositories.IFindByName<TagSetResource>
    Octopus.Client.Repositories.IPaginate<TagSetResource>
    Octopus.Client.Repositories.IGetAll<TagSetResource>
  {
    Octopus.Client.Editors.TagSetEditor CreateOrModify(String)
    Octopus.Client.Editors.TagSetEditor CreateOrModify(String, String)
    void Sort(String[])
  }
  interface ITaskRepository
    Octopus.Client.Repositories.IPaginate<TaskResource>
    Octopus.Client.Repositories.IGet<TaskResource>
    Octopus.Client.Repositories.ICreate<TaskResource>
    Octopus.Client.Repositories.ICanExtendSpaceContext<ITaskRepository>
  {
    void Cancel(Octopus.Client.Model.TaskResource)
    Octopus.Client.Model.TaskResource ExecuteActionTemplate(Octopus.Client.Model.ActionTemplateResource, Dictionary<String, PropertyValueResource>, String[], String[], String[], String, Nullable<TargetType>)
    Octopus.Client.Model.TaskResource ExecuteAdHocScript(String, String[], String[], String[], String, String, Nullable<TargetType>)
    Octopus.Client.Model.TaskResource ExecuteBackup(String)
    Octopus.Client.Model.TaskResource ExecuteCalamariUpdate(String, String[])
    Octopus.Client.Model.TaskResource ExecuteCommunityActionTemplatesSynchronisation(String)
    Octopus.Client.Model.TaskResource ExecuteHealthCheck(String, Int32, Int32, String, String[], String, String, String[])
    Octopus.Client.Model.TaskResource ExecuteTentacleUpgrade(String, String, String[], String, String, String[])
    Octopus.Client.Model.TaskResourceCollection GetActiveWithSummary(Int32, Int32)
    List<TaskResource> GetAllActive(Int32)
    Octopus.Client.Model.TaskResourceCollection GetAllWithSummary(Int32, Int32)
    Octopus.Client.Model.TaskDetailsResource GetDetails(Octopus.Client.Model.TaskResource, Nullable<Boolean>, Nullable<Int32>)
    IReadOnlyList<TaskResource> GetQueuedBehindTasks(Octopus.Client.Model.TaskResource)
    String GetRawOutputLog(Octopus.Client.Model.TaskResource)
    Octopus.Client.Model.TaskTypeResource[] GetTaskTypes()
    void ModifyState(Octopus.Client.Model.TaskResource, Octopus.Client.Model.TaskState, String)
    void Rerun(Octopus.Client.Model.TaskResource)
    void WaitForCompletion(Octopus.Client.Model.TaskResource, Int32, Int32, Action<TaskResource[]>)
    void WaitForCompletion(Octopus.Client.Model.TaskResource[], Int32, Int32, Action<TaskResource[]>)
    void WaitForCompletion(Octopus.Client.Model.TaskResource[], Int32, Nullable<TimeSpan>, Action<TaskResource[]>)
  }
  interface ITeamsRepository
    Octopus.Client.Repositories.ICreate<TeamResource>
    Octopus.Client.Repositories.IModify<TeamResource>
    Octopus.Client.Repositories.IDelete<TeamResource>
    Octopus.Client.Repositories.IFindByName<TeamResource>
    Octopus.Client.Repositories.IPaginate<TeamResource>
    Octopus.Client.Repositories.IGet<TeamResource>
    Octopus.Client.Repositories.ICanExtendSpaceContext<ITeamsRepository>
  {
    List<ScopedUserRoleResource> GetScopedUserRoles(Octopus.Client.Model.TeamResource)
  }
  interface ITenantRepository
    Octopus.Client.Repositories.ICreate<TenantResource>
    Octopus.Client.Repositories.IModify<TenantResource>
    Octopus.Client.Repositories.IGet<TenantResource>
    Octopus.Client.Repositories.IDelete<TenantResource>
    Octopus.Client.Repositories.IFindByName<TenantResource>
    Octopus.Client.Repositories.IPaginate<TenantResource>
    Octopus.Client.Repositories.IGetAll<TenantResource>
  {
    Octopus.Client.Editors.TenantEditor CreateOrModify(String)
    Octopus.Client.Editors.TenantEditor CreateOrModify(String, String)
    Octopus.Client.Editors.TenantEditor CreateOrModify(String, String, String)
    List<TenantResource> FindAll(String, String[], Int32)
    List<TenantsMissingVariablesResource> GetMissingVariables(String, String, String)
    Octopus.Client.Model.TenantVariableResource GetVariables(Octopus.Client.Model.TenantResource)
    Octopus.Client.Model.TenantVariableResource ModifyVariables(Octopus.Client.Model.TenantResource, Octopus.Client.Model.TenantVariableResource)
    void SetLogo(Octopus.Client.Model.TenantResource, String, Stream)
    Octopus.Client.Model.MultiTenancyStatusResource Status()
  }
  interface ITenantVariablesRepository
    Octopus.Client.Repositories.IGetAll<TenantVariableResource>
  {
    List<TenantVariableResource> GetAll(Octopus.Client.Model.ProjectResource)
  }
  interface IUpgradeConfigurationRepository
    Octopus.Client.Repositories.IGet<UpgradeConfigurationResource>
    Octopus.Client.Repositories.IModify<UpgradeConfigurationResource>
  {
    Octopus.Client.Model.UpgradeConfigurationResource Get()
  }
  interface IUserInvitesRepository
  {
    Octopus.Client.Model.InvitationResource Invite(String)
    Octopus.Client.Model.InvitationResource Invite(Octopus.Client.Model.ReferenceCollection)
  }
  interface IUserPermissionsRepository
    Octopus.Client.Repositories.ICanExtendSpaceContext<IUserPermissionsRepository>
  {
    Stream Export(Octopus.Client.Model.UserPermissionSetResource)
    Octopus.Client.Model.UserPermissionSetResource Get(Octopus.Client.Model.UserResource)
    Octopus.Client.Model.UserPermissionSetResource GetConfiguration(Octopus.Client.Model.UserResource)
  }
  interface IUserRepository
    Octopus.Client.Repositories.IPaginate<UserResource>
    Octopus.Client.Repositories.IGet<UserResource>
    Octopus.Client.Repositories.IModify<UserResource>
    Octopus.Client.Repositories.IDelete<UserResource>
    Octopus.Client.Repositories.ICreate<UserResource>
  {
    Octopus.Client.Model.UserResource Create(String, String, String, String)
    Octopus.Client.Model.ApiKeyCreatedResource CreateApiKey(Octopus.Client.Model.UserResource, String, Nullable<DateTimeOffset>)
    Octopus.Client.Model.UserResource CreateServiceAccount(String, String)
    Octopus.Client.Model.UserResource FindByUsername(String)
    List<ApiKeyResource> GetApiKeys(Octopus.Client.Model.UserResource)
    Octopus.Client.Model.UserResource GetCurrent()
    Octopus.Client.Model.SpaceResource[] GetSpaces(Octopus.Client.Model.UserResource)
    Octopus.Client.Model.InvitationResource Invite(String)
    Octopus.Client.Model.InvitationResource Invite(Octopus.Client.Model.ReferenceCollection)
    Octopus.Client.Model.UserResource Register(Octopus.Client.Model.RegisterCommand)
    void RevokeApiKey(Octopus.Client.Model.ApiKeyResourceBase)
    void SignIn(Octopus.Client.Model.LoginCommand)
    void SignIn(String, String, Boolean)
    void SignOut()
  }
  interface IUserRolesRepository
    Octopus.Client.Repositories.IFindByName<UserRoleResource>
    Octopus.Client.Repositories.IPaginate<UserRoleResource>
    Octopus.Client.Repositories.IGet<UserRoleResource>
    Octopus.Client.Repositories.ICreate<UserRoleResource>
    Octopus.Client.Repositories.IModify<UserRoleResource>
    Octopus.Client.Repositories.IDelete<UserRoleResource>
  {
  }
  interface IUserTeamsRepository
    Octopus.Client.Repositories.ICanExtendSpaceContext<IUserTeamsRepository>
  {
    Octopus.Client.Model.TeamNameResource[] Get(Octopus.Client.Model.UserResource)
  }
  interface IVariableSetRepository
    Octopus.Client.Repositories.IGet<VariableSetResource>
    Octopus.Client.Repositories.IModify<VariableSetResource>
    Octopus.Client.Repositories.IGetAll<VariableSetResource>
  {
    String[] GetVariableNames(String, String[])
    Octopus.Client.Model.VariableSetResource GetVariablePreview(String, String, String, String, String, String, String, String)
  }
  interface IVcsRunbookRepository
  {
    Octopus.Client.Model.VcsRunbookResource Create(Octopus.Client.Model.VcsRunbookResource, String)
    void Delete(Octopus.Client.Model.VcsRunbookResource, String)
    Octopus.Client.Model.VcsRunbookResource Get(String)
    Octopus.Client.Model.ResourceCollection<VcsRunbookResource> List(String, Int32, Nullable<Int32>)
    Octopus.Client.Model.VcsRunbookResource Modify(Octopus.Client.Model.VcsRunbookResource, String)
  }
  interface IWorkerPoolRepository
    Octopus.Client.Repositories.IFindByName<WorkerPoolResource>
    Octopus.Client.Repositories.IPaginate<WorkerPoolResource>
    Octopus.Client.Repositories.IGet<WorkerPoolResource>
    Octopus.Client.Repositories.ICreate<WorkerPoolResource>
    Octopus.Client.Repositories.IModify<WorkerPoolResource>
    Octopus.Client.Repositories.IDelete<WorkerPoolResource>
    Octopus.Client.Repositories.IGetAll<WorkerPoolResource>
  {
    Octopus.Client.Editors.WorkerPoolEditor CreateOrModify(String)
    Octopus.Client.Editors.WorkerPoolEditor CreateOrModify(String, String)
    List<WorkerResource> GetMachines(Octopus.Client.Model.WorkerPoolResource, Nullable<Int32>, Nullable<Int32>, String, Nullable<Boolean>, String, String)
    void Sort(String[])
    Octopus.Client.Model.WorkerPoolsSummaryResource Summary(String, String, String, Nullable<Boolean>, String, String, Nullable<Boolean>)
  }
  interface IWorkerRepository
    Octopus.Client.Repositories.IFindByName<WorkerResource>
    Octopus.Client.Repositories.IPaginate<WorkerResource>
    Octopus.Client.Repositories.IGet<WorkerResource>
    Octopus.Client.Repositories.ICreate<WorkerResource>
    Octopus.Client.Repositories.IModify<WorkerResource>
    Octopus.Client.Repositories.IDelete<WorkerResource>
  {
    Octopus.Client.Editors.WorkerEditor CreateOrModify(String, Octopus.Client.Model.Endpoints.EndpointResource, Octopus.Client.Model.WorkerPoolResource[])
    Octopus.Client.Model.WorkerResource Discover(String, Int32, Nullable<DiscoverableEndpointType>)
    List<WorkerResource> FindByThumbprint(String)
    Octopus.Client.Model.MachineConnectionStatus GetConnectionStatus(Octopus.Client.Model.WorkerResource)
    Octopus.Client.Model.ResourceCollection<WorkerResource> List(Int32, Nullable<Int32>, String, String, String, Nullable<Boolean>, String, String, String)
  }
  class OctopusSpaceBetaRepository
    Octopus.Client.Repositories.IOctopusSpaceBetaRepository
  {
    .ctor(Octopus.Client.IOctopusRepository)
    Octopus.Client.Repositories.IBranchScopedRepository ForBranch(Octopus.Client.Model.VersionControlBranchResource)
  }
  class PackageMetadataRepository
    Octopus.Client.Repositories.IPackageMetadataRepository
  {
    .ctor(Octopus.Client.IOctopusRepository)
    Octopus.Client.Model.PackageMetadata.OctopusPackageMetadataMappedResource Get(String)
    Octopus.Client.Model.PackageMetadata.OctopusPackageMetadataMappedResource Push(String, String, Octopus.Client.Model.PackageMetadata.OctopusPackageMetadata)
    Octopus.Client.Model.PackageMetadata.OctopusPackageMetadataMappedResource Push(String, String, Octopus.Client.Model.PackageMetadata.OctopusPackageMetadata, Octopus.Client.Model.OverwriteMode)
  }
  class PerformanceConfigurationRepository
    Octopus.Client.Repositories.IPerformanceConfigurationRepository
  {
    .ctor(Octopus.Client.IOctopusRepository)
    Octopus.Client.Model.PerformanceConfigurationResource Get()
    Octopus.Client.Model.PerformanceConfigurationResource Modify(Octopus.Client.Model.PerformanceConfigurationResource)
  }
  class VcsRunbookRepository
    Octopus.Client.Repositories.IVcsRunbookRepository
  {
    .ctor(Octopus.Client.IOctopusRepository, Octopus.Client.Model.VersionControlBranchResource)
    Octopus.Client.Model.VcsRunbookResource Create(Octopus.Client.Model.VcsRunbookResource, String)
    void Delete(Octopus.Client.Model.VcsRunbookResource, String)
    Octopus.Client.Model.VcsRunbookResource Get(String)
    Octopus.Client.Model.ResourceCollection<VcsRunbookResource> List(String, Int32, Nullable<Int32>)
    Octopus.Client.Model.VcsRunbookResource Modify(Octopus.Client.Model.VcsRunbookResource, String)
  }
}
Octopus.Client.Repositories.Async
{
  class BranchScopedRepository
    Octopus.Client.Repositories.Async.IBranchScopedRepository
  {
    .ctor(Octopus.Client.IOctopusAsyncRepository, Octopus.Client.Model.VersionControlBranchResource)
    Octopus.Client.Repositories.Async.IVcsRunbookRepository Runbooks { get; }
  }
  interface IAccountRepository
    Octopus.Client.Repositories.Async.IResourceRepository
    Octopus.Client.Repositories.Async.ICreate<AccountResource>
    Octopus.Client.Repositories.Async.IModify<AccountResource>
    Octopus.Client.Repositories.Async.IDelete<AccountResource>
    Octopus.Client.Repositories.Async.IGet<AccountResource>
    Octopus.Client.Repositories.Async.IFindByName<AccountResource>
    Octopus.Client.Repositories.Async.IPaginate<AccountResource>
  {
    Octopus.Client.Model.Accounts.AccountType DetermineAccountType()
    Task<List<TAccount>> FindAllOfType(Object)
    Task<TAccount> FindByNameOfType(String)
    Task<List<TAccount>> FindByNamesOfType(IEnumerable<String>)
    Task<List<TAccount>> FindManyOfType(Func<TAccount, Boolean>, Object)
    Task<TAccount> FindOneOfType(Func<TAccount, Boolean>, Object)
    Task<AccountUsageResource> GetAccountUsage(Octopus.Client.Model.Accounts.AccountResource)
    Task<TAccount> GetOfType(String)
    Task<List<TAccount>> GetOfType(String[])
    Task PaginateOfType(Func<ResourceCollection<TAccount>, Boolean>, Object)
    Task<TAccount> RefreshOfType(Octopus.Client.Repositories.Async.TAccount)
  }
  interface IActionTemplateRepository
    Octopus.Client.Repositories.Async.ICreate<ActionTemplateResource>
    Octopus.Client.Repositories.Async.IModify<ActionTemplateResource>
    Octopus.Client.Repositories.Async.IDelete<ActionTemplateResource>
    Octopus.Client.Repositories.Async.IGet<ActionTemplateResource>
    Octopus.Client.Repositories.Async.IFindByName<ActionTemplateResource>
    Octopus.Client.Repositories.Async.IPaginate<ActionTemplateResource>
    Octopus.Client.Repositories.Async.IGetAll<ActionTemplateResource>
  {
    Task<ActionTemplateResource> GetVersion(Octopus.Client.Model.ActionTemplateResource, Int32)
    Task<List<ActionTemplateSearchResource>> Search()
    Task SetLogo(Octopus.Client.Model.ActionTemplateResource, String, Stream)
    Task<ActionUpdateResultResource[]> UpdateActions(Octopus.Client.Model.ActionTemplateResource, Octopus.Client.Model.ActionsUpdateResource)
  }
  interface IArtifactRepository
    Octopus.Client.Repositories.Async.IPaginate<ArtifactResource>
    Octopus.Client.Repositories.Async.IGet<ArtifactResource>
    Octopus.Client.Repositories.Async.ICreate<ArtifactResource>
    Octopus.Client.Repositories.Async.IModify<ArtifactResource>
    Octopus.Client.Repositories.Async.IDelete<ArtifactResource>
  {
    Task<ResourceCollection<ArtifactResource>> FindRegarding(Octopus.Client.Extensibility.IResource)
    Task<Stream> GetContent(Octopus.Client.Model.ArtifactResource)
    Task PutContent(Octopus.Client.Model.ArtifactResource, Stream)
  }
  interface IBackupRepository
  {
    Task<BackupConfigurationResource> GetConfiguration()
    Task<BackupConfigurationResource> ModifyConfiguration(Octopus.Client.Model.BackupConfigurationResource)
  }
  interface IBranchScopedRepository
  {
    Octopus.Client.Repositories.Async.IVcsRunbookRepository Runbooks { get; }
  }
  interface IBuildInformationRepository
  {
    Task Delete(Octopus.Client.Model.BuildInformation.OctopusPackageVersionBuildInformationMappedResource)
    Task DeleteBuilds(IReadOnlyList<OctopusPackageVersionBuildInformationMappedResource>)
    Task<OctopusPackageVersionBuildInformationMappedResource> Get(String)
    Task<ResourceCollection<OctopusPackageVersionBuildInformationMappedResource>> LatestBuilds(Int32, Int32)
    Task<ResourceCollection<OctopusPackageVersionBuildInformationMappedResource>> ListBuilds(String, Int32, Int32)
    Task<OctopusPackageVersionBuildInformationMappedResource> Push(String, String, Octopus.Client.Model.BuildInformation.OctopusBuildInformation, Octopus.Client.Model.OverwriteMode)
    Task<OctopusPackageVersionBuildInformationMappedResource> Push(String, String, Octopus.Client.Model.BuildInformation.OctopusBuildInformation, Boolean)
  }
  interface IBuiltInPackageRepositoryRepository
  {
    Task DeletePackage(Octopus.Client.Model.PackageResource)
    Task DeletePackages(IReadOnlyList<PackageResource>)
    Task<PackageFromBuiltInFeedResource> GetPackage(String, String)
    Task<ResourceCollection<PackageFromBuiltInFeedResource>> LatestPackages(Int32, Int32)
    Task<ResourceCollection<PackageFromBuiltInFeedResource>> ListPackages(String, Int32, Int32)
    Task<PackageFromBuiltInFeedResource> PushPackage(String, Stream, Boolean)
    Task<PackageFromBuiltInFeedResource> PushPackage(String, Stream, Boolean, Boolean)
    Task<PackageFromBuiltInFeedResource> PushPackage(String, Stream, Octopus.Client.Model.OverwriteMode)
    Task<PackageFromBuiltInFeedResource> PushPackage(String, Stream, Octopus.Client.Model.OverwriteMode, Boolean)
  }
  interface ICanExtendSpaceContext`1
  {
    Octopus.Client.Repositories.Async.T UsingContext(Octopus.Client.SpaceContext)
  }
  interface ICertificateConfigurationRepository
    Octopus.Client.Repositories.Async.IGet<CertificateConfigurationResource>
    Octopus.Client.Repositories.Async.IFindByName<CertificateConfigurationResource>
    Octopus.Client.Repositories.Async.IPaginate<CertificateConfigurationResource>
  {
    Task<CertificateConfigurationResource> GetOctopusCertificate()
    Task<Stream> GetPublicCertificate(Octopus.Client.Model.CertificateConfigurationResource)
  }
  interface ICertificateRepository
    Octopus.Client.Repositories.Async.IResourceRepository
    Octopus.Client.Repositories.Async.IGet<CertificateResource>
    Octopus.Client.Repositories.Async.IFindByName<CertificateResource>
    Octopus.Client.Repositories.Async.IPaginate<CertificateResource>
    Octopus.Client.Repositories.Async.ICreate<CertificateResource>
    Octopus.Client.Repositories.Async.IModify<CertificateResource>
    Octopus.Client.Repositories.Async.IDelete<CertificateResource>
  {
    Task Archive(Octopus.Client.Model.CertificateResource)
    Task<Stream> Export(Octopus.Client.Model.CertificateResource, Nullable<CertificateFormat>, String, Boolean)
    Task<Stream> ExportAsPem(Octopus.Client.Model.CertificateResource, Boolean, Octopus.Client.Model.CertificateExportPemOptions)
    Task<CertificateConfigurationResource> GetOctopusCertificate()
    Task<CertificateResource> Replace(Octopus.Client.Model.CertificateResource, String, String)
    Task UnArchive(Octopus.Client.Model.CertificateResource)
  }
  interface IChannelBetaRepository
  {
    Task<ChannelResource> Create(Octopus.Client.Model.ProjectResource, Octopus.Client.Model.ChannelResource, String)
    Task<ChannelResource> Get(Octopus.Client.Model.ProjectResource, String, String)
  }
  interface IChannelRepository
    Octopus.Client.Repositories.Async.ICreate<ChannelResource>
    Octopus.Client.Repositories.Async.ICreateProjectScoped<ChannelResource>
    Octopus.Client.Repositories.Async.IModify<ChannelResource>
    Octopus.Client.Repositories.Async.IGet<ChannelResource>
    Octopus.Client.Repositories.Async.IGetProjectScoped<ChannelResource>
    Octopus.Client.Repositories.Async.IDelete<ChannelResource>
    Octopus.Client.Repositories.Async.IPaginate<ChannelResource>
  {
    Octopus.Client.Repositories.Async.IChannelBetaRepository Beta()
    Task<ChannelEditor> CreateOrModify(Octopus.Client.Model.ProjectResource, String)
    Task<ChannelEditor> CreateOrModify(Octopus.Client.Model.ProjectResource, String, String)
    Task<ChannelResource> FindByName(Octopus.Client.Model.ProjectResource, String)
    Task<IReadOnlyList<ReleaseResource>> GetAllReleases(Octopus.Client.Model.ChannelResource)
    Task<ReleaseResource> GetReleaseByVersion(Octopus.Client.Model.ChannelResource, String)
    Task<ResourceCollection<ReleaseResource>> GetReleases(Octopus.Client.Model.ChannelResource, Int32, Nullable<Int32>, String)
  }
  interface ICommunityActionTemplateRepository
    Octopus.Client.Repositories.Async.IGet<CommunityActionTemplateResource>
  {
    Task<ActionTemplateResource> GetInstalledTemplate(Octopus.Client.Model.CommunityActionTemplateResource)
    Task Install(Octopus.Client.Model.CommunityActionTemplateResource)
    Task UpdateInstallation(Octopus.Client.Model.CommunityActionTemplateResource)
  }
  interface IConfigurationRepository
  {
    Task<T> Get()
    Task<T> Modify(Octopus.Client.Repositories.Async.T)
  }
  interface ICreateProjectScoped`1
  {
    Task<TResource> Create(Octopus.Client.Model.ProjectResource, Octopus.Client.Repositories.Async.TResource, Object)
  }
  interface ICreate`1
  {
    Task<TResource> Create(Octopus.Client.Repositories.Async.TResource, Object)
  }
  interface IDashboardConfigurationRepository
  {
    Task<DashboardConfigurationResource> GetDashboardConfiguration()
    Task<DashboardConfigurationResource> ModifyDashboardConfiguration(Octopus.Client.Model.DashboardConfigurationResource)
  }
  interface IDashboardRepository
  {
    Task<DashboardResource> GetDashboard()
    Task<DashboardResource> GetDynamicDashboard(String[], String[], Octopus.Client.Model.DashboardItemsOptions)
  }
  interface IDefectsRepository
  {
    Task<ResourceCollection<DefectResource>> GetDefects(Octopus.Client.Model.ReleaseResource)
    Task RaiseDefect(Octopus.Client.Model.ReleaseResource, String)
    Task ResolveDefect(Octopus.Client.Model.ReleaseResource)
  }
  interface IDelete`1
  {
    Task Delete(Octopus.Client.Repositories.Async.TResource)
  }
  interface IDeploymentProcessBetaRepository
  {
    Task<DeploymentProcessResource> Get(Octopus.Client.Model.ProjectResource, String)
    Task<DeploymentProcessResource> Modify(Octopus.Client.Model.ProjectResource, Octopus.Client.Model.DeploymentProcessResource, String)
  }
  interface IDeploymentProcessRepository
    Octopus.Client.Repositories.Async.IGet<DeploymentProcessResource>
    Octopus.Client.Repositories.Async.IModify<DeploymentProcessResource>
  {
    Octopus.Client.Repositories.Async.IDeploymentProcessBetaRepository Beta()
    Task<ReleaseTemplateResource> GetTemplate(Octopus.Client.Model.DeploymentProcessResource, Octopus.Client.Model.ChannelResource)
  }
  interface IDeploymentRepository
    Octopus.Client.Repositories.Async.IGet<DeploymentResource>
    Octopus.Client.Repositories.Async.ICreate<DeploymentResource>
    Octopus.Client.Repositories.Async.IPaginate<DeploymentResource>
    Octopus.Client.Repositories.Async.IDelete<DeploymentResource>
  {
    Task<ResourceCollection<DeploymentResource>> FindAll(String[], String[], Int32, Nullable<Int32>)
    Task<ResourceCollection<DeploymentResource>> FindBy(String[], String[], Int32, Nullable<Int32>)
    Task<TaskResource> GetTask(Octopus.Client.Model.DeploymentResource)
    Task Paginate(String[], String[], Func<ResourceCollection<DeploymentResource>, Boolean>)
    Task Paginate(String[], String[], String[], Func<ResourceCollection<DeploymentResource>, Boolean>)
  }
  interface IDeploymentSettingsBetaRepository
  {
    Task<DeploymentSettingsResource> Get(Octopus.Client.Model.ProjectResource, String)
    Task<DeploymentSettingsResource> Modify(Octopus.Client.Model.ProjectResource, Octopus.Client.Model.DeploymentSettingsResource, String)
  }
  interface IDeploymentSettingsRepository
  {
    Octopus.Client.Repositories.Async.IDeploymentSettingsBetaRepository Beta()
    Task<DeploymentSettingsResource> Get(Octopus.Client.Model.ProjectResource)
    Task<DeploymentSettingsResource> Modify(Octopus.Client.Model.ProjectResource, Octopus.Client.Model.DeploymentSettingsResource)
  }
  interface IEnvironmentRepository
    Octopus.Client.Repositories.Async.IFindByName<EnvironmentResource>
    Octopus.Client.Repositories.Async.IPaginate<EnvironmentResource>
    Octopus.Client.Repositories.Async.IGet<EnvironmentResource>
    Octopus.Client.Repositories.Async.ICreate<EnvironmentResource>
    Octopus.Client.Repositories.Async.IModify<EnvironmentResource>
    Octopus.Client.Repositories.Async.IDelete<EnvironmentResource>
    Octopus.Client.Repositories.Async.IGetAll<EnvironmentResource>
  {
    Task<EnvironmentEditor> CreateOrModify(String)
    Task<EnvironmentEditor> CreateOrModify(String, String)
    Task<EnvironmentEditor> CreateOrModify(String, String, Boolean)
    Task<List<MachineResource>> GetMachines(Octopus.Client.Model.EnvironmentResource, Nullable<Int32>, Nullable<Int32>, String, String, Nullable<Boolean>, String, String, String, String)
    Task Sort(String[])
    Task<EnvironmentsSummaryResource> Summary(String, String, String, String, Nullable<Boolean>, String, String, String, String, Nullable<Boolean>)
  }
  interface IEventRepository
    Octopus.Client.Repositories.Async.IGet<EventResource>
    Octopus.Client.Repositories.Async.ICanExtendSpaceContext<IEventRepository>
  {
    Task<IReadOnlyList<EventAgentResource>> GetAgents()
    Task<IReadOnlyList<EventCategoryResource>> GetCategories()
    Task<IReadOnlyList<DocumentTypeResource>> GetDocumentTypes()
    Task<IReadOnlyList<EventGroupResource>> GetGroups()
    Task<ResourceCollection<EventResource>> List(Int32, String, String, Boolean)
    Task<ResourceCollection<EventResource>> List(Int32, Nullable<Int32>, String, String, String, String, Boolean, String, String, String, String, String, String, String, String, Nullable<Int64>, Nullable<Int64>, String, String, String)
  }
  interface IFeaturesConfigurationRepository
  {
    Task<FeaturesConfigurationResource> GetFeaturesConfiguration()
    Task<FeaturesConfigurationResource> ModifyFeaturesConfiguration(Octopus.Client.Model.FeaturesConfigurationResource)
  }
  interface IFeedRepository
    Octopus.Client.Repositories.Async.ICreate<FeedResource>
    Octopus.Client.Repositories.Async.IModify<FeedResource>
    Octopus.Client.Repositories.Async.IDelete<FeedResource>
    Octopus.Client.Repositories.Async.IGet<FeedResource>
    Octopus.Client.Repositories.Async.IFindByName<FeedResource>
    Octopus.Client.Repositories.Async.IPaginate<FeedResource>
  {
    Task<List<PackageResource>> GetVersions(Octopus.Client.Model.FeedResource, String[])
  }
  interface IFindByName`1
    Octopus.Client.Repositories.Async.IPaginate<TResource>
  {
    Task<TResource> FindByName(String, String, Object)
    Task<List<TResource>> FindByNames(IEnumerable<String>, String, Object)
  }
  interface IGetAll`1
  {
    Task<List<TResource>> GetAll()
  }
  interface IGetProjectScoped`1
  {
    Task<TResource> Get(Octopus.Client.Model.ProjectResource, String)
  }
  interface IGet`1
  {
    Task<TResource> Get(String)
    Task<List<TResource>> Get(String[])
    Task<TResource> Refresh(Octopus.Client.Repositories.Async.TResource)
  }
  interface IInterruptionRepository
    Octopus.Client.Repositories.Async.IGet<InterruptionResource>
  {
    Task<UserResource> GetResponsibleUser(Octopus.Client.Model.InterruptionResource)
    Task<ResourceCollection<InterruptionResource>> List(Int32, Nullable<Int32>, Boolean, String)
    Task Submit(Octopus.Client.Model.InterruptionResource)
    Task TakeResponsibility(Octopus.Client.Model.InterruptionResource)
  }
  interface ILibraryVariableSetRepository
    Octopus.Client.Repositories.Async.ICreate<LibraryVariableSetResource>
    Octopus.Client.Repositories.Async.IGet<LibraryVariableSetResource>
    Octopus.Client.Repositories.Async.IModify<LibraryVariableSetResource>
    Octopus.Client.Repositories.Async.IDelete<LibraryVariableSetResource>
    Octopus.Client.Repositories.Async.IFindByName<LibraryVariableSetResource>
    Octopus.Client.Repositories.Async.IPaginate<LibraryVariableSetResource>
  {
    Task<LibraryVariableSetEditor> CreateOrModify(String)
    Task<LibraryVariableSetEditor> CreateOrModify(String, String)
  }
  interface ILicensesRepository
  {
    Task<LicenseResource> GetCurrent()
    Task<LicenseStatusResource> GetStatus()
    Task<LicenseResource> UpdateCurrent(Octopus.Client.Model.LicenseResource)
  }
  interface ILifecyclesRepository
    Octopus.Client.Repositories.Async.IGet<LifecycleResource>
    Octopus.Client.Repositories.Async.ICreate<LifecycleResource>
    Octopus.Client.Repositories.Async.IModify<LifecycleResource>
    Octopus.Client.Repositories.Async.IDelete<LifecycleResource>
    Octopus.Client.Repositories.Async.IFindByName<LifecycleResource>
    Octopus.Client.Repositories.Async.IPaginate<LifecycleResource>
  {
    Task<LifecycleEditor> CreateOrModify(String)
    Task<LifecycleEditor> CreateOrModify(String, String)
  }
  interface IMachinePolicyRepository
    Octopus.Client.Repositories.Async.IFindByName<MachinePolicyResource>
    Octopus.Client.Repositories.Async.IPaginate<MachinePolicyResource>
    Octopus.Client.Repositories.Async.ICreate<MachinePolicyResource>
    Octopus.Client.Repositories.Async.IModify<MachinePolicyResource>
    Octopus.Client.Repositories.Async.IGet<MachinePolicyResource>
    Octopus.Client.Repositories.Async.IDelete<MachinePolicyResource>
  {
    Task<List<MachineResource>> GetMachines(Octopus.Client.Model.MachinePolicyResource)
    Task<MachinePolicyResource> GetTemplate()
  }
  interface IMachineRepository
    Octopus.Client.Repositories.Async.IFindByName<MachineResource>
    Octopus.Client.Repositories.Async.IPaginate<MachineResource>
    Octopus.Client.Repositories.Async.IGet<MachineResource>
    Octopus.Client.Repositories.Async.ICreate<MachineResource>
    Octopus.Client.Repositories.Async.IModify<MachineResource>
    Octopus.Client.Repositories.Async.IDelete<MachineResource>
  {
    Task<MachineEditor> CreateOrModify(String, Octopus.Client.Model.Endpoints.EndpointResource, Octopus.Client.Model.EnvironmentResource[], String[], Octopus.Client.Model.TenantResource[], Octopus.Client.Model.TagResource[], Nullable<TenantedDeploymentMode>)
    Task<MachineEditor> CreateOrModify(String, Octopus.Client.Model.Endpoints.EndpointResource, Octopus.Client.Model.EnvironmentResource[], String[])
    Task<MachineResource> Discover(String, Int32, Nullable<DiscoverableEndpointType>)
    Task<MachineResource> Discover(Octopus.Client.Model.DiscoverMachineOptions)
    Task<List<MachineResource>> FindByThumbprint(String)
    Task<MachineConnectionStatus> GetConnectionStatus(Octopus.Client.Model.MachineResource)
    Task<IReadOnlyList<TaskResource>> GetTasks(Octopus.Client.Model.MachineResource)
    Task<IReadOnlyList<TaskResource>> GetTasks(Octopus.Client.Model.MachineResource, Object)
    Task<ResourceCollection<MachineResource>> List(Int32, Nullable<Int32>, String, String, String, String, Nullable<Boolean>, String, String, String, String, String)
  }
  interface IMachineRoleRepository
  {
    Task<List<String>> GetAllRoleNames()
  }
  interface IMigrationRepository
  {
    Task<MigrationImportResource> Import(Octopus.Client.Model.Migrations.MigrationImportResource)
    Task<MigrationPartialExportResource> PartialExport(Octopus.Client.Model.Migrations.MigrationPartialExportResource)
  }
  interface IModify`1
  {
    Task<TResource> Modify(Octopus.Client.Repositories.Async.TResource)
  }
  interface IOctopusServerNodeRepository
    Octopus.Client.Repositories.Async.IModify<OctopusServerNodeResource>
    Octopus.Client.Repositories.Async.IDelete<OctopusServerNodeResource>
    Octopus.Client.Repositories.Async.IGet<OctopusServerNodeResource>
    Octopus.Client.Repositories.Async.IFindByName<OctopusServerNodeResource>
    Octopus.Client.Repositories.Async.IPaginate<OctopusServerNodeResource>
  {
    Task<OctopusServerNodeDetailsResource> Details(Octopus.Client.Model.OctopusServerNodeResource)
    Task<OctopusServerClusterSummaryResource> Summary()
  }
  interface IOctopusSpaceAsyncBetaRepository
  {
    Octopus.Client.Repositories.Async.IBranchScopedRepository ForBranch(Octopus.Client.Model.VersionControlBranchResource)
  }
  interface IPackageMetadataRepository
  {
    Task<OctopusPackageMetadataMappedResource> Get(String)
    Task<OctopusPackageMetadataMappedResource> Push(String, String, Octopus.Client.Model.PackageMetadata.OctopusPackageMetadata, Octopus.Client.Model.OverwriteMode)
    Task<OctopusPackageMetadataMappedResource> Push(String, String, Octopus.Client.Model.PackageMetadata.OctopusPackageMetadata, Boolean)
  }
  interface IPaginate`1
  {
    Task<List<TResource>> FindAll(String, Object)
    Task<List<TResource>> FindMany(Func<TResource, Boolean>, String, Object)
    Task<TResource> FindOne(Func<TResource, Boolean>, String, Object)
    Task Paginate(Func<ResourceCollection<TResource>, Boolean>, String, Object)
  }
  interface IPerformanceConfigurationRepository
  {
    Task<PerformanceConfigurationResource> Get()
    Task<PerformanceConfigurationResource> Modify(Octopus.Client.Model.PerformanceConfigurationResource)
  }
  interface IProjectBetaRepository
  {
    Task<ConvertProjectToVersionControlledResponse> ConvertToVersionControlled(Octopus.Client.Model.ProjectResource, Octopus.Client.Model.VersionControlSettingsResource, String)
    Task<IReadOnlyList<ChannelResource>> GetAllChannels(Octopus.Client.Model.ProjectResource, String)
    Task<IReadOnlyList<RunbookResource>> GetAllRunbooks(Octopus.Client.Model.ProjectResource, String)
    Task<ChannelResource> GetChannel(Octopus.Client.Model.ProjectResource, String, String)
    Task<ResourceCollection<ChannelResource>> GetChannels(Octopus.Client.Model.ProjectResource, String)
    Task<VersionControlBranchResource> GetVersionControlledBranch(Octopus.Client.Model.ProjectResource, String)
    Task<ResourceCollection<VersionControlBranchResource>> GetVersionControlledBranches(Octopus.Client.Model.ProjectResource)
  }
  interface IProjectGroupRepository
    Octopus.Client.Repositories.Async.IFindByName<ProjectGroupResource>
    Octopus.Client.Repositories.Async.IPaginate<ProjectGroupResource>
    Octopus.Client.Repositories.Async.IGet<ProjectGroupResource>
    Octopus.Client.Repositories.Async.ICreate<ProjectGroupResource>
    Octopus.Client.Repositories.Async.IModify<ProjectGroupResource>
    Octopus.Client.Repositories.Async.IDelete<ProjectGroupResource>
    Octopus.Client.Repositories.Async.IGetAll<ProjectGroupResource>
  {
    Task<ProjectGroupEditor> CreateOrModify(String)
    Task<ProjectGroupEditor> CreateOrModify(String, String)
    Task<List<ProjectResource>> GetProjects(Octopus.Client.Model.ProjectGroupResource)
  }
  interface IProjectRepository
    Octopus.Client.Repositories.Async.IFindByName<ProjectResource>
    Octopus.Client.Repositories.Async.IPaginate<ProjectResource>
    Octopus.Client.Repositories.Async.IGet<ProjectResource>
    Octopus.Client.Repositories.Async.ICreate<ProjectResource>
    Octopus.Client.Repositories.Async.IModify<ProjectResource>
    Octopus.Client.Repositories.Async.IDelete<ProjectResource>
    Octopus.Client.Repositories.Async.IGetAll<ProjectResource>
  {
    Octopus.Client.Repositories.Async.IProjectBetaRepository Beta()
    Task<ProjectEditor> CreateOrModify(String, Octopus.Client.Model.ProjectGroupResource, Octopus.Client.Model.LifecycleResource)
    Task<ProjectEditor> CreateOrModify(String, Octopus.Client.Model.ProjectGroupResource, Octopus.Client.Model.LifecycleResource, String, String)
    Task<IReadOnlyList<ChannelResource>> GetAllChannels(Octopus.Client.Model.ProjectResource)
    Task<IReadOnlyList<ReleaseResource>> GetAllReleases(Octopus.Client.Model.ProjectResource)
    Task<IReadOnlyList<RunbookResource>> GetAllRunbooks(Octopus.Client.Model.ProjectResource)
    Task<IReadOnlyList<RunbookSnapshotResource>> GetAllRunbookSnapshots(Octopus.Client.Model.ProjectResource)
    Task<IReadOnlyList<ProjectTriggerResource>> GetAllTriggers(Octopus.Client.Model.ProjectResource)
    Task<ResourceCollection<ChannelResource>> GetChannels(Octopus.Client.Model.ProjectResource)
    Task<ProgressionResource> GetProgression(Octopus.Client.Model.ProjectResource)
    Task<ReleaseResource> GetReleaseByVersion(Octopus.Client.Model.ProjectResource, String)
    Task<ResourceCollection<ReleaseResource>> GetReleases(Octopus.Client.Model.ProjectResource, Int32, Nullable<Int32>, String)
    Task<ResourceCollection<RunbookResource>> GetRunbooks(Octopus.Client.Model.ProjectResource, Int32, Nullable<Int32>, String)
    Task<RunbookSnapshotResource> GetRunbookSnapshotByName(Octopus.Client.Model.ProjectResource, String)
    Task<ResourceCollection<RunbookSnapshotResource>> GetRunbookSnapshots(Octopus.Client.Model.ProjectResource, Int32, Nullable<Int32>, String)
    Task<ResourceCollection<ProjectTriggerResource>> GetTriggers(Octopus.Client.Model.ProjectResource)
    Task SetLogo(Octopus.Client.Model.ProjectResource, String, Stream)
  }
  interface IProjectTriggerRepository
    Octopus.Client.Repositories.Async.ICreate<ProjectTriggerResource>
    Octopus.Client.Repositories.Async.IModify<ProjectTriggerResource>
    Octopus.Client.Repositories.Async.IGet<ProjectTriggerResource>
    Octopus.Client.Repositories.Async.IDelete<ProjectTriggerResource>
  {
    Task<ProjectTriggerEditor> CreateOrModify(Octopus.Client.Model.ProjectResource, String, Octopus.Client.Model.Triggers.TriggerFilterResource, Octopus.Client.Model.Triggers.TriggerActionResource)
    Task<ProjectTriggerResource> FindByName(Octopus.Client.Model.ProjectResource, String)
    Task<ResourceCollection<ProjectTriggerResource>> FindByRunbook(String[])
  }
  interface IProxyRepository
    Octopus.Client.Repositories.Async.IGet<ProxyResource>
    Octopus.Client.Repositories.Async.ICreate<ProxyResource>
    Octopus.Client.Repositories.Async.IModify<ProxyResource>
    Octopus.Client.Repositories.Async.IDelete<ProxyResource>
    Octopus.Client.Repositories.Async.IFindByName<ProxyResource>
    Octopus.Client.Repositories.Async.IPaginate<ProxyResource>
  {
  }
  interface IReleaseRepository
    Octopus.Client.Repositories.Async.IGet<ReleaseResource>
    Octopus.Client.Repositories.Async.ICreate<ReleaseResource>
    Octopus.Client.Repositories.Async.IPaginate<ReleaseResource>
    Octopus.Client.Repositories.Async.IModify<ReleaseResource>
    Octopus.Client.Repositories.Async.IDelete<ReleaseResource>
  {
    Task<ReleaseResource> Create(Octopus.Client.Model.ReleaseResource, Boolean)
    Task<ResourceCollection<ArtifactResource>> GetArtifacts(Octopus.Client.Model.ReleaseResource, Int32, Nullable<Int32>)
    Task<ResourceCollection<DeploymentResource>> GetDeployments(Octopus.Client.Model.ReleaseResource, Int32, Nullable<Int32>)
    Task<DeploymentPreviewResource> GetPreview(Octopus.Client.Model.DeploymentPromotionTarget)
    Task<LifecycleProgressionResource> GetProgression(Octopus.Client.Model.ReleaseResource)
    Task<DeploymentTemplateResource> GetTemplate(Octopus.Client.Model.ReleaseResource)
    Task<ReleaseResource> SnapshotVariables(Octopus.Client.Model.ReleaseResource)
  }
  interface IResourceRepository
  {
    Octopus.Client.IOctopusAsyncClient Client { get; }
  }
  interface IRetentionPolicyRepository
  {
    Task<TaskResource> ApplyNow(String)
  }
  interface IRunbookProcessRepository
    Octopus.Client.Repositories.Async.IGet<RunbookProcessResource>
    Octopus.Client.Repositories.Async.IModify<RunbookProcessResource>
  {
    Task<RunbookSnapshotTemplateResource> GetTemplate(Octopus.Client.Model.RunbookProcessResource)
  }
  interface IRunbookRepository
    Octopus.Client.Repositories.Async.IFindByName<RunbookResource>
    Octopus.Client.Repositories.Async.IPaginate<RunbookResource>
    Octopus.Client.Repositories.Async.IGet<RunbookResource>
    Octopus.Client.Repositories.Async.ICreate<RunbookResource>
    Octopus.Client.Repositories.Async.IModify<RunbookResource>
    Octopus.Client.Repositories.Async.IDelete<RunbookResource>
  {
    Task<RunbookEditor> CreateOrModify(Octopus.Client.Model.ProjectResource, String, String)
    Task<RunbookResource> FindByName(Octopus.Client.Model.ProjectResource, String)
    Task<RunbookRunPreviewResource> GetPreview(Octopus.Client.Model.DeploymentPromotionTarget)
    Task<RunbookRunTemplateResource> GetRunbookRunTemplate(Octopus.Client.Model.RunbookResource)
    Task<RunbookSnapshotTemplateResource> GetRunbookSnapshotTemplate(Octopus.Client.Model.RunbookResource)
    Task<RunbookRunResource> Run(Octopus.Client.Model.RunbookResource, Octopus.Client.Model.RunbookRunResource)
    Task<RunbookRunResource[]> Run(Octopus.Client.Model.RunbookResource, Octopus.Client.Model.RunbookRunParameters)
  }
  interface IRunbookRunRepository
    Octopus.Client.Repositories.Async.IGet<RunbookRunResource>
    Octopus.Client.Repositories.Async.ICreate<RunbookRunResource>
    Octopus.Client.Repositories.Async.IPaginate<RunbookRunResource>
    Octopus.Client.Repositories.Async.IDelete<RunbookRunResource>
  {
    Task<ResourceCollection<RunbookRunResource>> FindBy(String[], String[], String[], Int32, Nullable<Int32>)
    Task<TaskResource> GetTask(Octopus.Client.Model.RunbookRunResource)
    Task Paginate(String[], String[], String[], Func<ResourceCollection<RunbookRunResource>, Boolean>)
    Task Paginate(String[], String[], String[], String[], Func<ResourceCollection<RunbookRunResource>, Boolean>)
  }
  interface IRunbookSnapshotRepository
    Octopus.Client.Repositories.Async.IGet<RunbookSnapshotResource>
    Octopus.Client.Repositories.Async.ICreate<RunbookSnapshotResource>
    Octopus.Client.Repositories.Async.IPaginate<RunbookSnapshotResource>
    Octopus.Client.Repositories.Async.IModify<RunbookSnapshotResource>
    Octopus.Client.Repositories.Async.IDelete<RunbookSnapshotResource>
  {
    Task<RunbookSnapshotResource> Create(Octopus.Client.Model.RunbookSnapshotResource)
    Task<ResourceCollection<ArtifactResource>> GetArtifacts(Octopus.Client.Model.RunbookSnapshotResource, Int32, Nullable<Int32>)
    Task<RunbookRunPreviewResource> GetPreview(Octopus.Client.Model.DeploymentPromotionTarget)
    Task<ResourceCollection<RunbookRunResource>> GetRunbookRuns(Octopus.Client.Model.RunbookSnapshotResource, Int32, Nullable<Int32>)
    Task<RunbookRunTemplateResource> GetTemplate(Octopus.Client.Model.RunbookSnapshotResource)
    Task<RunbookSnapshotResource> SnapshotVariables(Octopus.Client.Model.RunbookSnapshotResource)
  }
  interface ISchedulerRepository
  {
    Task<ScheduledTaskDetailsResource> GetLogs(String)
    Task<Stream> GetRawLogs(String)
    Task Start()
    Task Start(String)
    Task<SchedulerStatusResource> Status()
    Task Stop()
    Task Stop(String)
    Task Trigger(String)
  }
  interface IScopedUserRoleRepository
    Octopus.Client.Repositories.Async.ICreate<ScopedUserRoleResource>
    Octopus.Client.Repositories.Async.IModify<ScopedUserRoleResource>
    Octopus.Client.Repositories.Async.IDelete<ScopedUserRoleResource>
    Octopus.Client.Repositories.Async.IGet<ScopedUserRoleResource>
    Octopus.Client.Repositories.Async.ICanExtendSpaceContext<IScopedUserRoleRepository>
  {
  }
  interface IServerStatusRepository
  {
    Task<ServerStatusHealthResource> GetServerHealth()
    Task<ServerStatusResource> GetServerStatus()
    Task<SystemInfoResource> GetSystemInfo(Octopus.Client.Model.ServerStatusResource)
  }
  interface ISpaceRepository
    Octopus.Client.Repositories.Async.ICreate<SpaceResource>
    Octopus.Client.Repositories.Async.IModify<SpaceResource>
    Octopus.Client.Repositories.Async.IDelete<SpaceResource>
    Octopus.Client.Repositories.Async.IFindByName<SpaceResource>
    Octopus.Client.Repositories.Async.IPaginate<SpaceResource>
    Octopus.Client.Repositories.Async.IGet<SpaceResource>
  {
    Task<SpaceSearchResult[]> Search(String, String)
    Task SetLogo(Octopus.Client.Model.SpaceResource, String, Stream)
  }
  interface ISubscriptionRepository
    Octopus.Client.Repositories.Async.IFindByName<SubscriptionResource>
    Octopus.Client.Repositories.Async.IPaginate<SubscriptionResource>
    Octopus.Client.Repositories.Async.ICreate<SubscriptionResource>
    Octopus.Client.Repositories.Async.IModify<SubscriptionResource>
    Octopus.Client.Repositories.Async.IGet<SubscriptionResource>
    Octopus.Client.Repositories.Async.IDelete<SubscriptionResource>
  {
    Task<SubscriptionEditor> CreateOrModify(String, Octopus.Client.Model.EventNotificationSubscription, Boolean)
  }
  interface ITagSetRepository
    Octopus.Client.Repositories.Async.ICreate<TagSetResource>
    Octopus.Client.Repositories.Async.IModify<TagSetResource>
    Octopus.Client.Repositories.Async.IGet<TagSetResource>
    Octopus.Client.Repositories.Async.IDelete<TagSetResource>
    Octopus.Client.Repositories.Async.IFindByName<TagSetResource>
    Octopus.Client.Repositories.Async.IPaginate<TagSetResource>
    Octopus.Client.Repositories.Async.IGetAll<TagSetResource>
  {
    Task<TagSetEditor> CreateOrModify(String)
    Task<TagSetEditor> CreateOrModify(String, String)
    Task Sort(String[])
  }
  interface ITaskRepository
    Octopus.Client.Repositories.Async.IPaginate<TaskResource>
    Octopus.Client.Repositories.Async.IGet<TaskResource>
    Octopus.Client.Repositories.Async.ICreate<TaskResource>
    Octopus.Client.Repositories.Async.ICanExtendSpaceContext<ITaskRepository>
  {
    Task Cancel(Octopus.Client.Model.TaskResource)
    Task<TaskResource> ExecuteActionTemplate(Octopus.Client.Model.ActionTemplateResource, Dictionary<String, PropertyValueResource>, String[], String[], String[], String, Nullable<TargetType>)
    Task<TaskResource> ExecuteAdHocScript(String, String[], String[], String[], String, String, Nullable<TargetType>)
    Task<TaskResource> ExecuteBackup(String)
    Task<TaskResource> ExecuteCalamariUpdate(String, String[])
    Task<TaskResource> ExecuteCommunityActionTemplatesSynchronisation(String)
    Task<TaskResource> ExecuteHealthCheck(String, Int32, Int32, String, String[], String, String, String[])
    Task<TaskResource> ExecuteTentacleUpgrade(String, String, String[], String, String, String[])
    Task<TaskResourceCollection> GetActiveWithSummary(Int32, Int32)
    Task<List<TaskResource>> GetAllActive(Int32)
    Task<TaskResourceCollection> GetAllWithSummary(Int32, Int32)
    Task<TaskDetailsResource> GetDetails(Octopus.Client.Model.TaskResource, Nullable<Boolean>, Nullable<Int32>)
    Task<IReadOnlyList<TaskResource>> GetQueuedBehindTasks(Octopus.Client.Model.TaskResource)
    Task<String> GetRawOutputLog(Octopus.Client.Model.TaskResource)
    Task<TaskTypeResource[]> GetTaskTypes()
    Task ModifyState(Octopus.Client.Model.TaskResource, Octopus.Client.Model.TaskState, String)
    Task Rerun(Octopus.Client.Model.TaskResource)
    Task WaitForCompletion(Octopus.Client.Model.TaskResource, Int32, Int32, Action<TaskResource[]>)
    Task WaitForCompletion(Octopus.Client.Model.TaskResource[], Int32, Int32, Action<TaskResource[]>)
    Task WaitForCompletion(Octopus.Client.Model.TaskResource[], Int32, Int32, Func<TaskResource[], Task>)
    Task WaitForCompletion(Octopus.Client.Model.TaskResource[], Int32, Nullable<TimeSpan>, Func<TaskResource[], Task>)
  }
  interface ITeamsRepository
    Octopus.Client.Repositories.Async.ICreate<TeamResource>
    Octopus.Client.Repositories.Async.IModify<TeamResource>
    Octopus.Client.Repositories.Async.IDelete<TeamResource>
    Octopus.Client.Repositories.Async.IFindByName<TeamResource>
    Octopus.Client.Repositories.Async.IPaginate<TeamResource>
    Octopus.Client.Repositories.Async.IGet<TeamResource>
    Octopus.Client.Repositories.Async.ICanExtendSpaceContext<ITeamsRepository>
  {
    Task<List<ScopedUserRoleResource>> GetScopedUserRoles(Octopus.Client.Model.TeamResource)
  }
  interface ITenantRepository
    Octopus.Client.Repositories.Async.ICreate<TenantResource>
    Octopus.Client.Repositories.Async.IModify<TenantResource>
    Octopus.Client.Repositories.Async.IGet<TenantResource>
    Octopus.Client.Repositories.Async.IDelete<TenantResource>
    Octopus.Client.Repositories.Async.IFindByName<TenantResource>
    Octopus.Client.Repositories.Async.IPaginate<TenantResource>
    Octopus.Client.Repositories.Async.IGetAll<TenantResource>
  {
    Task<TenantEditor> CreateOrModify(String)
    Task<TenantEditor> CreateOrModify(String, String)
    Task<TenantEditor> CreateOrModify(String, String, String)
    Task<List<TenantResource>> FindAll(String, String[], Int32)
    Task<List<TenantsMissingVariablesResource>> GetMissingVariables(String, String, String)
    Task<TenantVariableResource> GetVariables(Octopus.Client.Model.TenantResource)
    Task<TenantVariableResource> ModifyVariables(Octopus.Client.Model.TenantResource, Octopus.Client.Model.TenantVariableResource)
    Task SetLogo(Octopus.Client.Model.TenantResource, String, Stream)
    Task<MultiTenancyStatusResource> Status()
  }
  interface ITenantVariablesRepository
    Octopus.Client.Repositories.Async.IGetAll<TenantVariableResource>
  {
    Task<List<TenantVariableResource>> GetAll(Octopus.Client.Model.ProjectResource)
  }
  interface IUpgradeConfigurationRepository
    Octopus.Client.Repositories.Async.IGet<UpgradeConfigurationResource>
    Octopus.Client.Repositories.Async.IModify<UpgradeConfigurationResource>
  {
    Task<UpgradeConfigurationResource> Get()
  }
  interface IUserInvitesRepository
  {
    Task<InvitationResource> Invite(String)
    Task<InvitationResource> Invite(Octopus.Client.Model.ReferenceCollection)
  }
  interface IUserPermissionsRepository
    Octopus.Client.Repositories.Async.ICanExtendSpaceContext<IUserPermissionsRepository>
  {
    Task<Stream> Export(Octopus.Client.Model.UserPermissionSetResource)
    Task<UserPermissionSetResource> Get(Octopus.Client.Model.UserResource)
    Task<UserPermissionSetResource> GetConfiguration(Octopus.Client.Model.UserResource)
  }
  interface IUserRepository
    Octopus.Client.Repositories.Async.IPaginate<UserResource>
    Octopus.Client.Repositories.Async.IGet<UserResource>
    Octopus.Client.Repositories.Async.IModify<UserResource>
    Octopus.Client.Repositories.Async.IDelete<UserResource>
    Octopus.Client.Repositories.Async.ICreate<UserResource>
  {
    Task<UserResource> Create(String, String, String, String)
    Task<ApiKeyCreatedResource> CreateApiKey(Octopus.Client.Model.UserResource, String, Nullable<DateTimeOffset>)
    Task<UserResource> CreateServiceAccount(String, String)
    Task<UserResource> FindByUsername(String)
    Task<List<ApiKeyResource>> GetApiKeys(Octopus.Client.Model.UserResource)
    Task<UserResource> GetCurrent()
    Task<SpaceResource[]> GetSpaces(Octopus.Client.Model.UserResource)
    Task<InvitationResource> Invite(String)
    Task<InvitationResource> Invite(Octopus.Client.Model.ReferenceCollection)
    Task<UserResource> Register(Octopus.Client.Model.RegisterCommand)
    Task RevokeApiKey(Octopus.Client.Model.ApiKeyResourceBase)
    Task SignIn(Octopus.Client.Model.LoginCommand)
    Task SignIn(String, String, Boolean)
    Task SignOut()
  }
  interface IUserRolesRepository
    Octopus.Client.Repositories.Async.IFindByName<UserRoleResource>
    Octopus.Client.Repositories.Async.IPaginate<UserRoleResource>
    Octopus.Client.Repositories.Async.IGet<UserRoleResource>
    Octopus.Client.Repositories.Async.ICreate<UserRoleResource>
    Octopus.Client.Repositories.Async.IModify<UserRoleResource>
    Octopus.Client.Repositories.Async.IDelete<UserRoleResource>
  {
  }
  interface IUserTeamsRepository
    Octopus.Client.Repositories.Async.ICanExtendSpaceContext<IUserTeamsRepository>
  {
    Task<TeamNameResource[]> Get(Octopus.Client.Model.UserResource)
  }
  interface IVariableSetRepository
    Octopus.Client.Repositories.Async.IGet<VariableSetResource>
    Octopus.Client.Repositories.Async.IModify<VariableSetResource>
    Octopus.Client.Repositories.Async.IGetAll<VariableSetResource>
  {
    Task<String[]> GetVariableNames(String, String[])
    Task<VariableSetResource> GetVariablePreview(String, String, String, String, String, String, String, String)
  }
  interface IVcsRunbookRepository
  {
    Task<VcsRunbookResource> Create(Octopus.Client.Model.VcsRunbookResource, String)
    Task Delete(Octopus.Client.Model.VcsRunbookResource, String)
    Task<VcsRunbookResource> Get(String)
    Task<ResourceCollection<VcsRunbookResource>> List(String, Int32, Nullable<Int32>)
    Task<VcsRunbookResource> Modify(Octopus.Client.Model.VcsRunbookResource, String)
  }
  interface IWorkerPoolRepository
    Octopus.Client.Repositories.Async.IFindByName<WorkerPoolResource>
    Octopus.Client.Repositories.Async.IPaginate<WorkerPoolResource>
    Octopus.Client.Repositories.Async.IGet<WorkerPoolResource>
    Octopus.Client.Repositories.Async.ICreate<WorkerPoolResource>
    Octopus.Client.Repositories.Async.IModify<WorkerPoolResource>
    Octopus.Client.Repositories.Async.IDelete<WorkerPoolResource>
    Octopus.Client.Repositories.Async.IGetAll<WorkerPoolResource>
  {
    Task<WorkerPoolEditor> CreateOrModify(String)
    Task<WorkerPoolEditor> CreateOrModify(String, String)
    Task<List<WorkerResource>> GetMachines(Octopus.Client.Model.WorkerPoolResource, Nullable<Int32>, Nullable<Int32>, String, Nullable<Boolean>, String, String)
    Task Sort(String[])
    Task<WorkerPoolsSummaryResource> Summary(String, String, String, Nullable<Boolean>, String, String, Nullable<Boolean>)
  }
  interface IWorkerRepository
    Octopus.Client.Repositories.Async.IFindByName<WorkerResource>
    Octopus.Client.Repositories.Async.IPaginate<WorkerResource>
    Octopus.Client.Repositories.Async.IGet<WorkerResource>
    Octopus.Client.Repositories.Async.ICreate<WorkerResource>
    Octopus.Client.Repositories.Async.IModify<WorkerResource>
    Octopus.Client.Repositories.Async.IDelete<WorkerResource>
  {
    Task<WorkerEditor> CreateOrModify(String, Octopus.Client.Model.Endpoints.EndpointResource, Octopus.Client.Model.WorkerPoolResource[])
    Task<WorkerResource> Discover(String, Int32, Nullable<DiscoverableEndpointType>)
    Task<List<WorkerResource>> FindByThumbprint(String)
    Task<MachineConnectionStatus> GetConnectionStatus(Octopus.Client.Model.WorkerResource)
    Task<ResourceCollection<WorkerResource>> List(Int32, Nullable<Int32>, String, String, String, Nullable<Boolean>, String, String, String)
  }
  class OctopusSpaceAsyncBetaRepository
    Octopus.Client.Repositories.Async.IOctopusSpaceAsyncBetaRepository
  {
    .ctor(Octopus.Client.IOctopusAsyncRepository)
    Octopus.Client.Repositories.Async.IBranchScopedRepository ForBranch(Octopus.Client.Model.VersionControlBranchResource)
  }
  class SpaceScopedOperationOutsideOfCurrentSpaceContextException
    ISerializable
    _Exception
    Exception
  {
    .ctor(String, Octopus.Client.SpaceContext)
  }
  class VcsRunbookRepository
    Octopus.Client.Repositories.Async.IVcsRunbookRepository
  {
    .ctor(Octopus.Client.IOctopusAsyncRepository, Octopus.Client.Model.VersionControlBranchResource)
    Task<VcsRunbookResource> Create(Octopus.Client.Model.VcsRunbookResource, String)
    Task Delete(Octopus.Client.Model.VcsRunbookResource, String)
    Task<VcsRunbookResource> Get(String)
    Task<ResourceCollection<VcsRunbookResource>> List(String, Int32, Nullable<Int32>)
    Task<VcsRunbookResource> Modify(Octopus.Client.Model.VcsRunbookResource, String)
  }
}
Octopus.Client.Serialization
{
  class AccountConverter
    Octopus.Client.Serialization.InheritedClassConverter<AccountResource, AccountType>
  {
    .ctor()
  }
  class DateConverter
    IsoDateTimeConverter
  {
    .ctor()
  }
  class EndpointConverter
    Octopus.Client.Serialization.InheritedClassConverter<EndpointResource, CommunicationStyle>
  {
    .ctor()
  }
  class EndpointWithMultipleAuthenticationConverter
    Octopus.Client.Serialization.InheritedClassConverter<IEndpointWithMultipleAuthenticationResource, MultipleAccountType>
  {
    .ctor()
  }
  class FeedConverter
    Octopus.Client.Serialization.InheritedClassConverter<FeedResource, FeedType>
  {
    .ctor()
  }
  class HrefConverter
    JsonConverter
  {
    .ctor(Func<String>)
    Boolean CanConvert(Type)
    Object ReadJson(JsonReader, Type, Object, JsonSerializer)
    void WriteJson(JsonWriter, Object, JsonSerializer)
  }
  abstract class InheritedClassConverter`2
    JsonConverter
  {
    Boolean CanConvert(Type)
    Object ReadJson(JsonReader, Type, Object, JsonSerializer)
    void WriteJson(JsonWriter, Object, JsonSerializer)
  }
  abstract class JsonSerialization
  {
    static Octopus.Client.Serialization.T DeserializeObject(String)
    static JsonSerializerSettings GetDefaultSerializerSettings()
    static String SerializeObject(Object)
  }
  class MultiIsoDateTimeFormatConverter
    JsonConverter
  {
    .ctor(String, String[])
    Boolean CanConvert(Type)
    Object ReadJson(JsonReader, Type, Object, JsonSerializer)
    void WriteJson(JsonWriter, Object, JsonSerializer)
  }
  class PersistenceSettingsConverter
    Octopus.Client.Serialization.InheritedClassConverter<PersistenceSettingsResource, PersistenceSettingsType>
  {
    .ctor()
  }
  abstract class Serializer
  {
    static Object Deserialize(String)
    static String Serialize(Object, Octopus.Client.Serialization.T)
    static String Serialize(Object)
  }
  class TriggerActionConverter
    Octopus.Client.Serialization.InheritedClassConverter<TriggerActionResource, TriggerActionType>
  {
    .ctor()
  }
  class TriggerFilterConverter
    Octopus.Client.Serialization.InheritedClassConverter<TriggerFilterResource, TriggerFilterType>
  {
    .ctor()
  }
  class VersionControlSettingsConverter
    Octopus.Client.Serialization.InheritedClassConverter<VersionControlCredentialsResource, VersionControlCredentialsType>
  {
    .ctor()
  }
}
Octopus.Client.Util
{
  class HashCodeCombiner
  {
    .ctor()
    Int32 CombinedHash { get; }
    Octopus.Client.Util.HashCodeCombiner AddInt32(Int32)
    Octopus.Client.Util.HashCodeCombiner AddObject(Int32)
    Octopus.Client.Util.HashCodeCombiner AddObject(Boolean)
    Octopus.Client.Util.HashCodeCombiner AddObject(Object)
    static Int32 GetHashCode(Object[])
  }
  class PackageIdentityParser
  {
    .ctor()
    static Boolean TryParsePackageIdAndVersion(String, String&, Octopus.Client.Model.SemanticVersion&)
  }
}
Octopus.Client.Validation
{
  class ContainsSomeValidCharactersAttribute
    _Attribute
    Attribute
  {
    .ctor()
  }
  class NonEmptyCollectionAttribute
    _Attribute
    ValidationAttribute
  {
    .ctor()
    Boolean IsValid(Object)
  }
  class NonEmptyCollectionItemAttribute
    _Attribute
    ValidationAttribute
  {
    .ctor()
    Boolean IsValid(Object)
  }
  class PasswordComplexityAttribute
    _Attribute
    ValidationAttribute
  {
    static System.String DefaultMessage
    .ctor()
    static Boolean IsPasswordStrongEnough(String)
    Boolean IsValid(Object)
  }
  class PathSegmentAttribute
    _Attribute
    Attribute
  {
    .ctor()
  }
  class ValidSemanticVersionOrMaskAttribute
    _Attribute
    ValidationAttribute
  {
    .ctor()
    Boolean IsValid(Object)
  }
}